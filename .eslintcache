[{"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\index.js":"1","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\reportWebVitals.js":"2","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\redux\\store.js":"3","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\App.js":"4","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\helper\\scroll-to-top.js":"5","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\Routes\\Routes.jsx":"6","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\navbar\\Navbar.jsx":"7","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\redux\\reducers\\index.js":"8","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\AllCharacters.js":"9","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\Homepage.js":"10","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\LoginPage.js":"11","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\characterCreation\\CreateCharacter.js":"12","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\spells\\IndividualSpell.js":"13","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\SignUpForm.jsx":"14","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\Classes.jsx":"15","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\IndividualSubClass.jsx":"16","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\SubClasses.jsx":"17","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\StartingEquipments.jsx":"18","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\AllEquipment.jsx":"19","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\IndividualEquipment.jsx":"20","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\IndividualFeature.jsx":"21","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\DisplayEquipment.jsx":"22","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Bonus.jsx":"23","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Language.jsx":"24","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Races.jsx":"25","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\IndividualRace.jsx":"26","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\Features.jsx":"27","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Proficiency.jsx":"28","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Trait.jsx":"29","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\spells\\Spells.jsx":"30","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\monsters\\Monsters.jsx":"31","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\builds\\Builds.jsx":"32","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\monsters\\ConditionImmunity.jsx":"33","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\characterCreation\\CharacterCreationForm.jsx":"34","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\profile\\Profile.jsx":"35","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\monsters\\IndividualMonster.jsx":"36","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\redux\\reducers\\actionTypes.js":"37","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\builds\\DisplayCharacter.jsx":"38","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\IndividualClass.jsx":"39","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Skills.jsx":"40","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\ClassLevels.jsx":"41","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\ClassSpells.jsx":"42","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\DisplayProficiencies.jsx":"43","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\spells\\SpellDisplay.js":"44","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\Feature.jsx":"45","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\SubClass.jsx":"46","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\StartingEquipment.jsx":"47","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\Classes.jsx":"48","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\DisplayClass.jsx":"49","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\DisplaySubClass.jsx":"50","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\SubClassSpells.jsx":"51","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\FeatureChoice.jsx":"52","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\monsters\\DisplayMonster.jsx":"53","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\DisplayFeatures.jsx":"54","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\DisplayRace.jsx":"55","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Proficiencies.jsx":"56","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\profile\\displayUser\\UserProfile.jsx":"57","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\profile\\displayCharacters\\DisplayUserCharacters.jsx":"58","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\SavingThrows.jsx":"59","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Subclass.jsx":"60","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\SpellCasting.jsx":"61","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Skill.jsx":"62","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Choices.jsx":"63","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\DisplayClass.jsx":"64","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\SpellCastingInfo.jsx":"65","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\PChoices.jsx":"66","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\SpellCastingDesc.jsx":"67"},{"size":614,"mtime":1611633674163,"results":"68","hashOfConfig":"69"},{"size":375,"mtime":1611633674164,"results":"70","hashOfConfig":"69"},{"size":277,"mtime":1611633674164,"results":"71","hashOfConfig":"69"},{"size":619,"mtime":1612151535338,"results":"72","hashOfConfig":"69"},{"size":359,"mtime":1611891279365,"results":"73","hashOfConfig":"69"},{"size":5684,"mtime":1612107561407,"results":"74","hashOfConfig":"69"},{"size":3511,"mtime":1612022951228,"results":"75","hashOfConfig":"69"},{"size":12505,"mtime":1612570642422,"results":"76","hashOfConfig":"69"},{"size":756,"mtime":1611964972979,"results":"77","hashOfConfig":"69"},{"size":1835,"mtime":1611964972980,"results":"78","hashOfConfig":"69"},{"size":2392,"mtime":1611964972980,"results":"79","hashOfConfig":"69"},{"size":384,"mtime":1611969514121,"results":"80","hashOfConfig":"69"},{"size":8402,"mtime":1612063952950,"results":"81","hashOfConfig":"69"},{"size":4224,"mtime":1611964972981,"results":"82","hashOfConfig":"69"},{"size":715,"mtime":1611976553243,"results":"83","hashOfConfig":"69"},{"size":2898,"mtime":1612111007374,"results":"84","hashOfConfig":"69"},{"size":1118,"mtime":1612066494255,"results":"85","hashOfConfig":"69"},{"size":1138,"mtime":1612066494248,"results":"86","hashOfConfig":"69"},{"size":1485,"mtime":1612066494240,"results":"87","hashOfConfig":"69"},{"size":3363,"mtime":1612111007371,"results":"88","hashOfConfig":"69"},{"size":3893,"mtime":1612111007367,"results":"89","hashOfConfig":"69"},{"size":5656,"mtime":1612022951216,"results":"90","hashOfConfig":"69"},{"size":1998,"mtime":1612066494259,"results":"91","hashOfConfig":"69"},{"size":2103,"mtime":1611964973008,"results":"92","hashOfConfig":"69"},{"size":1220,"mtime":1611964973009,"results":"93","hashOfConfig":"69"},{"size":9557,"mtime":1611964973008,"results":"94","hashOfConfig":"69"},{"size":1103,"mtime":1612066494232,"results":"95","hashOfConfig":"69"},{"size":2127,"mtime":1611964973009,"results":"96","hashOfConfig":"69"},{"size":2867,"mtime":1611964973009,"results":"97","hashOfConfig":"69"},{"size":1939,"mtime":1612111007378,"results":"98","hashOfConfig":"69"},{"size":1358,"mtime":1611976235987,"results":"99","hashOfConfig":"69"},{"size":1474,"mtime":1612111070703,"results":"100","hashOfConfig":"69"},{"size":2103,"mtime":1611964973006,"results":"101","hashOfConfig":"69"},{"size":27372,"mtime":1612570948034,"results":"102","hashOfConfig":"69"},{"size":1135,"mtime":1611964973007,"results":"103","hashOfConfig":"69"},{"size":7348,"mtime":1611976235986,"results":"104","hashOfConfig":"69"},{"size":800,"mtime":1612045932580,"results":"105","hashOfConfig":"69"},{"size":15914,"mtime":1612151477897,"results":"106","hashOfConfig":"69"},{"size":5893,"mtime":1612111007356,"results":"107","hashOfConfig":"69"},{"size":1535,"mtime":1611976553246,"results":"108","hashOfConfig":"69"},{"size":5429,"mtime":1612063952941,"results":"109","hashOfConfig":"69"},{"size":1353,"mtime":1612022951192,"results":"110","hashOfConfig":"69"},{"size":3175,"mtime":1612111007352,"results":"111","hashOfConfig":"69"},{"size":330,"mtime":1611976235988,"results":"112","hashOfConfig":"69"},{"size":324,"mtime":1611895223699,"results":"113","hashOfConfig":"69"},{"size":333,"mtime":1611895223704,"results":"114","hashOfConfig":"69"},{"size":385,"mtime":1611895223702,"results":"115","hashOfConfig":"69"},{"size":1103,"mtime":1612066494193,"results":"116","hashOfConfig":"69"},{"size":398,"mtime":1611964973001,"results":"117","hashOfConfig":"69"},{"size":386,"mtime":1611964973003,"results":"118","hashOfConfig":"69"},{"size":634,"mtime":1611944980020,"results":"119","hashOfConfig":"69"},{"size":335,"mtime":1612066494216,"results":"120","hashOfConfig":"69"},{"size":337,"mtime":1611952069045,"results":"121","hashOfConfig":"69"},{"size":384,"mtime":1611944980017,"results":"122","hashOfConfig":"69"},{"size":1515,"mtime":1611876263392,"results":"123","hashOfConfig":"69"},{"size":537,"mtime":1612111007360,"results":"124","hashOfConfig":"69"},{"size":513,"mtime":1611964973008,"results":"125","hashOfConfig":"69"},{"size":1454,"mtime":1612111049784,"results":"126","hashOfConfig":"69"},{"size":310,"mtime":1611964972992,"results":"127","hashOfConfig":"69"},{"size":305,"mtime":1611964973000,"results":"128","hashOfConfig":"69"},{"size":750,"mtime":1612022951204,"results":"129","hashOfConfig":"69"},{"size":1622,"mtime":1611976553245,"results":"130","hashOfConfig":"69"},{"size":495,"mtime":1612203369975,"results":"131","hashOfConfig":"69"},{"size":383,"mtime":1611964972983,"results":"132","hashOfConfig":"69"},{"size":488,"mtime":1612066494212,"results":"133","hashOfConfig":"69"},{"size":627,"mtime":1612203369979,"results":"134","hashOfConfig":"69"},{"size":206,"mtime":1612066494209,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"puc3y2",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"138"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"138"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"138"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"138"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"138"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"138"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"138"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"138"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"138"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\index.js",[],["281","282"],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\reportWebVitals.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\redux\\store.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\App.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\helper\\scroll-to-top.js",["283"],"import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass ScrollToTop extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop)\r\n","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\Routes\\Routes.jsx",["284"],"import React from 'react'\r\n\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\n// Main Imports\r\nimport Homepage from '../components/Homepage'\r\nimport AllCharacters from '../components/AllCharacters'\r\n// Clases Imports\r\nimport Classes from '../components/classes/Classes'\r\nimport IndividualClass from '../components/classes/classes/displayClass/individualClass/IndividualClass'\r\nimport SubClasses from '../components/classes/subclasses/SubClasses'\r\nimport IndividualSubClass from '../components/classes/subclasses/IndividualSubClass'\r\nimport Features from '../components/classes/features/Features'\r\nimport IndividualFeature from '../components/classes/features/IndividualFeature'\r\nimport StartingEquipments from '../components/classes/startingEquipment/StartingEquipments'\r\nimport IndividualEquipment from '../components/classes/startingEquipment/IndividualEquipment'\r\nimport DisplayProficiencies from '../components/classes/classes/displayClass/individualClass/DisplayProficiencies'\r\nimport ClassLevels from '../components/classes/classes/displayClass/individualClass/ClassLevels'\r\nimport Skills from '../components/classes/classes/displayClass/individualClass/Skills'\r\nimport DisplayEquipment from '../components/classes/startingEquipment/DisplayEquipment'\r\nimport AllEquipment from '../components/classes/startingEquipment/AllEquipment'\r\n// Races Imports\r\nimport Races from '../components/races/Races'\r\nimport IndividualRace from '../components/races/IndividualRace'\r\nimport Bonus from '../components/races/Bonus'\r\nimport Spells from '../components/spells/Spells'\r\nimport Language from '../components/races/Language'\r\nimport Trait from '../components/races/Trait'\r\nimport IndividualSpell from '../components/spells/IndividualSpell'\r\nimport Proficiency from '../components/races/Proficiency'\r\n// Monsters Imports\r\nimport Monsters from '../components/monsters/Monsters'\r\nimport IndividualMonster from '../components/monsters/IndividualMonster'\r\nimport ConditionImmunity from '../components/monsters/ConditionImmunity'\r\n// Create Character Imports\r\nimport CreateCharacter from '../components/characterCreation/CreateCharacter'\r\nimport CharacterCreationForm from '../components/characterCreation/CharacterCreationForm'\r\nimport ClassSpells from '../components/classes/classes/displayClass/individualClass/ClassSpells'\r\n// Builds Folder\r\nimport Builds from '../components/builds/Builds'\r\nimport DisplayCharacter from '../components/builds/DisplayCharacter'\r\n// SignUp form\r\nimport SignUpForm from '../components/SignUpForm'\r\n// userprofile\r\nimport Profile from '../components/profile/Profile'\r\n// Login Form\r\nimport LoginForm from '../components/LoginPage'\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Homepage} />\r\n      <Route path=\"/builds\" component={Builds} />\r\n      <Route path=\"/character/:id\" component={DisplayCharacter} />\r\n      <Route path=\"/allCharacters\" component={AllCharacters} />\r\n      <Route exact path=\"/classes\" component={Classes} />\r\n      <Route exact path=\"/class/:index\" component={IndividualClass} />\r\n      <Route exact path=\"/subclasses\" component={SubClasses} />\r\n      <Route exact path=\"/subclass/:index\" component={IndividualSubClass} />\r\n      <Route path=\"/feature/:index\" component={IndividualFeature} />\r\n      <Route exact path=\"/features\" component={Features} />\r\n      <Route\r\n        exact\r\n        path=\"/starting-equipment/:index\"\r\n        component={IndividualEquipment}\r\n      />\r\n      <Route exact path=\"/starting-equipments\" component={StartingEquipments} />\r\n      {/* RACE PROFICIENCY ROUTE NEEDS TO BE HERE TO FUNCTION; yes, the below classes proficieny route still works, i checked */}\r\n      <Route path=\"/races/proficiencies/:proficiency\" component={Proficiency} />\r\n      {/* END RACE PROFICIENY ROUTE FIX */}\r\n      <Route\r\n        exact\r\n        path=\"/proficiencies/:index\"\r\n        component={DisplayProficiencies}\r\n      />\r\n      <Route exact path=\"/class/:index/levels\" component={ClassLevels} />\r\n      <Route path=\"/skills/:index\" component={Skills} />\r\n      <Route path=\"/classSpells/:index/spells\" component={ClassSpells} />\r\n      <Route path=\"/equipment/:index\" component={DisplayEquipment} />\r\n      <Route path=\"/allequipment\" component={AllEquipment} />\r\n      {/* RACES ROUTES BELOW */}\r\n      <Route path=\"/races/:race\" component={IndividualRace} />\r\n      <Route eaxct path=\"/races\" component={Races} />\r\n      <Route path=\"/bonus/:bonus\" component={Bonus} />\r\n      <Route path=\"/spells/:spell\" component={IndividualSpell} />\r\n      <Route eaxct path=\"/spells\" component={Spells} />\r\n      <Route path=\"/languages/:language\" component={Language} />\r\n      <Route path=\"/traits/:trait\" component={Trait} />\r\n      {/* <Route path=\"/races/proficiencies/:proficiency\" component={Proficiency} /> */}\r\n      {/* END OF RACES ROUTES */}\r\n\r\n      {/* MONSTERS ROUTES BELOW */}\r\n      <Route path=\"/monsters/:monster\" component={IndividualMonster} />\r\n      <Route exact path=\"/monsters\" component={Monsters} />\r\n      <Route\r\n        path=\"/conditionImmunity/:condition\"\r\n        component={ConditionImmunity}\r\n      />\r\n      {/* END OF MONSTERS ROUTES */}\r\n\r\n      {/* CREATE CHARACTER ROUTES */}\r\n      {/* <Route path=\"/createCharacter\" component={CreateCharacter} /> */}\r\n      <Route path=\"/CharacterCreation\" component={CharacterCreationForm} />\r\n      {/* END OF CREATE CHARACTER ROUTES */}\r\n\r\n      {/* SIGNUP FORM */}\r\n      <Route path=\"/signup\" component={SignUpForm} />\r\n      <Route path=\"/userprofile\" component={Profile} />\r\n\r\n      {/* LOGIN FORM */}\r\n      <Route path=\"/login\" component={LoginForm} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\navbar\\Navbar.jsx",["285"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logoutUser } from '../../redux/reducers'\r\nimport '../../css/Navbar.css'\r\nclass Navbar extends React.Component {\r\n  render() {\r\n    let bool = false\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" style={{ textDecoration: 'none' }}>Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/classes\" style={{ textDecoration: 'none' }}>Classes</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/races\" style={{ textDecoration: 'none' }}>Races</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/spells\" style={{ textDecoration: 'none' }}>Spells</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/monsters\" style={{ textDecoration: 'none' }}>Monsters</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/builds\">Characters</Link>\r\n              </li>\r\n\r\n              {this.props.currentUser !== undefined ? (\r\n                this.props.currentUser.token !== undefined ? (\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/CharacterCreation\" style={{ textDecoration: 'none' }}>Create Character</Link>\r\n                  </li>\r\n                ) : (\r\n                  <span />\r\n                )\r\n              ) : (\r\n                <span />\r\n              )}\r\n\r\n              <div id=\"dropdown\" className=\"dropdown\">\r\n                <li className=\"dropbtn\">Profile</li>\r\n                <div className=\"dropdown-content\">\r\n                  {this.props.currentUser ? (\r\n                    <span>\r\n                      <Link to=\"/userprofile\" style={{ textDecoration: 'none' }}>User Profile</Link>\r\n                      <Link to=\"/\" onClick={(e) => this.props.logoutUser()} style={{ textDecoration: 'none' }}>\r\n                        Logout\r\n                      </Link>\r\n                    </span>\r\n                  ) : (\r\n                    <span>\r\n                      <Link to=\"/signup\" style={{ textDecoration: 'none' }}>Sign Up</Link>\r\n                      <Link to=\"/login\" style={{ textDecoration: 'none' }}>Login</Link>\r\n                    </span>\r\n                  )}\r\n\r\n                  {/* {this.props.currentUser !== undefined ? (\r\n                    this.props.currentUser.token !== undefined ? (\r\n                      <Link to=\"/\" onClick={(e) => this.props.logoutUser()}>\r\n                        Logout\r\n                      </Link>\r\n                    ) : (\r\n                      <span />\r\n                    )\r\n                  ) : (\r\n                    <span />\r\n                  )} */}\r\n                </div>\r\n              </div>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.currentLoggedInUserInfo,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutUser: () => dispatch(logoutUser()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)\r\n","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\redux\\reducers\\index.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\AllCharacters.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\Homepage.js",["286"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getAllClasses } from '../redux/reducers'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport '../css/homepage.css'\r\nclass Homepage extends Component {\r\n  async componentDidMount() {\r\n    await this.props.getAllClasses()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"homepage\">\r\n        {/* <div className=\"pls-work-img\">\r\n          <img\r\n            src=\"https://wallpapercave.com/wp/wp2227193.jpg\"\r\n            alt=\"main-img\"\r\n            width=\"100%\"\r\n            z-index=\"-1\"\r\n          />\r\n        </div> */}\r\n        <img\r\n          className=\"home-page-logo\"\r\n          src=\"https://dragonfirethegame.com/wp-content/uploads/2017/04/logo-dnd.png\"\r\n        ></img>\r\n\r\n        {this.props.currentUser ? (\r\n          <div>\r\n            <Link to=\"CharacterCreation\">\r\n              <button className=\"chara-create-btn\">Create A Character!</button>{' '}\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"maybe-fix-2\">\r\n            <Link to=\"/login\">\r\n              <button className=\"login-btn\">Login To Create Character</button>\r\n            </Link>\r\n            <Link to=\"/signup\">\r\n              <button className=\"signup-btn\">Sign Up To Create Account</button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapState = (state) => {\r\n  return {\r\n    classes: state.classes,\r\n    currentUser: state.currentLoggedInUserInfo,\r\n  }\r\n}\r\n\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    getAllClasses: () => dispatch(getAllClasses()),\r\n  }\r\n}\r\nexport default connect(mapState, mapDispatch)(Homepage)\r\n\r\n// we should get the values on the \"create your chara\" page b/c\r\n// if the user refreshes on that page, state will be reset and\r\n// the options will be blank\r\n","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\LoginPage.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\characterCreation\\CreateCharacter.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\spells\\IndividualSpell.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\SignUpForm.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\Classes.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\IndividualSubClass.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\SubClasses.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\StartingEquipments.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\AllEquipment.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\IndividualEquipment.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\IndividualFeature.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\DisplayEquipment.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Bonus.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Language.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Races.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\IndividualRace.jsx",["287"],"import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { getApiData } from '../../redux/reducers'\r\n\r\nimport '../../css/single-race.css'\r\nimport { Link } from 'react-router-dom'\r\nimport dragonborn from './dnd race images/dragonborn.png'\r\nimport dwarf from './dnd race images/dwarf.png'\r\nimport elf from './dnd race images/elf.png'\r\nimport gnome from './dnd race images/gnome.png'\r\nimport halfElf from './dnd race images/half-elf.png'\r\nimport halfling from './dnd race images/halfling.png'\r\nimport halfOrc from './dnd race images/half-orc.png'\r\nimport human from './dnd race images/human.png'\r\nimport tiefling from './dnd race images/tiefling.png'\r\n\r\nclass IndividualRace extends Component {\r\n  componentDidMount = () => {\r\n    const race = 'races/' + this.props.match.params.race\r\n    this.props.getApiData(race)\r\n  }\r\n\r\n  render() {\r\n    const { race } = this.props.match.params\r\n    let bkgImage\r\n    race === 'dragonborn'\r\n      ? (bkgImage = dragonborn)\r\n      : race === 'dwarf'\r\n      ? (bkgImage = dwarf)\r\n      : race === 'elf'\r\n      ? (bkgImage = elf)\r\n      : race === 'gnome'\r\n      ? (bkgImage = gnome)\r\n      : race === 'half-elf'\r\n      ? (bkgImage = halfElf)\r\n      : race === 'halfling'\r\n      ? (bkgImage = halfling)\r\n      : race === 'half-orc'\r\n      ? (bkgImage = halfOrc)\r\n      : race === 'human'\r\n      ? (bkgImage = human)\r\n      : race === 'tiefling'\r\n      ? (bkgImage = tiefling)\r\n      : (bkgImage = '')\r\n    return (\r\n      <div className=\"signle-race-root-container\">\r\n        <div className=\"single-race-title\">\r\n          <h1>Race: {this.props.race.name}</h1>\r\n        </div>\r\n        <div className=\"single-race-container\">\r\n          <div className=\"single-race-image\">\r\n            <img src={bkgImage} alt=\"single-race-image\" />\r\n          </div>\r\n\r\n          {/* <div className=\"clear-float\"></div> */}\r\n\r\n          <div className=\"single-race-info\">\r\n            <div className=\"race-info-title\">\r\n              <h3>Age</h3>\r\n            </div>\r\n            <div className=\"race-info\">\r\n              {this.props.race !== undefined ? (\r\n                <div>\r\n                  <p>{this.props.race.age}</p>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Alignment</h3>\r\n            </div>\r\n            <div className=\"race-info\">\r\n              {this.props.race !== undefined ? (\r\n                <div>\r\n                  <p>{this.props.race.alignment}</p>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Language Description</h3>\r\n            </div>\r\n            <div className=\"race-info\">\r\n              {this.props.race !== undefined ? (\r\n                <div>\r\n                  <p>{this.props.race.language_desc}</p>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Languages</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race.ability_bonuses !== undefined ? (\r\n                this.props.race.languages.map((element, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Link to={`/languages/${element.index}`}>\r\n                        <p>{element.name}</p>\r\n                      </Link>\r\n                    </div>\r\n                  )\r\n                })\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Size</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race !== undefined ? (\r\n                <div>\r\n                  <p>{this.props.race.size}</p>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Size Description</h3>\r\n            </div>\r\n            <div className=\"race-info\">\r\n              {this.props.race !== undefined ? (\r\n                <div>\r\n                  <p>{this.props.race.size_description}</p>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Ability Bonuses</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race.ability_bonuses !== undefined ? (\r\n                this.props.race.ability_bonuses.map((element, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Link to={`/bonus/${element.ability_score.index}`}>\r\n                        <p>{element.ability_score.name}</p>\r\n                      </Link>\r\n                      <h4>Bonus</h4>\r\n                      <p>{element.bonus}</p>\r\n                    </div>\r\n                  )\r\n                })\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Speed</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race !== undefined ? (\r\n                <div>\r\n                  <p>{this.props.race.speed}</p>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Starting Proficiencies</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race.starting_proficiencies !== undefined ? (\r\n                this.props.race.starting_proficiencies.length !== 0 ? (\r\n                  this.props.race.starting_proficiencies.map(\r\n                    (element, index) => {\r\n                      return (\r\n                        <div key={index}>\r\n                          <p>{element.name}</p>\r\n                        </div>\r\n                      )\r\n                    }\r\n                  )\r\n                ) : (\r\n                  <div>\r\n                    <p>None</p>\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Starting Proficiency Options</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race.starting_proficiency_options !== undefined ? (\r\n                <div>\r\n                  Choose: {this.props.race.starting_proficiency_options.choose}\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <p>Choose: None</p>\r\n                </div>\r\n              )}\r\n\r\n              {this.props.race.starting_proficiency_options !== undefined ? (\r\n                this.props.race.starting_proficiency_options.from.length !==\r\n                0 ? (\r\n                  this.props.race.starting_proficiency_options.from.map(\r\n                    (element, index) => {\r\n                      return (\r\n                        <div key={index}>\r\n                          <Link to={`/races/proficiencies/${element.index}`}>\r\n                            <p>{element.name}</p>\r\n                          </Link>\r\n                        </div>\r\n                      )\r\n                    }\r\n                  )\r\n                ) : (\r\n                  <div>\r\n                    <p>None</p>\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Sub Races</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race.subraces !== undefined ? (\r\n                this.props.race.subraces.length !== 0 ? (\r\n                  this.props.race.subraces.map((element, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <p>{element.name}</p>\r\n                      </div>\r\n                    )\r\n                  })\r\n                ) : (\r\n                  <div>\r\n                    <p>None</p>\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Traits</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race.traits !== undefined ? (\r\n                this.props.race.traits.map((element, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Link to={`/traits/${element.index}`}>\r\n                        <p>{element.name}</p>\r\n                      </Link>\r\n                    </div>\r\n                  )\r\n                })\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    race: state.dndData,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getApiData: (searchApi) => dispatch(getApiData(searchApi)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IndividualRace)\r\n","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\Features.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Proficiency.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Trait.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\spells\\Spells.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\monsters\\Monsters.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\builds\\Builds.jsx",["288"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getAllCharacters } from '../../redux/reducers'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport '../../css/builds.css'\r\n\r\nclass Builds extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      await this.props.getAllCharacters()\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"builds-container\">\r\n        <div id=\"builds-container-h1\">\r\n          <h1>Characters</h1>\r\n        </div>\r\n        <div id=\"build-character-name\">\r\n          {this.props.characters !== undefined ? (\r\n            this.props.characters.map((item, index) => {\r\n              return (\r\n                <Link\r\n                  to={`/character/${item.id}`}\r\n                  style={{ textDecoration: 'none' }}\r\n                  key={index}\r\n                >\r\n                  <h3 id=\"public-characters\">{item.name}</h3>\r\n                </Link>\r\n              )\r\n            })\r\n          ) : (\r\n            <h1>Loading</h1>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    characters: state.characters.characters,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllCharacters: () => dispatch(getAllCharacters()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Builds)\r\n","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\monsters\\ConditionImmunity.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\characterCreation\\CharacterCreationForm.jsx",["289"],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\profile\\Profile.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\monsters\\IndividualMonster.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\redux\\reducers\\actionTypes.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\builds\\DisplayCharacter.jsx",["290","291","292","293","294","295","296","297","298"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deleteCharacter, getSingleCharacter } from '../../redux/reducers'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport dragonborn from '../races/dnd race images/dragonborn.png'\r\nimport dwarf from '../races/dnd race images/dwarf.png'\r\nimport elf from '../races/dnd race images/elf.png'\r\nimport gnome from '../races/dnd race images/gnome.png'\r\nimport halfElf from '../races/dnd race images/half-elf.png'\r\nimport halfling from '../races/dnd race images/halfling.png'\r\nimport halfOrc from '../races/dnd race images/half-orc.png'\r\nimport human from '../races/dnd race images/human.png'\r\nimport tiefling from '../races/dnd race images/tiefling.png'\r\n\r\nimport '../../css/characterdisplay.css'\r\n\r\nclass DisplayCharacter extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      redirect: false,\r\n      initiative: 0,\r\n      level: 1,\r\n      success: 0,\r\n      failure: 0,\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      await this.props\r\n        .getSingleCharacter(this.props.match.params.id)\r\n        .then((character) => {\r\n          // character.characters returns the single chara data. yes. it makes no sense. its becuase the route was originally a get all charas route but we copied and pasted it for get single chara and didn't change the response variable name in the backend.\r\n          if (character.characters.userId) {\r\n            if (character.characters.userId !== this.props.currentUser.userId) {\r\n              alert(\"You don't have permission to view this character!\")\r\n              // return <Redirect to=\"/\" />   <--- this doesn' work\r\n              this.setState({\r\n                redirect: true,\r\n              })\r\n            }\r\n          }\r\n        })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  handleDelete = () => {\r\n    this.props.deleteCharacter(this.props.character.id).then(() => {\r\n      this.setState({\r\n        redirect: true,\r\n      })\r\n    })\r\n  }\r\n  getInitiative = () => {\r\n    let modifier = Math.floor((parseInt(this.props.character.dex) - 10) / 2)\r\n    let d20 = Math.round(Math.random() * 20)\r\n    let sum = modifier + d20\r\n    sum < 0\r\n      ? this.setState({ initiative: 0 })\r\n      : this.setState({ initiative: modifier + d20 })\r\n  }\r\n  lvlUp = () => {\r\n    this.setState({\r\n      level: this.state.level + 1,\r\n    })\r\n  }\r\n  lvlDown = () => {\r\n    if (this.state.level === 1) {\r\n      alert(\"You can't be lower than lvl. 1\")\r\n    } else {\r\n      this.setState({\r\n        level: this.state.level - 1,\r\n      })\r\n    }\r\n  }\r\n  setSucess = () => {\r\n    if (this.state.success === 3) {\r\n      alert('Death Save Success caps at 3')\r\n    } else {\r\n      this.setState({\r\n        success: this.state.success + 1,\r\n      })\r\n    }\r\n  }\r\n  setFailure = () => {\r\n    if (this.state.failure === 3) {\r\n      alert('Death Save failure caps at 3')\r\n    } else {\r\n      this.setState({\r\n        failure: this.state.failure + 1,\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    if (this.state.redirect) {\r\n      // if chara is not logged in, userprofile will redirect them to the homepage\r\n     return <Redirect to=\"/\" /> // this logs out the user for some reason\r\n    }\r\n    return (\r\n      <div id=\"character-container\">\r\n        <div id=\"character-info-container\">\r\n          {this.props.character !== undefined ? (\r\n            <div>\r\n              <div id=\"display-character-info\">\r\n                <div id=\"character-image-info\">\r\n                  <div id=\"character-race-image\">\r\n                    {this.props.character.race === 'dragonborn' && (\r\n                      <img\r\n                        src={dragonborn}\r\n                        alt=\"race-image\"\r\n                        height=\"500px\"\r\n                        width=\"420px\"\r\n                        marginleft=\"30px\"\r\n                      ></img>\r\n                    )}\r\n                    {this.props.character.race === 'dwarf' && (\r\n                      <img\r\n                        src={dwarf}\r\n                        alt=\"race-image\"\r\n                        height=\"500px\"\r\n                        width=\"420px\"\r\n                        marginleft=\"30px\"\r\n                      ></img>\r\n                    )}\r\n                    {this.props.character.race === 'elf' && (\r\n                      <img\r\n                        src={elf}\r\n                        alt=\"race-image\"\r\n                        height=\"500px\"\r\n                        width=\"420px\"\r\n                        marginleft=\"30px\"\r\n                      ></img>\r\n                    )}\r\n                    {this.props.character.race === 'gnome' && (\r\n                      <img\r\n                        src={gnome}\r\n                        alt=\"race-image\"\r\n                        height=\"500px\"\r\n                        width=\"420px\"\r\n                        marginleft=\"30px\"\r\n                      ></img>\r\n                    )}\r\n                    {this.props.character.race === 'half-elf' && (\r\n                      <img\r\n                        src={halfElf}\r\n                        alt=\"race-image\"\r\n                        height=\"500px\"\r\n                        width=\"420px\"\r\n                        marginleft=\"30px\"\r\n                      ></img>\r\n                    )}\r\n                    {this.props.character.race === 'halfling' && (\r\n                      <img\r\n                        src={halfling}\r\n                        alt=\"race-image\"\r\n                        height=\"500px\"\r\n                        width=\"420px\"\r\n                        marginleft=\"30px\"\r\n                      ></img>\r\n                    )}\r\n                    {this.props.character.race === 'half-orc' && (\r\n                      <img\r\n                        src={halfOrc}\r\n                        alt=\"race-image\"\r\n                        height=\"500px\"\r\n                        width=\"420px\"\r\n                        marginleft=\"30px\"\r\n                      ></img>\r\n                    )}\r\n                    {this.props.character.race === 'human' && (\r\n                      <img\r\n                        src={human}\r\n                        alt=\"race-image\"\r\n                        height=\"500px\"\r\n                        width=\"420px\"\r\n                        marginleft=\"30px\"\r\n                      ></img>\r\n                    )}\r\n                    {this.props.character.race === 'tiefling' && (\r\n                      <img\r\n                        src={tiefling}\r\n                        alt=\"race-image\"\r\n                        height=\"500px\"\r\n                        width=\"420px\"\r\n                        marginleft=\"30px\"\r\n                      ></img>\r\n                    )}\r\n                    {/* {\r\n                                        this.props.character.race !== (\"dragonborn\" || \"dwarf\" || \"elf\" || \"half-elf\" || \"gnome\" || \"halfling\" || \"half-orc\" || \"human\" || \"tiefling\") && <img src={ \"https://wow.zamimg.com/modelviewer/live/webthumbs/npc/15/94223.png\" } alt=\"race-image\" height=\"500px\" width=\"420px\" marginleft = \"30px\"></img>\r\n                                    } */}\r\n                  </div>\r\n                  <div className=\"character-info\">\r\n                    <div id=\"general-info\">\r\n                      <h3>Character Name : {this.props.character.name}</h3>\r\n                      <div id=\"character-level-counter\">\r\n                        <h3 id=\"current-level\">Level: {this.state.level}</h3>\r\n                        <button id=\"lvl-up\" onClick={() => this.lvlUp()}>\r\n                          Level Up\r\n                        </button>\r\n                        <button id=\"lvl-down\" onClick={() => this.lvlDown()}>\r\n                          Level Down\r\n                        </button>\r\n                      </div>\r\n                      <h3>\r\n                        Class :{' '}\r\n                        {this.props.character.class.charAt(0).toUpperCase()}\r\n                        {this.props.character.class.substr(1)}\r\n                      </h3>\r\n                      <h3>\r\n                        Race :{' '}\r\n                        {this.props.character.race.charAt(0).toUpperCase()}\r\n                        {this.props.character.race.substr(1)}\r\n                      </h3>\r\n                      <h3>\r\n                        Gender:{' '}\r\n                        {this.props.character.gender.charAt(0).toUpperCase()}\r\n                        {this.props.character.gender.substr(1)}\r\n                      </h3>\r\n                      <h3>Armor Class : {this.props.character.armorClass}</h3>\r\n                      <h3>Speed : {this.props.character.speed}</h3>\r\n\r\n                      <div id=\"character-skills-1-4\">\r\n                        {this.props.character.skill1 !== null ? (\r\n                          <h3>Skill #1 : {this.props.character.skill1}</h3>\r\n                        ) : (\r\n                          <h3>Skill #1 : No Skill Chosen</h3>\r\n                        )}\r\n                        {this.props.character.skill2 !== null ? (\r\n                          <h3>Skill #2 : {this.props.character.skill2}</h3>\r\n                        ) : (\r\n                          <h3>Skill #2 : No Skill Chosen</h3>\r\n                        )}\r\n                        {this.props.character.skill3 !== null ? (\r\n                          <h3>Skill #3 : {this.props.character.skill3}</h3>\r\n                        ) : (\r\n                          <h3>Skill #3 : No Skill Chosen</h3>\r\n                        )}\r\n                        {this.props.character.skill4 !== null ? (\r\n                          <h3>Skill #4 : {this.props.character.skill4}</h3>\r\n                        ) : (\r\n                          <h3>Skill #4 : No Skill Chosen</h3>\r\n                        )}\r\n                      </div>\r\n                      <br></br>\r\n                      <div id=\"initiative-check\">\r\n                        <h3 id=\"initative-tag\">\r\n                          Initiative: {this.state.initiative}\r\n                        </h3>{' '}\r\n                        <button\r\n                          id=\"getInitiative\"\r\n                          onClick={(e) => this.getInitiative()}\r\n                        >\r\n                          Get Initative\r\n                        </button>\r\n                      </div>\r\n                      <div id=\"death-saves\">\r\n                        <div id=\"death-saves-success\">\r\n                          {' '}\r\n                          <button onClick={(e) => this.setSucess()}>\r\n                            Death Saves{'(Successes)'}: {this.state.success}\r\n                          </button>\r\n                        </div>\r\n                        <div id=\"death-saves-failures\">\r\n                          <button onClick={(e) => this.setFailure()}>\r\n                            Death Saves{'(Failures)'}: {this.state.failure}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <br></br>\r\n                </div>\r\n                <div id=\"attributes\">\r\n                  <h3>Strength : {this.props.character.str}</h3>\r\n                  <h3>Dexterity : {this.props.character.dex}</h3>\r\n                  <h3>Constitution : {this.props.character.con}</h3>\r\n                  <h3>Intelligence : {this.props.character.int}</h3>\r\n                  <h3>Wisdom : {this.props.character.wis}</h3>\r\n                  <h3>Charisma : {this.props.character.cha}</h3>\r\n                </div>\r\n                <div id=\"further-info\">\r\n                  <div id=\"further-info-personality-traits\">\r\n                    <h3 id=\"further-info-personality-traits-h3\">\r\n                      Personality Traits\r\n                    </h3>\r\n                    <p>{this.props.character.personalityTraits}</p>\r\n                  </div>\r\n                  <div id=\"further-info-flaws\">\r\n                    <h3 id=\"further-info-flaws-h3\">Flaws</h3>{' '}\r\n                    <p>{this.props.character.flaws}</p>\r\n                  </div>\r\n                  <div id=\"further-info-ideals\">\r\n                    <h3 id=\"further-info-ideals-h3\">Ideals</h3>{' '}\r\n                    <p>{this.props.character.ideals}</p>\r\n                  </div>\r\n                  <div id=\"further-info-bonds\">\r\n                    <h3 id=\"further-info-bonds-h3\">Bonds</h3>{' '}\r\n                    <p>{this.props.character.bonds}</p>\r\n                  </div>\r\n                </div>\r\n                <div id=\"further-info2\">\r\n                  <div id=\"further-info2-attacksAndSpellcasting\">\r\n                    <h3 id=\"further-info2-attacksAndSpellcasting-h3\">\r\n                      Attacks {'&'} Spellcasting\r\n                    </h3>\r\n                    <p>{this.props.character.attacksAndSpellcasting}</p>\r\n                  </div>\r\n                  <div id=\"further-info2-featuresAndTraits\">\r\n                    <h3 id=\"further-info2-featuresAndTraits-h3\">\r\n                      Features {'&'} Traits\r\n                    </h3>{' '}\r\n                    <p>{this.props.character.featuresAndTraits}</p>\r\n                  </div>\r\n                  <div id=\"further-info2-equipment\">\r\n                    <h3 id=\"further-info2-equipment-h3\">Equipment</h3>{' '}\r\n                    <p>{this.props.character.equipment}</p>\r\n                  </div>\r\n                  <div id=\"further-info2-profAndLang\">\r\n                    <h3 id=\"further-info2-profAndLang-h3\">\r\n                      Proficiencies {'&'} Languages\r\n                    </h3>{' '}\r\n                    <p>{this.props.character.profAndLang}</p>\r\n                  </div>\r\n                </div>\r\n                {/* this.props.currentUser.userId === this.props.character.userId ? <Link to = {`/editCharacter/${this.props.match.params.id}`}><button id = \"edit-character-btn\">Edit</button></Link> : <span/> */}\r\n              </div>\r\n\r\n              {/* Can only see these buttons if this character has a userId (i.e. it's private). */}\r\n              {this.props.character.userId ? (\r\n                <div>\r\n                  <Link\r\n                    to={{\r\n                      pathname: '/CharacterCreation',\r\n                      state: {\r\n                        editing: true,\r\n                        updatingCharacterId: this.props.character.id,\r\n                        oldCharacterInfo: this.props.character,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <button id=\"edit-character-btn\">Edit Character</button>\r\n                  </Link>\r\n                  <button\r\n                    id=\"delete-character-btn\"\r\n                    onClick={() => this.handleDelete()}\r\n                  >\r\n                    Delete Character\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <h1 id=\"loading\">Loading</h1>\r\n          )}\r\n          {/* {this.props.character !== undefined ?\r\n                    this.props.character.map( (item, index) => {\r\n                        return(\r\n                            <div id = {item.id}>\r\n                                <h3>{item.name}</h3>\r\n                            </div>\r\n                        )\r\n                    }) : <h1>Loading</h1>\r\n                } */}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    character: state.character.characters,\r\n    currentUser: state.currentLoggedInUserInfo,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getSingleCharacter: (id) => dispatch(getSingleCharacter(id)),\r\n    deleteCharacter: (deleteCharacterId) =>\r\n      dispatch(deleteCharacter(deleteCharacterId)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayCharacter)\r\n","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\IndividualClass.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Skills.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\ClassLevels.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\ClassSpells.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\DisplayProficiencies.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\spells\\SpellDisplay.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\Feature.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\SubClass.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\StartingEquipment.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\Classes.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\DisplayClass.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\DisplaySubClass.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\SubClassSpells.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\FeatureChoice.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\monsters\\DisplayMonster.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\DisplayFeatures.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\DisplayRace.jsx",["299"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../css/races.css'\r\nimport dragonborn from './dnd race images/dragonborn.png'\r\nimport dwarf from './dnd race images/dwarf.png'\r\nimport elf from './dnd race images/elf.png'\r\nimport gnome from './dnd race images/gnome.png'\r\nimport halfElf from './dnd race images/half-elf.png'\r\nimport halfling from './dnd race images/halfling.png'\r\nimport halfOrc from './dnd race images/half-orc.png'\r\nimport human from './dnd race images/human.png'\r\nimport tiefling from './dnd race images/tiefling.png'\r\n\r\nclass DisplayRace extends Component {\r\n  render() {\r\n    const { index, name } = this.props\r\n    let bkgImage\r\n    index === 'dragonborn'\r\n      ? (bkgImage = dragonborn)\r\n      : index === 'dwarf'\r\n      ? (bkgImage = dwarf)\r\n      : index === 'elf'\r\n      ? (bkgImage = elf)\r\n      : index === 'gnome'\r\n      ? (bkgImage = gnome)\r\n      : index === 'half-elf'\r\n      ? (bkgImage = halfElf)\r\n      : index === 'halfling'\r\n      ? (bkgImage = halfling)\r\n      : index === 'half-orc'\r\n      ? (bkgImage = halfOrc)\r\n      : index === 'human'\r\n      ? (bkgImage = human)\r\n      : index === 'tiefling'\r\n      ? (bkgImage = tiefling)\r\n      : (bkgImage = '')\r\n\r\n    return (\r\n      <div className=\"race-preview\">\r\n        <div>\r\n          <img src={bkgImage} alt=\"race-image\" height=\"600px\" width=\"420px\" />\r\n        </div>\r\n        <Link to={`/races/${index}`}>{name}</Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DisplayRace\r\n","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Proficiencies.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\profile\\displayUser\\UserProfile.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\profile\\displayCharacters\\DisplayUserCharacters.jsx",["300"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getAllUserCharacters } from '../../../redux/reducers'\r\n\r\nimport { Link } from 'react-router-dom'\r\nclass DisplayUserCharacters extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      await this.props.getAllUserCharacters(this.props.id)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"user-character-container\">\r\n        <h1>Characters</h1>\r\n        <div id=\"usercharacter\">\r\n          {this.props.characters !== undefined ? (\r\n            this.props.characters.map((item, index) => {\r\n              return (\r\n                <Link\r\n                  to={`/character/${item.id}`}\r\n                  style={{ textDecoration: 'none' }}\r\n                  key={index}\r\n                >\r\n                  <h3 id=\"character-name\">{item.name}</h3>\r\n                </Link>\r\n              )\r\n            })\r\n          ) : (\r\n            <h1>Loading</h1>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    characters: state.characters.characters,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllUserCharacters: (id) => dispatch(getAllUserCharacters(id)),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DisplayUserCharacters)\r\n","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\SavingThrows.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Subclass.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\SpellCasting.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Skill.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Choices.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\DisplayClass.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\SpellCastingInfo.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\PChoices.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\SpellCastingDesc.jsx",[],["301","302"],{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","replacedBy":"306"},{"ruleId":"307","severity":1,"message":"308","line":1,"column":8,"nodeType":"309","messageId":"310","endLine":1,"endColumn":13},{"ruleId":"307","severity":1,"message":"311","line":36,"column":8,"nodeType":"309","messageId":"310","endLine":36,"endColumn":23},{"ruleId":"307","severity":1,"message":"312","line":8,"column":9,"nodeType":"309","messageId":"310","endLine":8,"endColumn":13},{"ruleId":"313","severity":1,"message":"314","line":22,"column":9,"nodeType":"315","endLine":25,"endColumn":10},{"ruleId":"316","severity":1,"message":"317","line":53,"column":13,"nodeType":"315","endLine":53,"endColumn":59},{"ruleId":"318","severity":1,"message":"319","line":10,"column":3,"nodeType":"320","messageId":"321","endLine":12,"endColumn":4},{"ruleId":"322","severity":1,"message":"323","line":190,"column":48,"nodeType":"324","messageId":"325","endLine":190,"endColumn":49},{"ruleId":"316","severity":1,"message":"317","line":112,"column":23,"nodeType":"315","endLine":118,"endColumn":24},{"ruleId":"316","severity":1,"message":"317","line":121,"column":23,"nodeType":"315","endLine":127,"endColumn":24},{"ruleId":"316","severity":1,"message":"317","line":130,"column":23,"nodeType":"315","endLine":136,"endColumn":24},{"ruleId":"316","severity":1,"message":"317","line":139,"column":23,"nodeType":"315","endLine":145,"endColumn":24},{"ruleId":"316","severity":1,"message":"317","line":148,"column":23,"nodeType":"315","endLine":154,"endColumn":24},{"ruleId":"316","severity":1,"message":"317","line":157,"column":23,"nodeType":"315","endLine":163,"endColumn":24},{"ruleId":"316","severity":1,"message":"317","line":166,"column":23,"nodeType":"315","endLine":172,"endColumn":24},{"ruleId":"316","severity":1,"message":"317","line":175,"column":23,"nodeType":"315","endLine":181,"endColumn":24},{"ruleId":"316","severity":1,"message":"317","line":184,"column":23,"nodeType":"315","endLine":190,"endColumn":24},{"ruleId":"316","severity":1,"message":"317","line":41,"column":11,"nodeType":"315","endLine":41,"endColumn":79},{"ruleId":"318","severity":1,"message":"319","line":7,"column":3,"nodeType":"320","messageId":"321","endLine":9,"endColumn":4},{"ruleId":"303","replacedBy":"326"},{"ruleId":"305","replacedBy":"327"},"no-native-reassign",["328"],"no-negated-in-lhs",["329"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'CreateCharacter' is defined but never used.","'bool' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["328"],["329"],"no-global-assign","no-unsafe-negation"]