[{"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\index.js":"1","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\App.js":"2","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\reportWebVitals.js":"3","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\redux\\store.js":"4","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\Routes\\Routes.jsx":"5","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\navbar\\Navbar.jsx":"6","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\redux\\reducers\\index.js":"7","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\AllCharacters.js":"8","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\LoginPage.js":"9","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\spells\\IndividualSpell.js":"10","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\characterCreation\\CreateCharacter.js":"11","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\Homepage.js":"12","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\SignUpForm.jsx":"13","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\spells\\Spells.jsx":"14","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\characterCreation\\CharacterCreationForm.jsx":"15","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\Classes.jsx":"16","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\IndividualFeature.jsx":"17","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\Features.jsx":"18","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\SubClasses.jsx":"19","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\IndividualSubClass.jsx":"20","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\StartingEquipments.jsx":"21","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\DisplayEquipment.jsx":"22","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\IndividualEquipment.jsx":"23","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\AllEquipment.jsx":"24","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Races.jsx":"25","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\IndividualRace.jsx":"26","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Bonus.jsx":"27","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Language.jsx":"28","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Trait.jsx":"29","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Proficiency.jsx":"30","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\monsters\\ConditionImmunity.jsx":"31","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\monsters\\IndividualMonster.jsx":"32","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\monsters\\Monsters.jsx":"33","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\builds\\Builds.jsx":"34","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\profile\\Profile.jsx":"35","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\builds\\DisplayCharacter.jsx":"36","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\IndividualClass.jsx":"37","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Skills.jsx":"38","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\DisplayProficiencies.jsx":"39","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\ClassLevels.jsx":"40","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\ClassSpells.jsx":"41","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\redux\\reducers\\actionTypes.js":"42","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\spells\\SpellDisplay.js":"43","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\SubClass.jsx":"44","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\Feature.jsx":"45","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\StartingEquipment.jsx":"46","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\DisplayFeatures.jsx":"47","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\DisplaySubClass.jsx":"48","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\FeatureChoice.jsx":"49","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\SubClassSpells.jsx":"50","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\DisplayClass.jsx":"51","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\monsters\\DisplayMonster.jsx":"52","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\Options.jsx":"53","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\DisplayRace.jsx":"54","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\Classes.jsx":"55","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\profile\\displayCharacters\\DisplayUserCharacters.jsx":"56","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\profile\\displayUser\\UserProfile.jsx":"57","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\SavingThrows.jsx":"58","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Choices.jsx":"59","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Subclass.jsx":"60","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Proficiencies.jsx":"61","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\SpellCasting.jsx":"62","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Skill.jsx":"63","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\PChoices.jsx":"64","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\SpellCastingInfo.jsx":"65","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\DisplayClass.jsx":"66","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\SpellCastingDesc.jsx":"67","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\helper\\scroll-to-top.js":"68"},{"size":614,"mtime":1611633674163,"results":"69","hashOfConfig":"70"},{"size":619,"mtime":1611877956134,"results":"71","hashOfConfig":"70"},{"size":375,"mtime":1611633674164,"results":"72","hashOfConfig":"70"},{"size":277,"mtime":1611633674164,"results":"73","hashOfConfig":"70"},{"size":5412,"mtime":1611802313864,"results":"74","hashOfConfig":"70"},{"size":2883,"mtime":1611861731063,"results":"75","hashOfConfig":"70"},{"size":9577,"mtime":1611851238584,"results":"76","hashOfConfig":"70"},{"size":815,"mtime":1611633674160,"results":"77","hashOfConfig":"70"},{"size":2645,"mtime":1611851404125,"results":"78","hashOfConfig":"70"},{"size":4617,"mtime":1611795808856,"results":"79","hashOfConfig":"70"},{"size":334,"mtime":1611717433938,"results":"80","hashOfConfig":"70"},{"size":1203,"mtime":1611861731062,"results":"81","hashOfConfig":"70"},{"size":3242,"mtime":1611802251244,"results":"82","hashOfConfig":"70"},{"size":2150,"mtime":1611701794275,"results":"83","hashOfConfig":"70"},{"size":15905,"mtime":1611853463729,"results":"84","hashOfConfig":"70"},{"size":557,"mtime":1611802259766,"results":"85","hashOfConfig":"70"},{"size":3641,"mtime":1611805801304,"results":"86","hashOfConfig":"70"},{"size":1243,"mtime":1611701794270,"results":"87","hashOfConfig":"70"},{"size":1128,"mtime":1611690793035,"results":"88","hashOfConfig":"70"},{"size":2814,"mtime":1611802259802,"results":"89","hashOfConfig":"70"},{"size":1188,"mtime":1611802259797,"results":"90","hashOfConfig":"70"},{"size":5584,"mtime":1611805801309,"results":"91","hashOfConfig":"70"},{"size":3347,"mtime":1611802259791,"results":"92","hashOfConfig":"70"},{"size":1184,"mtime":1611802259785,"results":"93","hashOfConfig":"70"},{"size":1310,"mtime":1611877020158,"results":"94","hashOfConfig":"70"},{"size":9646,"mtime":1611876263392,"results":"95","hashOfConfig":"70"},{"size":1621,"mtime":1611773474700,"results":"96","hashOfConfig":"70"},{"size":1717,"mtime":1611690486988,"results":"97","hashOfConfig":"70"},{"size":2182,"mtime":1611690486988,"results":"98","hashOfConfig":"70"},{"size":1752,"mtime":1611700791146,"results":"99","hashOfConfig":"70"},{"size":1623,"mtime":1611696392090,"results":"100","hashOfConfig":"70"},{"size":4299,"mtime":1611696392091,"results":"101","hashOfConfig":"70"},{"size":1162,"mtime":1611696392091,"results":"102","hashOfConfig":"70"},{"size":1461,"mtime":1611795808834,"results":"103","hashOfConfig":"70"},{"size":952,"mtime":1611806416721,"results":"104","hashOfConfig":"70"},{"size":3598,"mtime":1611795808852,"results":"105","hashOfConfig":"70"},{"size":4750,"mtime":1611795808853,"results":"106","hashOfConfig":"70"},{"size":1977,"mtime":1611773474699,"results":"107","hashOfConfig":"70"},{"size":3319,"mtime":1611802259772,"results":"108","hashOfConfig":"70"},{"size":5019,"mtime":1611701794265,"results":"109","hashOfConfig":"70"},{"size":1447,"mtime":1611773474696,"results":"110","hashOfConfig":"70"},{"size":647,"mtime":1611850110163,"results":"111","hashOfConfig":"70"},{"size":379,"mtime":1611701794275,"results":"112","hashOfConfig":"70"},{"size":248,"mtime":1611690793034,"results":"113","hashOfConfig":"70"},{"size":242,"mtime":1611701794270,"results":"114","hashOfConfig":"70"},{"size":283,"mtime":1611701794273,"results":"115","hashOfConfig":"70"},{"size":280,"mtime":1611701794269,"results":"116","hashOfConfig":"70"},{"size":326,"mtime":1611690793034,"results":"117","hashOfConfig":"70"},{"size":321,"mtime":1611701794270,"results":"118","hashOfConfig":"70"},{"size":537,"mtime":1611802259807,"results":"119","hashOfConfig":"70"},{"size":330,"mtime":1611701794271,"results":"120","hashOfConfig":"70"},{"size":309,"mtime":1611696392091,"results":"121","hashOfConfig":"70"},{"size":429,"mtime":1611712441412,"results":"122","hashOfConfig":"70"},{"size":1515,"mtime":1611876263392,"results":"123","hashOfConfig":"70"},{"size":1160,"mtime":1611861731062,"results":"124","hashOfConfig":"70"},{"size":1558,"mtime":1611850110163,"results":"125","hashOfConfig":"70"},{"size":282,"mtime":1611806416733,"results":"126","hashOfConfig":"70"},{"size":332,"mtime":1611701794267,"results":"127","hashOfConfig":"70"},{"size":479,"mtime":1611773474667,"results":"128","hashOfConfig":"70"},{"size":327,"mtime":1611701794267,"results":"129","hashOfConfig":"70"},{"size":359,"mtime":1611672602377,"results":"130","hashOfConfig":"70"},{"size":750,"mtime":1611690793033,"results":"131","hashOfConfig":"70"},{"size":1798,"mtime":1611802259776,"results":"132","hashOfConfig":"70"},{"size":240,"mtime":1611773474698,"results":"133","hashOfConfig":"70"},{"size":481,"mtime":1611672602378,"results":"134","hashOfConfig":"70"},{"size":337,"mtime":1611861731062,"results":"135","hashOfConfig":"70"},{"size":248,"mtime":1611672602378,"results":"136","hashOfConfig":"70"},{"size":359,"mtime":1611878005656,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"puc3y2",{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"140"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"140"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"140"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"140"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"140"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"140"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"140"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"140"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"140"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"140"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"140"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"140"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"140"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"140"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"140"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"140"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"140"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"140"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"140"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"140"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"140"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"140"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"140"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"140"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\index.js",[],["299","300"],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\App.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\reportWebVitals.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\redux\\store.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\Routes\\Routes.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\navbar\\Navbar.jsx",["301"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logoutUser } from '../../redux/reducers'\r\nimport '../../css/Navbar.css'\r\nclass Navbar extends React.Component {\r\n  render () {\r\n    let bool = false\r\n    console.log( 'current useer', this.props.currentUser )\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/classes\">Classes</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/races\">Races</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/spells\">Spells</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/monsters\">Monsters</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/builds\">Characters</Link>\r\n              </li>\r\n\r\n              { this.props.currentUser !== undefined ? (\r\n                this.props.currentUser.token !== undefined ? (\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/createCharacter\">Create Character</Link>\r\n                  </li>\r\n                ) : (\r\n                    <span />\r\n                  )\r\n              ) : (\r\n                  <span />\r\n                ) }\r\n              <div id = \"dropdown\" className=\"dropdown\">\r\n                <li className=\"dropbtn\">Profile</li>\r\n                <div className=\"dropdown-content\">\r\n                  <Link to=\"/userprofile\">User Profile</Link>\r\n                  <Link to=\"/signup\">Sign Up</Link>\r\n                  <Link to=\"/login\">Login</Link>\r\n                  { this.props.currentUser !== undefined ? (\r\n                    this.props.currentUser.token !== undefined ? (\r\n                      <Link to=\"/\" onClick={ ( e ) => this.props.logoutUser() }>\r\n                        Logout\r\n                      </Link>\r\n                    ) : (\r\n                        <span />\r\n                      )\r\n                  ) : (\r\n                      <span />\r\n                    ) }\r\n                </div>\r\n              </div>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n  return {\r\n    currentUser: state.currentLoggedInUserInfo,\r\n  }\r\n}\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n  return {\r\n    logoutUser: () => dispatch( logoutUser() ),\r\n  }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( Navbar )\r\n","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\redux\\reducers\\index.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\AllCharacters.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\LoginPage.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\spells\\IndividualSpell.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\characterCreation\\CreateCharacter.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\Homepage.js",["302"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getAllClasses } from '../redux/reducers'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport \"../css/homepage.css\";\r\nclass Homepage extends Component {\r\n  async componentDidMount() {\r\n    await this.props.getAllClasses()\r\n  }\r\n  render() {\r\n    console.log('classes', this.props.classes)\r\n    return (\r\n      <div className = \"homepage\">\r\n        <img className = \"home-page-logo\" src = \"https://dragonfirethegame.com/wp-content/uploads/2017/04/logo-dnd.png\"></img>\r\n        <Link to = \"/login\"><button className = \"login-btn\">Login To Create Character</button></Link>\r\n        <Link to = \"/signup\"><button className = \"signup-btn\">Sign Up To Create Account</button></Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapState = (state) => {\r\n  return {\r\n    classes: state.classes,\r\n  }\r\n}\r\n\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    getAllClasses: () => dispatch(getAllClasses()),\r\n  }\r\n}\r\nexport default connect(mapState, mapDispatch)(Homepage)\r\n\r\n// we should get the values on the \"create your chara\" page b/c\r\n// if the user refreshes on that page, state will be reset and\r\n// the options will be blank\r\n","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\SignUpForm.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\spells\\Spells.jsx",["303"],"import { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {connect } from 'react-redux'\r\nimport {getApiData} from '../../redux/reducers'\r\n\r\nimport SpellDisplay from './SpellDisplay';\r\n\r\nclass Spells extends Component {\r\n    \r\n        state = {\r\n            spell: []\r\n        \r\n    }\r\n\r\n    // async componentDidMount() {\r\n    //     try{\r\n    //         let spellName = await axios.get(\"https://www.dnd5eapi.co/api/spells\")\r\n    //         this.setState({\r\n    //             spell: spellName.data.results  \r\n    //         })\r\n\r\n    //     }catch(error) {\r\n    //         console.error(error);\r\n    //     }\r\n    // }\r\n\r\n    componentDidMount = async () => {\r\n        this.fetchSpells('spells')\r\n    }\r\n    fetchSpells = async (searchApi) => {\r\n        await this.props.getApiData(searchApi)\r\n\r\n    setTimeout(() => {\r\n        this.setState({\r\n            spell: this.props.spell.results\r\n        })\r\n    }, 200)\r\n\r\n    setTimeout(() => {\r\n        console.log('SPELL STATE', this.state.spell)\r\n      }, 400)\r\n    }\r\n            \r\n        \r\n    render() {\r\n        console.log(this.state.spell)\r\n        return (\r\n          <div>\r\n            <h1>Spells</h1>\r\n            {this.state.spell !== undefined ? (\r\n              this.state.spell.map((spell, index) => (\r\n                <SpellDisplay key={index} name={spell.name} \r\n                index={spell.index}\r\n                />\r\n              ))\r\n            ) : (\r\n              <span />\r\n            )}\r\n          </div>\r\n        )\r\n      \r\n    }\r\n    \r\n\r\n    // render(){\r\n    //     return(\r\n    //         <div>\r\n    //             <h1>Spell</h1>\r\n    //             {this.state.spell.map((spell,index) => (\r\n    //                 <SpellDisplay key={index} name={spell.name} />\r\n    //             ))}\r\n                \r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        spell: state.dndData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      getApiData: (searchApi) => dispatch(getApiData(searchApi)),\r\n    }\r\n  }\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Spells);","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\characterCreation\\CharacterCreationForm.jsx",["304"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  getAllClasses,\r\n  getAllRaces,\r\n  getAllSkills,\r\n  createCharacter,\r\n} from '../../redux/reducers'\r\n\r\nclass CharacterCreationForm extends React.Component {\r\n  constructor ( props ) {\r\n    super( props )\r\n    this.state = {\r\n      characterInfo: {\r\n        characterName: '',\r\n        class: '',\r\n        race: '',\r\n        gender: '',\r\n        proficiencyBonus: '2',\r\n        armorClass: 10,\r\n        initiative: 0,\r\n        speed: 0,\r\n        skills: [],\r\n        str: Math.floor( Math.random() * 20 ),\r\n        dex: Math.floor( Math.random() * 20 ),\r\n        con: Math.floor( Math.random() * 20 ),\r\n        int: Math.floor( Math.random() * 20 ),\r\n        wis: Math.floor( Math.random() * 20 ),\r\n        cha: Math.floor( Math.random() * 20 ),\r\n        userId: '',\r\n      },\r\n      public: true,\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await this.props.getAllClasses()\r\n    await this.props.getAllRaces()\r\n    await this.props.getAllSkills()\r\n  }\r\n\r\n  handleClassSelectChange = ( e ) => {\r\n    this.setState( {\r\n      characterInfo: {\r\n        ...this.state.characterInfo,\r\n        class: e.target.value,\r\n      },\r\n    } )\r\n  }\r\n\r\n  handleRaceSelectChange = ( e ) => {\r\n    const { value } = e.target\r\n\r\n    if (\r\n      value === 'dragonborn' ||\r\n      value === 'elf' ||\r\n      value === 'half-elf' ||\r\n      value === 'half-orc' ||\r\n      value === 'human' ||\r\n      value === 'tiefling'\r\n    ) {\r\n      this.setState( {\r\n        characterInfo: {\r\n          ...this.state.characterInfo,\r\n          race: e.target.value,\r\n          speed: 30,\r\n        },\r\n      } )\r\n    } else {\r\n      this.setState( {\r\n        characterInfo: {\r\n          ...this.state.characterInfo,\r\n          race: e.target.value,\r\n          speed: 25,\r\n        },\r\n      } )\r\n    }\r\n  }\r\n\r\n  handleGenderSelectChange = ( e ) => {\r\n    this.setState( {\r\n      characterInfo: {\r\n        ...this.state.characterInfo,\r\n        gender: e.target.value,\r\n      },\r\n    } )\r\n  }\r\n\r\n  handleSkillsSelectChange = ( e ) => {\r\n    if ( this.state.characterInfo.skills.length === 4 ) {\r\n      alert( 'You may only have 4 skills per character!' )\r\n      return\r\n    }\r\n    for ( const skill of this.state.characterInfo.skills ) {\r\n      if ( skill === e.target.value ) {\r\n        alert( 'No duplicate skills allowed!' )\r\n        return\r\n      }\r\n    }\r\n\r\n    this.setState( {\r\n      characterInfo: {\r\n        ...this.state.characterInfo,\r\n        skills: [ ...this.state.characterInfo.skills, e.target.value ], // append skill to array\r\n      },\r\n    } )\r\n  }\r\n\r\n  handleAbilityScoreChange = ( e ) => {\r\n    let modifier = Math.floor( ( parseInt( e.target.value ) - 10 ) / 2 )\r\n    document.getElementById( `${e.target.name}` + '-modifier' ).innerHTML =\r\n      '+' + modifier\r\n\r\n    if ( e.target.name === 'dex' ) {\r\n      console.log( 'dex modifier:', modifier )\r\n      this.setState( {\r\n        characterInfo: {\r\n          ...this.state.characterInfo,\r\n          [ e.target.name ]: e.target.value,\r\n          armorClass: 10 + modifier,\r\n        },\r\n      } )\r\n    } else {\r\n      this.setState( {\r\n        characterInfo: {\r\n          ...this.state.characterInfo,\r\n          [ e.target.name ]: e.target.value,\r\n        },\r\n      } )\r\n    }\r\n  }\r\n\r\n  handleMainStatChange = ( e ) => {\r\n    this.setState( {\r\n      characterInfo: {\r\n        ...this.state.characterInfo,\r\n        [ e.target.name ]: e.target.value,\r\n      },\r\n    } )\r\n  }\r\n\r\n  handleDisplayStatusChange = ( e ) => {\r\n    this.setState( {\r\n      public: e.target.value,\r\n    } )\r\n\r\n    setTimeout( () => {\r\n      console.log( 'public state:', this.state.public )\r\n    }, 800 )\r\n  }\r\n\r\n  handleFormSubmit = ( e ) => {\r\n    e.preventDefault()\r\n   /*  const { str, dex, con, wis, int, cha } = this.state\r\n    if ( ( str || dex || con || wis || int || cha ) > 30 || ( str || dex || con || wis || int || cha ) < 0 ) {\r\n      alert( \"Characters Attritbutes Are Maxed at 30\" )\r\n    }\r\n    else { */\r\n      if ( this.state.public === 'false' ) {\r\n        this.setState( {\r\n          characterInfo: {\r\n            ...this.state.characterInfo,\r\n            userId: this.props.currentUser.userId,\r\n          },\r\n        } )\r\n      } else {\r\n        delete this.state.characterInfo.userId\r\n      }\r\n\r\n      setTimeout( () => {\r\n        console.log( 'token sent to create chara:', this.props.currentUser.token )\r\n        this.props.createCharacter(\r\n          this.state.characterInfo,\r\n          this.props.currentUser.token\r\n        )\r\n      }, 1200 )\r\n      setTimeout( () => {\r\n        if ( this.props.newCharacter !== undefined ) {\r\n          if ( this.state.public ) {\r\n            this.props.history.push( \"/builds\" )\r\n          }\r\n          else {\r\n            this.props.history.push( \"/userprofile\" )\r\n          }\r\n        }\r\n      }, 2000 )\r\n    /* } */\r\n  }\r\n\r\n  render () {\r\n    // console.log('all classes:', this.props.allClasses)\r\n    // console.log('all races:', this.props.allRaces)\r\n    // console.log('all skills:', this.props.allSkills)\r\n    console.log( 'characterInfo:', this.state.characterInfo )\r\n    return (\r\n      <div className=\"creation-form\">\r\n        <header>DUNGEONS { '&' } DRAGONS CHARACTER CREATION FORM</header>\r\n\r\n        {/* Main Character Creation Form */ }\r\n        <form onSubmit={ ( e ) => this.handleFormSubmit( e ) }>\r\n          {/* Character Name */ }\r\n          <label>\r\n            Character Name:<br></br>\r\n            <input\r\n              type=\"text\"\r\n              name=\"characterName\"\r\n              placeholder=\"Raffaela Ciccone\"\r\n              onChange={ ( e ) =>\r\n                this.setState( {\r\n                  characterInfo: {\r\n                    ...this.state.characterInfo,\r\n                    characterName: e.target.value,\r\n                  },\r\n                } )\r\n              }\r\n              required\r\n            ></input>\r\n          </label>\r\n          <br></br>\r\n          {/* End Character Name */ }\r\n\r\n          {/* Class Select */ }\r\n          <label>\r\n            Select Your Classes<br></br>\r\n            <select\r\n              name=\"classSelect\"\r\n              onChange={ ( e ) => this.handleClassSelectChange( e ) }\r\n              required\r\n            >\r\n              <option value=\"\">--Choose Your Class--</option>\r\n              { this.props.allClasses !== undefined ? (\r\n                this.props.allClasses.map( ( element, index ) => {\r\n                  return (\r\n                    <option key={ index } value={ element.index }>\r\n                      {element.name }\r\n                    </option>\r\n                  )\r\n                } )\r\n              ) : (\r\n                  <span />\r\n                ) }\r\n            </select>\r\n          </label>\r\n          {/* End Class Select */ }\r\n\r\n          <br></br>\r\n          {/* Race Select */ }\r\n          <label>\r\n            Select Your Race\r\n            <br></br>\r\n            <select\r\n              name=\"raceSelect\"\r\n              onChange={ ( e ) => this.handleRaceSelectChange( e ) }\r\n              required\r\n            >\r\n              <option value=\"\">--Choose Your Race--</option>\r\n              { this.props.allRaces !== undefined ? (\r\n                this.props.allRaces.map( ( element, index ) => {\r\n                  return (\r\n                    <option key={ index } value={ element.index }>\r\n                      {element.name }\r\n                    </option>\r\n                  )\r\n                } )\r\n              ) : (\r\n                  <span />\r\n                ) }\r\n            </select>\r\n          </label>\r\n          {/* End Race Select */ }\r\n\r\n          <br></br>\r\n          {/* Gender Select */ }\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"male\"\r\n              name=\"gender\"\r\n              value=\"male\"\r\n              onChange={ ( e ) => this.handleGenderSelectChange( e ) }\r\n            ></input>\r\n            <label htmlFor=\"male\">Male</label>\r\n\r\n            <br></br>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"female\"\r\n              name=\"gender\"\r\n              value=\"female\"\r\n              onChange={ ( e ) => this.handleGenderSelectChange( e ) }\r\n            ></input>\r\n            <label htmlFor=\"female\">Female</label>\r\n\r\n            <br></br>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"other\"\r\n              name=\"gender\"\r\n              value=\"other\"\r\n              onChange={ ( e ) => this.handleGenderSelectChange( e ) }\r\n            ></input>\r\n            <label htmlFor=\"other\">Other</label>\r\n          </div>\r\n\r\n          {/* End Gender Select  */ }\r\n\r\n          <br></br>\r\n          {/* Main Stats */ }\r\n          <label>\r\n            Proficiency Bonus (+2 For Lvl.1) :\r\n            <span\r\n              id=\"proficiencyBonus-display\"\r\n              // type=\"number\"\r\n              name=\"proficiencyBonus\"\r\n              // placeholder={Math.floor(Math.random() * 6)}\r\n              // defaultValue={Math.floor(Math.random() * 6)}\r\n              value=\"2\"\r\n              onChange={ ( e ) =>\r\n                alert( 'A lvl.1 character has +2 proficieny bonus!' )\r\n              }\r\n              required\r\n            >\r\n              { ' ' }\r\n              { this.state.characterInfo.proficiencyBonus }\r\n            </span>\r\n          </label>\r\n\r\n          <br></br>\r\n          <label>\r\n            Armor Class :\r\n            <span\r\n              id=\"armorClass-display\"\r\n              type=\"number\"\r\n              name=\"armorClass\"\r\n              required\r\n            >\r\n              { ' ' }\r\n              { this.state.characterInfo.armorClass }\r\n            </span>\r\n          </label>\r\n\r\n          {/* <br></br>\r\n          <label>\r\n            Initiative\r\n            <br></br>\r\n            <input\r\n              type=\"number\"\r\n              name=\"Initiative\"\r\n              placeholder={ Math.floor( Math.random() * 15 ) }\r\n              // defaultValue={Math.floor(Math.random() * 15)}\r\n              onChange={ ( e ) => this.handleMainStatChange( e ) }\r\n              required\r\n            ></input>\r\n          </label> */}\r\n\r\n          <br></br>\r\n          <label>\r\n            Speed :\r\n            <span\r\n              id=\"speed-display\"\r\n              type=\"number\"\r\n              name=\"speed\"\r\n              value={ this.state.characterInfo.speed }\r\n              required\r\n            >\r\n              { ' ' }\r\n              { this.state.characterInfo.speed }\r\n            </span>\r\n          </label>\r\n          <br></br>\r\n          {/* End Main Stats */ }\r\n\r\n          {/* Skill Select */ }\r\n          <label>\r\n            Select Your Skills (Choose up to 4)\r\n            <br></br>\r\n            <select\r\n              name=\"skillsSelect\"\r\n              onChange={ ( e ) => this.handleSkillsSelectChange( e ) }\r\n              required\r\n            >\r\n              <option value=\"\">--Choose Your Skills--</option>\r\n              { this.props.allSkills !== undefined ? (\r\n                this.props.allSkills.map( ( element, index ) => {\r\n                  return (\r\n                    <option key={ index } value={ element.index }>\r\n                      {element.name }\r\n                    </option>\r\n                  )\r\n                } )\r\n              ) : (\r\n                  <span />\r\n                ) }\r\n            </select>\r\n          </label>\r\n          {/* End Skill Select */ }\r\n\r\n          <br></br>\r\n          {/* Ability Scores */ }\r\n          <label>\r\n            Strength\r\n            <br></br>\r\n            <input\r\n              type=\"number\"\r\n              name=\"str\"\r\n              defaultValue={ this.state.characterInfo.str }\r\n              onChange={ ( e ) => this.handleAbilityScoreChange( e ) }\r\n              min=\"0\"\r\n              max=\"30\"\r\n              required\r\n            ></input>\r\n            <span id=\"str-modifier\"></span>\r\n          </label>\r\n\r\n          <br></br>\r\n          <label>\r\n            Dexterity\r\n            <br></br>\r\n            <input\r\n              type=\"number\"\r\n              name=\"dex\"\r\n              defaultValue={ this.state.characterInfo.dex }\r\n              onChange={ ( e ) => this.handleAbilityScoreChange( e ) }\r\n              min=\"0\"\r\n              max=\"30\"\r\n              required\r\n            ></input>\r\n            <span id=\"dex-modifier\"></span>\r\n          </label>\r\n\r\n          <br></br>\r\n          <label>\r\n            Constitution\r\n            <br></br>\r\n            <input\r\n              type=\"number\"\r\n              name=\"con\"\r\n              defaultValue={ this.state.characterInfo.con }\r\n              onChange={ ( e ) => this.handleAbilityScoreChange( e ) }\r\n              min=\"0\"\r\n              max=\"30\"\r\n              required\r\n            ></input>\r\n            <span id=\"con-modifier\"></span>\r\n          </label>\r\n\r\n          <br></br>\r\n          <label>\r\n            Intelligence\r\n            <br></br>\r\n            <input\r\n              type=\"number\"\r\n              name=\"int\"\r\n              defaultValue={ this.state.characterInfo.int }\r\n              onChange={ ( e ) => this.handleAbilityScoreChange( e ) }\r\n              min=\"0\"\r\n              max=\"30\"\r\n              required\r\n            ></input>\r\n            <span id=\"int-modifier\"></span>\r\n          </label>\r\n\r\n          <br></br>\r\n          <label>\r\n            Wisdom\r\n            <br></br>\r\n            <input\r\n              type=\"number\"\r\n              name=\"wis\"\r\n              defaultValue={ this.state.characterInfo.wis }\r\n              onChange={ ( e ) => this.handleAbilityScoreChange( e ) }\r\n              min=\"0\"\r\n              max=\"30\"\r\n              required\r\n            ></input>\r\n            <span id=\"wis-modifier\"></span>\r\n          </label>\r\n\r\n          <br></br>\r\n          <label>\r\n            Charisma\r\n            <br></br>\r\n            <input\r\n              type=\"number\"\r\n              name=\"cha\"\r\n              defaultValue={ this.state.characterInfo.cha }\r\n              onChange={ ( e ) => this.handleAbilityScoreChange( e ) }\r\n              min=\"0\"\r\n              max=\"30\"\r\n              required\r\n            ></input>\r\n            <span id=\"cha-modifier\"></span>\r\n          </label>\r\n\r\n          <br />\r\n          <br />\r\n          {/* Display Status: public or private */ }\r\n          <input\r\n            type=\"radio\"\r\n            name=\"public\" // this is a state, not value\r\n            value=\"true\"\r\n            onChange={ ( e ) => this.handleDisplayStatusChange( e ) }\r\n          />\r\n          <label>Public</label>\r\n\r\n          <input\r\n            type=\"radio\"\r\n            name=\"public\" // this is a state, not value\r\n            value=\"false\"\r\n            onChange={ ( e ) => this.handleDisplayStatusChange( e ) }\r\n          />\r\n          <label>Private</label>\r\n          <br />\r\n          {/* END Display Status: public or private */ }\r\n\r\n          <br></br>\r\n          <input type=\"submit\" value=\"Create Your Character\"></input>\r\n          {/* <input type=\"reset\" value=\"Reset\"></input> Does not work with modifiers */ }\r\n          <Link to=\"/createCharacter\">\r\n            <input type=\"button\" value=\"Cancel\"></input>\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n  return {\r\n    allClasses: state.allClasses,\r\n    allRaces: state.allRaces,\r\n    allSkills: state.allSkills,\r\n    newCharacter: state.newCharacter,\r\n    currentUser: state.currentLoggedInUserInfo,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n  return {\r\n    getAllClasses: () => dispatch( getAllClasses() ),\r\n    getAllRaces: () => dispatch( getAllRaces() ),\r\n    getAllSkills: () => dispatch( getAllSkills() ),\r\n    createCharacter: ( characterInfo, userToken ) =>\r\n      dispatch( createCharacter( characterInfo, userToken ) ),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)( CharacterCreationForm )\r\n","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\Classes.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\IndividualFeature.jsx",["305","306"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getApiData } from \"../../../redux/reducers/index\"\r\nimport FeatureChoice from \"./FeatureChoice\";\r\n\r\n\r\nclass IndividualFeature extends Component {\r\n    constructor ( props ) {\r\n        super( props );\r\n    }\r\n\r\n    async componentDidMount () {\r\n        try {\r\n            console.log( \"component did mount \" + this.props )\r\n            let url = `features/${this.props.match.params.index}`;\r\n            await this.props.getApiData( url );\r\n        } catch ( error ) {\r\n            console.log( error );\r\n        }\r\n\r\n    }\r\n\r\n    render () {\r\n        console.log( `this is the rendering for the individual class` )\r\n        console.log( this.props.feature.prerequisites )\r\n        if ( !this.props.feature.class ) {\r\n            return <h1>Loading</h1>\r\n        }\r\n        return (\r\n            <div>\r\n                <Link to={ `/class/${this.props.feature.class.name.toLowerCase()}` }><h4>Back to { this.props.feature.class.name.toLowerCase() } Information</h4></Link>\r\n                <h1>{ this.props.feature.name }</h1>\r\n                <h2>Class: { this.props.feature.class.name }</h2>\r\n                {this.props.feature.level !== undefined && <h2>Level: { this.props.feature.level }</h2> }\r\n                <div>\r\n                    <h2>Prerequisites</h2>\r\n                    { this.props.feature.prerequisites !== undefined ?\r\n                        <div>\r\n                            {\r\n                                this.props.feature.prerequisites.map( item => {\r\n                                    return(\r\n                                        <h3>{item.type}</h3>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <h3>This Feature Has No Prerequisites</h3>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className = \"feature-desc\">\r\n                    <h2>Description</h2>\r\n                    { this.props.feature.desc !== undefined &&\r\n                        this.props.feature.desc.map( (item, index) => {\r\n                            return(\r\n                                <p key = {index}>{item}</p>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className = \"feature-choices\">\r\n                    <h2>Choices</h2>\r\n                    { this.props.feature.choice !== undefined ?\r\n                        <div>\r\n                            <h3>Choose {this.props.feature.choice.choose} from:</h3>\r\n                            <FeatureChoice from = {this.props.feature.choice.from} />\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <h3>This Feature Has No Choices</h3>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    console.log( `Map state to props for individual sub class ${state.dndData}` )\r\n    return {\r\n        feature: state.dndData,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    console.log( `Map dispatch to props for individiual sub class` );\r\n    return {\r\n        getApiData: ( url ) => dispatch( getApiData( url ) ),\r\n    }\r\n}\r\nexport default connect( mapStateToProps, mapDispatchToProps )( IndividualFeature );","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\Features.jsx",["307","308","309"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DisplayFeatures from \"./DisplayFeatures\"\r\n\r\nclass Features extends Component {\r\n    constructor ( props ) {\r\n        super( props );\r\n\r\n        this.state = {\r\n            features: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount () {\r\n        const { data } = await axios.get( \"https://www.dnd5eapi.co/api/features\" );\r\n        this.setState( {\r\n            features: data.results\r\n        } )\r\n    }\r\n\r\n    render () {\r\n        console.log( `this is the rendering for the features` )\r\n        console.log( this.props )\r\n        console.log(this.state.features)\r\n        {console.log(\"About to go to displayfeature\")}\r\n        return (\r\n            <div className=\"class-container\">\r\n                <h1>Features</h1>\r\n                {\r\n                    this.state.features.map( ( item, ind ) => {\r\n                        return (\r\n                            <DisplayFeatures key = {ind} name={ item.name } index={ item.index } />\r\n                        )\r\n                    } )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Features;","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\SubClasses.jsx",["310","311","312"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DisplaySubClass from \"./DisplaySubClass\"\r\n\r\nclass SubClasses extends Component {\r\n    constructor ( props ) {\r\n        super( props );\r\n\r\n        this.state = {\r\n            classes: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount () {\r\n        const { data } = await axios.get( \"https://www.dnd5eapi.co/api/subclasses\" );\r\n        this.setState( {\r\n            classes: data.results\r\n        } )\r\n    }\r\n\r\n    render () {\r\n        {console.log(\"About to go to displaysubclass\")}\r\n        return (\r\n            <div className=\"subclass-container\">\r\n                <h1>SubClasses</h1>\r\n                \r\n                {\r\n                    this.state.classes.map( ( item, ind ) => {\r\n                        return (\r\n                            <DisplaySubClass key = {ind} name={ item.name } index={ item.index } />\r\n                        )\r\n                    } )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SubClasses;","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\IndividualSubClass.jsx",["313","314"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getApiData } from \"../../../redux/reducers/index\"\r\n\r\nimport SubClassSpells from \"./SubClassSpells\";\r\n\r\n\r\nclass IndividualSubClass extends Component {\r\n    constructor ( props ) {\r\n        super( props );\r\n    }\r\n\r\n    async componentDidMount () {\r\n        try {\r\n            console.log( \"component did mount \" + this.props )\r\n            let url = `subclasses/${this.props.match.params.index}`;\r\n            await this.props.getApiData( url );\r\n        } catch ( error ) {\r\n            console.log( error );\r\n        }\r\n\r\n    }\r\n\r\n    render () {\r\n        console.log( `this is the rendering for the individual class` )\r\n        console.log( this.props )\r\n        if (!this.props.class.class){\r\n            return <h1>Loading</h1>\r\n        }\r\n        return (\r\n            <div>\r\n                <Link to={ `/class/${this.props.class.class.index}` }><h4>Back to { this.props.class.class.name } Information</h4></Link>\r\n                <h1>{ this.props.class.name }</h1>\r\n                <h2>Class: {this.props.class.class.name}</h2>\r\n                <h2>Sub Class Flavor: { this.props.class.subclass_flavor }</h2>\r\n                <div className=\"subclass-desc\">\r\n                    <h2>Sub Class Desciption</h2>\r\n                    { this.props.class.desc.map( ( item ) => {\r\n                        return (\r\n                            <p>{ item }</p>\r\n                        )\r\n                    } ) }\r\n                </div>\r\n                <div>\r\n                    <h2>Spells</h2>\r\n                    { this.props.class.spells ?\r\n                        <div>\r\n                            {this.props.class.spells.map( (item, index) => {\r\n                                return(\r\n                                    <SubClassSpells key = {index} prerequisites = {item.prerequisites} spell = {item.spell} />\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <h3>There are no spells for this subclass</h3>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    console.log( `Map state to props for individual sub class ${state.dndData}` )\r\n    return {\r\n        class: state.dndData,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    console.log( `Map dispatch to props for individiual sub class` );\r\n    return {\r\n        getApiData: ( url ) => dispatch( getApiData( url ) ),\r\n    }\r\n}\r\nexport default connect( mapStateToProps, mapDispatchToProps )( IndividualSubClass );","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\StartingEquipments.jsx",["315","316","317"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DisplayClass from \"./DisplayClass\"\r\n\r\nclass StartingEqupments extends Component {\r\n    constructor ( props ) {\r\n        super( props );\r\n\r\n        this.state = {\r\n            class: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount () {\r\n        const { data } = await axios.get( \"https://www.dnd5eapi.co/api/starting-equipment\" );\r\n        this.setState( {\r\n            class: data.results\r\n        } )\r\n    }\r\n\r\n    render () {\r\n        console.log( `this is the rendering for the features` )\r\n        {console.log(\"About to go to displayfeature\")}\r\n        return (\r\n            <div className=\"class-container\">\r\n                <h1>Starting Equipments</h1>\r\n                {\r\n                    this.state.class.map( ( item, ind ) => {\r\n                        return (\r\n                            <DisplayClass key = {ind} name={ item.class } index={ item.index } />\r\n                        )\r\n                    } )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StartingEqupments;","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\DisplayEquipment.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\IndividualEquipment.jsx",["318","319","320"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getApiData } from \"../../../redux/reducers/index\"\r\nimport Options from \"./Options\"\r\n\r\n\r\nclass IndividualEquipment extends Component {\r\n    constructor ( props ) {\r\n        super( props );\r\n    }\r\n\r\n    async componentDidMount () {\r\n        try {\r\n            console.log( \"component did mount \" + this.props )\r\n            let url = `starting-equipment/${this.props.match.params.index}`;\r\n            await this.props.getApiData( url );\r\n        } catch ( error ) {\r\n            console.log( error );\r\n        }\r\n\r\n    }\r\n\r\n    render () {\r\n        console.log( `this is the rendering for the individual class` )\r\n        if ( !this.props.equipment.class ) {\r\n            return <h1>Loading</h1>\r\n        }\r\n        return (\r\n            <div>\r\n                <Link to={ `/class/${this.props.match.params.index}` }><h4>Back to { this.props.equipment.class.name } Information</h4></Link>\r\n                <h1>Class : { this.props.equipment.class.name }</h1>\r\n                <div className=\"starting-equip\">\r\n                    <h2>Sarting Equipment</h2>\r\n                    { this.props.equipment.starting_equipment.length > 0 ?\r\n                        this.props.equipment.starting_equipment.map( ( item, index ) => {\r\n                            return (\r\n                                <div>\r\n                                    <h3>Quantity: { item.quantity }</h3>\r\n                                    <Link to={ `/equipment/${item.equipment.index}` }><h3>{ item.equipment.name }</h3></Link>\r\n                                </div>\r\n                            )\r\n                        } ) :\r\n                        <div>\r\n                            <h3>This Class Has No Starting Equipment</h3>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                {/* <div className=\"equip-options\">\r\n                    <h2>Starting Equipment Options</h2>\r\n                    {\r\n                        this.props.equipment.starting_equipment_options.length > 0 ?\r\n                            <div>\r\n                                <h3>Choose 1 From: </h3>\r\n                                { this.props.equipment.starting_equipment_options.map( ( item, index ) => {\r\n                                        return(\r\n                                            <Options arr = {item.from}/>\r\n                                        )\r\n                                } ) }\r\n                            </div>:\r\n                            <div>\r\n                                <h3>This Class Has No Starting Equipment Options</h3>\r\n                                </div>\r\n                    }\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    console.log( `Map state to props for individual sub class ${state.dndData}` )\r\n    return {\r\n        equipment: state.dndData,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    console.log( `Map dispatch to props for individiual sub class` );\r\n    return {\r\n        getApiData: ( url ) => dispatch( getApiData( url ) ),\r\n    }\r\n}\r\nexport default connect( mapStateToProps, mapDispatchToProps )( IndividualEquipment );","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\AllEquipment.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Races.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\IndividualRace.jsx",["321"],"import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { getApiData } from '../../redux/reducers'\r\n\r\nimport '../../css/single-race.css'\r\nimport { Link } from 'react-router-dom'\r\nimport dragonborn from './dnd race images/dragonborn.png'\r\nimport dwarf from './dnd race images/dwarf.png'\r\nimport elf from './dnd race images/elf.png'\r\nimport gnome from './dnd race images/gnome.png'\r\nimport halfElf from './dnd race images/half-elf.png'\r\nimport halfling from './dnd race images/halfling.png'\r\nimport halfOrc from './dnd race images/half-orc.png'\r\nimport human from './dnd race images/human.png'\r\nimport tiefling from './dnd race images/tiefling.png'\r\n\r\nclass IndividualRace extends Component {\r\n  componentDidMount = () => {\r\n    const race = 'races/' + this.props.match.params.race\r\n    this.props.getApiData(race)\r\n\r\n    setTimeout(() => {\r\n      console.log('race prop:', this.props.race)\r\n    }, 300)\r\n  }\r\n\r\n  render() {\r\n    const { race } = this.props.match.params\r\n    let bkgImage\r\n    race === 'dragonborn'\r\n      ? (bkgImage = dragonborn)\r\n      : race === 'dwarf'\r\n      ? (bkgImage = dwarf)\r\n      : race === 'elf'\r\n      ? (bkgImage = elf)\r\n      : race === 'gnome'\r\n      ? (bkgImage = gnome)\r\n      : race === 'half-elf'\r\n      ? (bkgImage = halfElf)\r\n      : race === 'halfling'\r\n      ? (bkgImage = halfling)\r\n      : race === 'half-orc'\r\n      ? (bkgImage = halfOrc)\r\n      : race === 'human'\r\n      ? (bkgImage = human)\r\n      : race === 'tiefling'\r\n      ? (bkgImage = tiefling)\r\n      : (bkgImage = '')\r\n    return (\r\n      <div className=\"signle-race-root-container\">\r\n        <div className=\"single-race-title\">\r\n          <h1>Race: {this.props.race.name}</h1>\r\n        </div>\r\n        <div className=\"single-race-container\">\r\n          <div className=\"single-race-image\">\r\n            <img src={bkgImage} alt=\"single-race-image\" />\r\n          </div>\r\n\r\n          {/* <div className=\"clear-float\"></div> */}\r\n\r\n          <div className=\"single-race-info\">\r\n            <div className=\"race-info-title\">\r\n              <h3>Age</h3>\r\n            </div>\r\n            <div className=\"race-info\">\r\n              {this.props.race !== undefined ? (\r\n                <div>\r\n                  <p>{this.props.race.age}</p>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Alignment</h3>\r\n            </div>\r\n            <div className=\"race-info\">\r\n              {this.props.race !== undefined ? (\r\n                <div>\r\n                  <p>{this.props.race.alignment}</p>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Language Description</h3>\r\n            </div>\r\n            <div className=\"race-info\">\r\n              {this.props.race !== undefined ? (\r\n                <div>\r\n                  <p>{this.props.race.language_desc}</p>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Languages</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race.ability_bonuses !== undefined ? (\r\n                this.props.race.languages.map((element, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Link to={`/languages/${element.index}`}>\r\n                        <p>{element.name}</p>\r\n                      </Link>\r\n                    </div>\r\n                  )\r\n                })\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Size</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race !== undefined ? (\r\n                <div>\r\n                  <p>{this.props.race.size}</p>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Size Description</h3>\r\n            </div>\r\n            <div className=\"race-info\">\r\n              {this.props.race !== undefined ? (\r\n                <div>\r\n                  <p>{this.props.race.size_description}</p>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Ability Bonuses</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race.ability_bonuses !== undefined ? (\r\n                this.props.race.ability_bonuses.map((element, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Link to={`/bonus/${element.ability_score.index}`}>\r\n                        <p>{element.ability_score.name}</p>\r\n                      </Link>\r\n                      <h4>Bonus</h4>\r\n                      <p>{element.bonus}</p>\r\n                    </div>\r\n                  )\r\n                })\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Speed</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race !== undefined ? (\r\n                <div>\r\n                  <p>{this.props.race.speed}</p>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Starting Proficiencies</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race.starting_proficiencies !== undefined ? (\r\n                this.props.race.starting_proficiencies.length !== 0 ? (\r\n                  this.props.race.starting_proficiencies.map(\r\n                    (element, index) => {\r\n                      return (\r\n                        <div key={index}>\r\n                          <p>{element.name}</p>\r\n                        </div>\r\n                      )\r\n                    }\r\n                  )\r\n                ) : (\r\n                  <div>\r\n                    <p>None</p>\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Starting Proficiency Options</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race.starting_proficiency_options !== undefined ? (\r\n                <div>\r\n                  Choose: {this.props.race.starting_proficiency_options.choose}\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <p>Choose: None</p>\r\n                </div>\r\n              )}\r\n\r\n              {this.props.race.starting_proficiency_options !== undefined ? (\r\n                this.props.race.starting_proficiency_options.from.length !==\r\n                0 ? (\r\n                  this.props.race.starting_proficiency_options.from.map(\r\n                    (element, index) => {\r\n                      return (\r\n                        <div key={index}>\r\n                          <Link to={`/races/proficiencies/${element.index}`}>\r\n                            <p>{element.name}</p>\r\n                          </Link>\r\n                        </div>\r\n                      )\r\n                    }\r\n                  )\r\n                ) : (\r\n                  <div>\r\n                    <p>None</p>\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Sub Races</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race.subraces !== undefined ? (\r\n                this.props.race.subraces.length !== 0 ? (\r\n                  this.props.race.subraces.map((element, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <p>{element.name}</p>\r\n                      </div>\r\n                    )\r\n                  })\r\n                ) : (\r\n                  <div>\r\n                    <p>None</p>\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Traits</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race.traits !== undefined ? (\r\n                this.props.race.traits.map((element, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Link to={`/traits/${element.index}`}>\r\n                        <p>{element.name}</p>\r\n                      </Link>\r\n                    </div>\r\n                  )\r\n                })\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    race: state.dndData,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getApiData: (searchApi) => dispatch(getApiData(searchApi)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IndividualRace)\r\n","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Bonus.jsx",["322"],"import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { getApiData } from '../../redux/reducers'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Bonus extends Component {\r\n  state = {\r\n    raceThatCalled: this.props.bonus, // holds the race that called this page before redux state is overwritten\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const bonus = 'ability-scores/' + this.props.match.params.bonus\r\n    this.props.getApiData(bonus)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* If page refreshes, then race that called this is undefined b/c its overwritten, thus it shows nothing */}\r\n        {/* {this.state.raceThatCalled.index !== undefined ? (\r\n          <Link to={`/races/${this.state.raceThatCalled.index}`}>\r\n            <p>Back to {this.state.raceThatCalled.name} information</p>\r\n          </Link>\r\n        ) : (\r\n          <span />\r\n        )} */}\r\n\r\n        <h1>Bonus: {this.props.bonus.full_name}</h1>\r\n\r\n        <h3>Description</h3>\r\n        {this.props.bonus.desc !== undefined ? (\r\n          this.props.bonus.desc.map((element, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <p>{element}</p>\r\n              </div>\r\n            )\r\n          })\r\n        ) : (\r\n          <span />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    bonus: state.dndData,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getApiData: (searchApi) => dispatch(getApiData(searchApi)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Bonus)\r\n","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Language.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Trait.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\Proficiency.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\monsters\\ConditionImmunity.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\monsters\\IndividualMonster.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\monsters\\Monsters.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\builds\\Builds.jsx",["323"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAllCharacters } from \"../../redux/reducers\";\r\n\r\nimport { Link } from 'react-router-dom'\r\nclass Builds extends Component {\r\n    constructor ( props ) {\r\n        super( props )\r\n\r\n    }\r\n\r\n    async componentDidMount () {\r\n        console.log( \"Build component Mounted\" )\r\n        try {\r\n            await this.props.getAllCharacters();\r\n\r\n        } catch ( error ) {\r\n            console.log( error )\r\n        }\r\n    }\r\n    render () {\r\n        console.log( this.props.characters )\r\n        return (\r\n            <div>\r\n                <h1>Characters</h1>\r\n                { this.props.characters !== undefined ?\r\n                    this.props.characters.map( ( item, index ) => {\r\n                        return (\r\n                            <div id={ item.id }>\r\n                                <Link to={ `/character/${item.id}` }><h3 key={ index }>{ item.name }</h3></Link>\r\n                            </div>\r\n                        )\r\n                    } ) : <h1>Loading</h1>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        characters: state.characters.characters,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllCharacters: () => dispatch( getAllCharacters() ),\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( Builds );","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\profile\\Profile.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\builds\\DisplayCharacter.jsx",["324"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getSingleCharacter } from \"../../redux/reducers\";\r\n\r\nclass DisplayCharacter extends Component {\r\n    constructor ( props ) {\r\n        super( props )\r\n\r\n    }\r\n\r\n    async componentDidMount () {\r\n        console.log( \"Build component Mounted\" )\r\n        try {\r\n            await this.props.getSingleCharacter( this.props.match.params.id );\r\n        } catch ( error ) {\r\n            console.log( error )\r\n        }\r\n    }\r\n    /* \r\n        \"name\": \"Leonardo Davinci\",\r\n    \"class\": \"bard\",\r\n    \"race\": \"elf\",\r\n    \"gender\": \"male\",\r\n    \"armorClass\": 10,\r\n    \"speed\": 30,\r\n    \"skill1\": \"history\",\r\n    \"skill2\": \"religion\",\r\n    \"skill3\": null,\r\n    \"skill4\": null,\r\n    \"str\": 14,\r\n    \"dex\": 10,\r\n    \"con\": 11,\r\n    \"int\": 11,\r\n    \"wis\": 16,\r\n    \"cha\": 18,\r\n    */\r\n    render () {\r\n        console.log( this.props.character )\r\n        return (\r\n            <div>\r\n\r\n                {this.props.character !== undefined ?\r\n                    <div>\r\n                        <h1>Character Name : { this.props.character.name }</h1>\r\n                        <h3>Class : { this.props.character.class.charAt(0).toUpperCase() }{this.props.character.class.substr(1)}</h3>\r\n                        <h3>Race : { this.props.character.race.charAt(0).toUpperCase() }{this.props.character.race.substr(1)}</h3>\r\n                        <h3>Gender: { this.props.character.gender.charAt(0).toUpperCase() }{this.props.character.gender.substr(1)}</h3>\r\n                        <h3>Armor Class : {this.props.character.armorClass}</h3>\r\n                        <h3>Speed : {this.props.character.speed}</h3>\r\n                        {this.props.character.skill1 !== null ? <h3>Skill #1 : {this.props.character.skill1}</h3> : <h3>Skill #1 : No Skill Chosen</h3>}\r\n                        {this.props.character.skill2 !== null ? <h3>Skill #2 : {this.props.character.skill2}</h3> : <h3>Skill #2 : No Skill Chosen</h3>}\r\n                        {this.props.character.skill3 !== null ? <h3>Skill #3 : {this.props.character.skill3}</h3> : <h3>Skill #3 : No Skill Chosen</h3>}\r\n                        {this.props.character.skill4 !== null ? <h3>Skill #4 : {this.props.character.skill4}</h3> : <h3>Skill #4 : No Skill Chosen</h3>}\r\n                        <h3>Strength : {this.props.character.str}</h3>\r\n                        <h3>Dexterity : {this.props.character.dex}</h3>\r\n                        <h3>Constitution : {this.props.character.con}</h3>\r\n                        <h3>Intelligence : {this.props.character.int}</h3>\r\n                        <h3>Wisdom : {this.props.character.wis}</h3>\r\n                        <h3>Charisma : {this.props.character.cha}</h3>\r\n                    </div>\r\n                    : <h1>Loading</h1>\r\n                }\r\n                {/* {this.props.character !== undefined ?\r\n                    this.props.character.map( (item, index) => {\r\n                        return(\r\n                            <div id = {item.id}>\r\n                                <h3>{item.name}</h3>\r\n                            </div>\r\n                        )\r\n                    }) : <h1>Loading</h1>\r\n                } */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        character: state.character.characters,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getSingleCharacter: ( id ) => dispatch( getSingleCharacter( id ) ),\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( DisplayCharacter );","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\IndividualClass.jsx",["325","326"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getApiData } from \"../../../../../redux/reducers/index\"\r\nimport Choices from \"./Choices\";\r\nimport Proficiencies from \"./Proficiencies\";\r\nimport SavingThrows from \"./SavingThrows\";\r\nimport SpellCasting from \"./SpellCasting\";\r\nimport Subclass from \"./Subclass\";\r\n\r\nclass IndividualClass extends Component {\r\n    constructor ( props ) {\r\n        super( props );\r\n\r\n        /* this.state = {\r\n            name: '',\r\n            hit_die: '',\r\n            p_choices: [],\r\n            proficiencies: [],\r\n            saving_throws: [],\r\n            starting_equipment: '',\r\n            class_levels: '',\r\n            subclasses: [],\r\n            spellCasting: {}\r\n        } */\r\n    }\r\n\r\n    async componentDidMount () {\r\n        try {\r\n            console.log( \"component did mount \" + this.props )\r\n            let url = `classes/${this.props.match.params.index}`;\r\n            await this.props.getApiData( url );\r\n        } catch ( error ) {\r\n            console.log( error );\r\n        }\r\n\r\n    }\r\n\r\n    render () {\r\n        console.log( `this is the rendering for the individual class` )\r\n        console.log(this.props)\r\n        if (!this.props.class.subclasses){\r\n            return <h1>Loading</h1>\r\n        }\r\n        return (\r\n            <div>\r\n                <Link to = {`/classes`}><h4>Back to Classes Information</h4></Link>\r\n                <h1>{ this.props.class.name }</h1>\r\n                <h2>Hit Die: { this.props.class.hit_die }</h2>\r\n                <div className=\"p_choices\">\r\n                    <h2>Proficiency Choices</h2>\r\n                    { this.props.class.proficiency_choices !== undefined && this.props.class.proficiency_choices.map( ( item, index ) => {\r\n                        return (\r\n                            <Choices key={ index } choose={ item.choose } from={ item.from } />\r\n                        )\r\n                    } ) }\r\n                </div>\r\n                <div className=\"proficiencies\">\r\n                    <h2>Proficiencies</h2>\r\n                    { this.props.class.proficiencies !== undefined && this.props.class.proficiencies.map( ( item, index ) => {\r\n                        return (\r\n                            <Proficiencies key={ index } name={ item.name } classIndex={ item.index } />\r\n                        )\r\n                    } ) }\r\n                </div>\r\n                <div className=\"saving-throws\">\r\n                    <h2>Saving Throws: </h2>\r\n                    { this.props.class.saving_throws !== undefined && this.props.class.saving_throws.map( ( item, index ) => {\r\n                        return (\r\n                            <SavingThrows key={ index } name={ item.name } classIndex={ item.index } />\r\n                        )\r\n                    } ) }\r\n                </div>\r\n                <Link to={ `/starting-equipment/${this.props.match.params.index}` }><h2>Starting Equipment</h2></Link>\r\n                <Link to={ `/class/${this.props.match.params.index}/levels` }><h2>Class Levels</h2></Link>\r\n                <div className=\"subclasses\">\r\n                    <h2>Sub-Classes</h2>\r\n                    { this.props.class.subclasses !== undefined && this.props.class.subclasses.map( ( item, index ) => {\r\n                        return (\r\n                            <Subclass key={ index } name={ item.name } classIndex={ item.index } />\r\n                        )\r\n                    } ) }\r\n                </div>\r\n                {this.props.class.spellcasting !== undefined && (this.props.class.spellcasting ?\r\n                    <div className=\"spellcasting\">\r\n                        <SpellCasting info={ this.props.class.spellcasting.info } level={ this.props.class.spellcasting.level } spellcasting_ability={ this.props.class.spellcasting.spellcasting_ability } />\r\n                    </div> :\r\n                    <div className='no-spell-casting'> <h2>No Spell Casting for this class</h2></div>) }\r\n                {this.props.class.spells && <Link to={ `/classSpells/${this.props.match.params.index}/spells` }><h2>{ this.props.class.name} Class Spells</h2></Link>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    console.log( `Map state to props for individual class ${state.dndData}` )\r\n    return {\r\n        class: state.dndData,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    console.log( `Map dispatch to props for individiual class` );\r\n    return {\r\n        getApiData: ( url ) => dispatch( getApiData( url ) ),\r\n    }\r\n}\r\nexport default connect( mapStateToProps, mapDispatchToProps )( IndividualClass );","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Skills.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\DisplayProficiencies.jsx",["327","328","329"],"import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\"\r\nimport { connect } from \"react-redux\";\r\nimport { getApiData } from \"../../../../../redux/reducers\";\r\n\r\nclass DisplayProficiencies extends React.Component {\r\n    constructor ( props ) {\r\n        super( props )\r\n    }\r\n\r\n    async componentDidMount () {\r\n        console.log( \"component did mount \" + this.props )\r\n        let url = `/proficiencies/${this.props.match.params.index}`;\r\n        await this.props.getApiData( url );\r\n        //const {data} = await axios.get(`https://www.dnd5eapi.co/api/equipment/${this.props.prof.references.index}`)\r\n    }\r\n    render () {\r\n        console.log( this.props )\r\n        if ( !this.props.prof.name ) {\r\n            return <h1>Loading</h1>\r\n        }\r\n        return (\r\n            <div>\r\n                <h2>{ this.props.prof.name }</h2>\r\n                <div className=\"prof-classes\">\r\n                    <h2>Classes</h2>\r\n                    { this.props.prof.classes ?\r\n                        <div>\r\n\r\n                            {\r\n                                this.props.prof.classes.map( ( item, index ) => {\r\n                                    return (\r\n                                        <Link to={ `/class/${item.index}` }><p>{ item.name }</p></Link>\r\n                                    )\r\n\r\n                                } )\r\n                            }\r\n\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <h3>This Skill Is Not Tied To Any Class</h3>\r\n                        </div> }\r\n                </div>\r\n                <div className=\"prof-races\">\r\n                    <h2>Races</h2>\r\n                    { this.props.prof.races ?\r\n                        <div>\r\n                            {\r\n                                this.props.prof.races.map( ( item, index ) => {\r\n                                    return (\r\n                                        <Link to={ `/race/${item.index}` }><p>{ item.name }</p></Link>\r\n                                    )\r\n                                } )\r\n                            }\r\n\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <h3>This Skill Is Not Tied To Any Race</h3>\r\n                        </div> }\r\n                </div>\r\n                {\r\n                    this.props.prof.references !== undefined && \r\n                    <div>\r\n                        <h2>References</h2>\r\n                        {this.props.prof.references.map( (item, index) => {\r\n                            <Link to = {`/equipment/${item.index}`}><p>{item.name}</p></Link>\r\n                        })}\r\n                        </div>\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = ( state ) => {\r\n    console.log( `Map state to props for individual sub class ${state.dndData}` )\r\n    return {\r\n        prof: state.dndData,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    console.log( `Map dispatch to props for individiual sub class` );\r\n    return {\r\n        getApiData: ( url ) => dispatch( getApiData( url ) ),\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( DisplayProficiencies );","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\ClassLevels.jsx",["330"],"import React, { Component } from \"react\";\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getApiData } from \"../../../../../redux/reducers/index\"\r\n\r\n\r\nclass ClassLevels extends Component {\r\n    constructor ( props ) {\r\n        super( props );\r\n\r\n        this.state = {\r\n            array: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount () {\r\n        try {\r\n            console.log( \"component did mount \" + this.props )\r\n            let url = `classes/${this.props.match.params.index}/levels`;\r\n            await this.props.getApiData( url );\r\n            /* const { data } = await axios.get( `https://www.dnd5eapi.co/api/${url}` )\r\n            console.log( data );\r\n            this.setState( {\r\n                array: data\r\n            } ) */\r\n        } catch ( error ) {\r\n            console.log( error );\r\n        }\r\n\r\n    }\r\n\r\n    render () {\r\n        console.log( `this is the rendering for the individual class` )\r\n        console.log( this.props.class )\r\n\r\n        if ( !this.props.class.length ) {\r\n            return <h1>Loading</h1>\r\n        }\r\n        return (\r\n            <div>\r\n                <Link to={ `/class/${this.props.match.params.index}` }><h4>Back to { this.props.match.params.index } Information</h4></Link>\r\n                <h1>{ this.props.match.params.index.charAt( 0 ).toUpperCase() }{ this.props.match.params.index.substring( 1 ) }</h1>\r\n                {\r\n\r\n                    this.props.class.map( ( item, index ) => {\r\n                        return (\r\n                            <div key={ index } className={ `level-${item.level}` }>\r\n                                <h2>Level : { item.level }</h2>\r\n                                {item.ability_score_bonuses >= 0 && <h2>Ability-Score Bonus : { item.ability_score_bonuses }</h2> }\r\n                                {item.prof_bonus >= 0 && <h2>Proficiency Bonus : { item.prof_bonus }</h2> }\r\n                                {item.feature_choices.length !== 0 && <div classname=\"feature-choices\">\r\n                                    <h2>Feature Choices</h2>\r\n                                    { item.feature_choices.map( ( item, index ) => {\r\n                                        return (\r\n                                            <Link to={ `/feature/${item.index}` }><h3 key={ index }>{ item.name }</h3></Link>\r\n                                        )\r\n                                    } ) }\r\n                                </div> }\r\n                                {item.features.length !== 0 && <div>\r\n                                    <h2>Features</h2>\r\n                                    { item.features.map( ( item, index ) => {\r\n                                        return (\r\n                                            <Link to={ `/feature/${item.index}` }><h3 key={ index }>{ item.name }</h3></Link>\r\n                                        )\r\n                                    } ) }\r\n                                </div> }\r\n                                {item.spellcasting !== undefined && <div>\r\n                                    <h2>Spell Casting</h2>\r\n                                    {\r\n                                        Object.entries( item.spellcasting ).map( ( [ key, value ] ) => {\r\n                                            let arr = key.split( \"_\" ).join( \" \" );\r\n                                            return (\r\n                                                <h3>{ arr } : {value }</h3>\r\n                                            )\r\n                                        } )\r\n                                    }\r\n                                </div> }\r\n                                {item.class_specific !== undefined && <div>\r\n                                    <h2>Class Specific </h2>\r\n                                    {\r\n                                        Object.entries( item.class_specific ).map( ( [ key, value ] ) => {\r\n                                            let arr = key.split( \"_\" ).join( \" \" );\r\n                                            return (\r\n                                                <h3>{ arr } : {value }</h3>\r\n                                            )\r\n                                        } )\r\n                                    }\r\n                                </div> }\r\n                                <br></br>\r\n                            </div>\r\n                        )\r\n                    } )\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    console.log( `Map state to props for individual class ${state.dndData}` )\r\n    return {\r\n        class: state.dndData,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    console.log( `Map dispatch to props for individiual class` );\r\n    return {\r\n        getApiData: ( url ) => dispatch( getApiData( url ) ),\r\n    }\r\n}\r\nexport default connect( mapStateToProps, mapDispatchToProps )( ClassLevels );","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\ClassSpells.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\redux\\reducers\\actionTypes.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\spells\\SpellDisplay.js",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\SubClass.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\Feature.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\StartingEquipment.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\DisplayFeatures.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\DisplaySubClass.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\features\\FeatureChoice.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\subclasses\\SubClassSpells.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\DisplayClass.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\monsters\\DisplayMonster.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\startingEquipment\\Options.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\races\\DisplayRace.jsx",["331"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../css/races.css'\r\nimport dragonborn from './dnd race images/dragonborn.png'\r\nimport dwarf from './dnd race images/dwarf.png'\r\nimport elf from './dnd race images/elf.png'\r\nimport gnome from './dnd race images/gnome.png'\r\nimport halfElf from './dnd race images/half-elf.png'\r\nimport halfling from './dnd race images/halfling.png'\r\nimport halfOrc from './dnd race images/half-orc.png'\r\nimport human from './dnd race images/human.png'\r\nimport tiefling from './dnd race images/tiefling.png'\r\n\r\nclass DisplayRace extends Component {\r\n  render() {\r\n    const { index, name } = this.props\r\n    let bkgImage\r\n    index === 'dragonborn'\r\n      ? (bkgImage = dragonborn)\r\n      : index === 'dwarf'\r\n      ? (bkgImage = dwarf)\r\n      : index === 'elf'\r\n      ? (bkgImage = elf)\r\n      : index === 'gnome'\r\n      ? (bkgImage = gnome)\r\n      : index === 'half-elf'\r\n      ? (bkgImage = halfElf)\r\n      : index === 'halfling'\r\n      ? (bkgImage = halfling)\r\n      : index === 'half-orc'\r\n      ? (bkgImage = halfOrc)\r\n      : index === 'human'\r\n      ? (bkgImage = human)\r\n      : index === 'tiefling'\r\n      ? (bkgImage = tiefling)\r\n      : (bkgImage = '')\r\n\r\n    return (\r\n      <div className=\"race-preview\">\r\n        <div>\r\n          <img src={bkgImage} alt=\"race-image\" height=\"600px\" width=\"420px\" />\r\n        </div>\r\n        <Link to={`/races/${index}`}>{name}</Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DisplayRace\r\n","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\Classes.jsx",["332","333","334"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DisplayClass from \"./displayClass/DisplayClass\"\r\nimport \"../../../css/class.css\"\r\nclass Classes extends Component {\r\n    constructor ( props ) {\r\n        super( props );\r\n\r\n        this.state = {\r\n            classes: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount () {\r\n        const { data } = await axios.get( \"https://www.dnd5eapi.co/api/classes\" );\r\n        this.setState( {\r\n            classes: data.results\r\n        } )\r\n    }\r\n\r\n    render () {\r\n        {console.log(\"About to go to displayclass\")}\r\n        return (\r\n            <div className=\"class-container\">\r\n                <h1 id = \"classes\">Classes</h1>\r\n                \r\n                {\r\n                    this.state.classes.map( ( item, ind ) => {\r\n                        return (\r\n                            <DisplayClass key = {ind} name={ item.name } index={ item.index } />\r\n                        )\r\n                    } )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Classes;","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\profile\\displayCharacters\\DisplayUserCharacters.jsx",["335"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAllUserCharacters } from \"../../../redux/reducers\";\r\n\r\nimport { Link } from 'react-router-dom'\r\nclass DisplayUserCharacters extends Component {\r\n    constructor ( props ) {\r\n        super( props )\r\n    }\r\n\r\n    async componentDidMount () {\r\n        console.log( \"Build component Mounted\", this.props.id )\r\n        try {\r\n            await this.props.getAllUserCharacters(this.props.id);\r\n\r\n        } catch ( error ) {\r\n            console.log( error )\r\n        }\r\n    }\r\n    render () {\r\n        console.log(\"user characters\", this.props.characters )\r\n        return (\r\n            <div>\r\n                <h1>Characters</h1>\r\n                { this.props.characters !== undefined ?\r\n                    this.props.characters.map( ( item, index ) => {\r\n                        return (\r\n                            <div id={ item.id }>\r\n                                <Link to={ `/character/${item.id}` }><h3 key={ index }>{ item.name }</h3></Link>\r\n                            </div>\r\n                        )\r\n                    } ) : <h1>Loading</h1>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        characters: state.characters.characters,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllUserCharacters: (id) => dispatch( getAllUserCharacters(id) ),\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( DisplayUserCharacters );","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\profile\\displayUser\\UserProfile.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\SavingThrows.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Choices.jsx",["336"],"import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PChoices from \"./PChoices\";\r\n\r\nconst Choices = ( { choose, from } ) => {\r\n    return (\r\n        <div>\r\n            <h3>Choose { choose } from:</h3>\r\n            {from.map( ( item, index ) => {\r\n                return (\r\n                    <PChoices key = {index} name={ item.name } classIndex = {item.index}/>\r\n                )\r\n            } ) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Choices;","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Subclass.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Proficiencies.jsx",["337"],"import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Proficiencies extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Link to = {`/proficiencies/${this.props.classIndex}`}><h4>{this.props.name}</h4></Link>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Proficiencies;","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\SpellCasting.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\Skill.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\PChoices.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\SpellCastingInfo.jsx",["338"],"import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport SpellCastingDesc from \"./SpellCastingDesc\";\r\n\r\nconst SpellCastingInfo = ( { name, desc } ) => {\r\n\r\n    return (\r\n        <div>\r\n            <h3>{ name }</h3>\r\n            {desc.map( ( item, index ) => {\r\n                return (\r\n                    <SpellCastingDesc key={ index } description={ item } />\r\n                )\r\n            } ) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpellCastingInfo;","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\DisplayClass.jsx",[],"D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\components\\classes\\classes\\displayClass\\individualClass\\SpellCastingDesc.jsx",["339"],"import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SpellCastingDesc = ({ description }) => {\r\n    \r\n    return(\r\n        <div>\r\n            <p>{description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpellCastingDesc;","D:\\Downlaods\\TTP Internship\\CAPSTONE\\main\\frontend\\DND-Capstone-FrontEnd\\src\\helper\\scroll-to-top.js",["340"],{"ruleId":"341","replacedBy":"342"},{"ruleId":"343","replacedBy":"344"},{"ruleId":"345","severity":1,"message":"346","line":8,"column":9,"nodeType":"347","messageId":"348","endLine":8,"endColumn":13},{"ruleId":"349","severity":1,"message":"350","line":15,"column":9,"nodeType":"351","endLine":15,"endColumn":121},{"ruleId":"345","severity":1,"message":"352","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":13},{"ruleId":"353","severity":1,"message":"354","line":113,"column":49,"nodeType":"355","messageId":"356","endLine":113,"endColumn":50},{"ruleId":"345","severity":1,"message":"352","line":1,"column":8,"nodeType":"347","messageId":"348","endLine":1,"endColumn":13},{"ruleId":"357","severity":1,"message":"358","line":11,"column":5,"nodeType":"359","messageId":"360","endLine":13,"endColumn":6},{"ruleId":"345","severity":1,"message":"361","line":3,"column":10,"nodeType":"347","messageId":"348","endLine":3,"endColumn":17},{"ruleId":"345","severity":1,"message":"362","line":4,"column":10,"nodeType":"347","messageId":"348","endLine":4,"endColumn":14},{"ruleId":"363","severity":1,"message":"364","line":28,"column":9,"nodeType":"365","messageId":"366","endLine":28,"endColumn":55},{"ruleId":"345","severity":1,"message":"361","line":3,"column":10,"nodeType":"347","messageId":"348","endLine":3,"endColumn":17},{"ruleId":"345","severity":1,"message":"362","line":4,"column":10,"nodeType":"347","messageId":"348","endLine":4,"endColumn":14},{"ruleId":"363","severity":1,"message":"364","line":25,"column":9,"nodeType":"365","messageId":"366","endLine":25,"endColumn":56},{"ruleId":"345","severity":1,"message":"352","line":1,"column":8,"nodeType":"347","messageId":"348","endLine":1,"endColumn":13},{"ruleId":"357","severity":1,"message":"358","line":12,"column":5,"nodeType":"359","messageId":"360","endLine":14,"endColumn":6},{"ruleId":"345","severity":1,"message":"361","line":3,"column":10,"nodeType":"347","messageId":"348","endLine":3,"endColumn":17},{"ruleId":"345","severity":1,"message":"362","line":4,"column":10,"nodeType":"347","messageId":"348","endLine":4,"endColumn":14},{"ruleId":"363","severity":1,"message":"364","line":26,"column":9,"nodeType":"365","messageId":"366","endLine":26,"endColumn":55},{"ruleId":"345","severity":1,"message":"352","line":1,"column":8,"nodeType":"347","messageId":"348","endLine":1,"endColumn":13},{"ruleId":"345","severity":1,"message":"367","line":7,"column":8,"nodeType":"347","messageId":"348","endLine":7,"endColumn":15},{"ruleId":"357","severity":1,"message":"358","line":11,"column":5,"nodeType":"359","messageId":"360","endLine":13,"endColumn":6},{"ruleId":"368","severity":1,"message":"369","line":57,"column":13,"nodeType":"351","endLine":57,"endColumn":59},{"ruleId":"345","severity":1,"message":"362","line":6,"column":10,"nodeType":"347","messageId":"348","endLine":6,"endColumn":14},{"ruleId":"357","severity":1,"message":"358","line":7,"column":5,"nodeType":"359","messageId":"360","endLine":10,"endColumn":6},{"ruleId":"357","severity":1,"message":"358","line":6,"column":5,"nodeType":"359","messageId":"360","endLine":9,"endColumn":6},{"ruleId":"345","severity":1,"message":"352","line":1,"column":8,"nodeType":"347","messageId":"348","endLine":1,"endColumn":13},{"ruleId":"357","severity":1,"message":"358","line":14,"column":5,"nodeType":"359","messageId":"360","endLine":28,"endColumn":6},{"ruleId":"345","severity":1,"message":"352","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":13},{"ruleId":"357","severity":1,"message":"358","line":8,"column":5,"nodeType":"359","messageId":"360","endLine":10,"endColumn":6},{"ruleId":"370","severity":1,"message":"371","line":68,"column":72,"nodeType":"372","messageId":"373","endLine":68,"endColumn":74},{"ruleId":"345","severity":1,"message":"352","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":13},{"ruleId":"368","severity":1,"message":"369","line":41,"column":11,"nodeType":"351","endLine":41,"endColumn":79},{"ruleId":"345","severity":1,"message":"361","line":3,"column":10,"nodeType":"347","messageId":"348","endLine":3,"endColumn":17},{"ruleId":"345","severity":1,"message":"362","line":4,"column":10,"nodeType":"347","messageId":"348","endLine":4,"endColumn":14},{"ruleId":"363","severity":1,"message":"364","line":25,"column":9,"nodeType":"365","messageId":"366","endLine":25,"endColumn":53},{"ruleId":"357","severity":1,"message":"358","line":7,"column":5,"nodeType":"359","messageId":"360","endLine":9,"endColumn":6},{"ruleId":"345","severity":1,"message":"362","line":2,"column":10,"nodeType":"347","messageId":"348","endLine":2,"endColumn":14},{"ruleId":"357","severity":1,"message":"358","line":5,"column":5,"nodeType":"359","messageId":"360","endLine":7,"endColumn":6},{"ruleId":"345","severity":1,"message":"362","line":2,"column":10,"nodeType":"347","messageId":"348","endLine":2,"endColumn":14},{"ruleId":"345","severity":1,"message":"362","line":2,"column":10,"nodeType":"347","messageId":"348","endLine":2,"endColumn":14},{"ruleId":"345","severity":1,"message":"374","line":1,"column":8,"nodeType":"347","messageId":"348","endLine":1,"endColumn":13},"no-native-reassign",["375"],"no-negated-in-lhs",["376"],"no-unused-vars","'bool' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'connect' is defined but never used.","'Link' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Options' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]