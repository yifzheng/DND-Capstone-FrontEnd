[{"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\index.js":"1","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\reportWebVitals.js":"2","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\redux\\store.js":"3","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\App.js":"4","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\helper\\scroll-to-top.js":"5","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\Routes\\Routes.jsx":"6","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\navbar\\Navbar.jsx":"7","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\redux\\reducers\\index.js":"8","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\Homepage.js":"9","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\spells\\IndividualSpell.js":"10","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\characterCreation\\CreateCharacter.js":"11","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\AllCharacters.js":"12","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\LoginPage.js":"13","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\SignUpForm.jsx":"14","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\spells\\Spells.jsx":"15","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\Classes.jsx":"16","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\features\\Features.jsx":"17","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\startingEquipment\\IndividualEquipment.jsx":"18","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\features\\IndividualFeature.jsx":"19","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\startingEquipment\\AllEquipment.jsx":"20","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\subclasses\\IndividualSubClass.jsx":"21","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\startingEquipment\\DisplayEquipment.jsx":"22","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\subclasses\\SubClasses.jsx":"23","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\races\\Bonus.jsx":"24","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\startingEquipment\\StartingEquipments.jsx":"25","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\races\\Races.jsx":"26","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\races\\Trait.jsx":"27","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\races\\Proficiency.jsx":"28","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\races\\Language.jsx":"29","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\races\\IndividualRace.jsx":"30","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\builds\\Builds.jsx":"31","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\monsters\\ConditionImmunity.jsx":"32","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\monsters\\Monsters.jsx":"33","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\monsters\\IndividualMonster.jsx":"34","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\profile\\Profile.jsx":"35","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\characterCreation\\CharacterCreationForm.jsx":"36","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\builds\\DisplayCharacter.jsx":"37","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\redux\\reducers\\actionTypes.js":"38","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\DisplayProficiencies.jsx":"39","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\Skills.jsx":"40","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\IndividualClass.jsx":"41","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\ClassLevels.jsx":"42","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\ClassSpells.jsx":"43","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\spells\\SpellDisplay.js":"44","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\features\\Feature.jsx":"45","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\subclasses\\SubClass.jsx":"46","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\startingEquipment\\Options.jsx":"47","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\Classes.jsx":"48","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\features\\FeatureChoice.jsx":"49","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\startingEquipment\\StartingEquipment.jsx":"50","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\subclasses\\DisplaySubClass.jsx":"51","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\startingEquipment\\DisplayClass.jsx":"52","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\subclasses\\SubClassSpells.jsx":"53","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\features\\DisplayFeatures.jsx":"54","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\races\\DisplayRace.jsx":"55","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\monsters\\DisplayMonster.jsx":"56","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\profile\\displayUser\\UserProfile.jsx":"57","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\profile\\displayCharacters\\DisplayUserCharacters.jsx":"58","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\Skill.jsx":"59","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\Subclass.jsx":"60","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\Proficiencies.jsx":"61","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\Choices.jsx":"62","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\SavingThrows.jsx":"63","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\SpellCasting.jsx":"64","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\PChoices.jsx":"65","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\SpellCastingInfo.jsx":"66","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\DisplayClass.jsx":"67","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\SpellCastingDesc.jsx":"68"},{"size":614,"mtime":1611615455123,"results":"69","hashOfConfig":"70"},{"size":375,"mtime":1611615455125,"results":"71","hashOfConfig":"70"},{"size":277,"mtime":1611615455125,"results":"72","hashOfConfig":"70"},{"size":619,"mtime":1611939044499,"results":"73","hashOfConfig":"70"},{"size":359,"mtime":1611939044530,"results":"74","hashOfConfig":"70"},{"size":5678,"mtime":1612038935805,"results":"75","hashOfConfig":"70"},{"size":3511,"mtime":1611984293704,"results":"76","hashOfConfig":"70"},{"size":8802,"mtime":1612038935809,"results":"77","hashOfConfig":"70"},{"size":1835,"mtime":1611959928653,"results":"78","hashOfConfig":"70"},{"size":8451,"mtime":1611982299253,"results":"79","hashOfConfig":"70"},{"size":384,"mtime":1611960645020,"results":"80","hashOfConfig":"70"},{"size":756,"mtime":1611959935931,"results":"81","hashOfConfig":"70"},{"size":2392,"mtime":1611959161989,"results":"82","hashOfConfig":"70"},{"size":4224,"mtime":1611948299507,"results":"83","hashOfConfig":"70"},{"size":1966,"mtime":1611976531790,"results":"84","hashOfConfig":"70"},{"size":715,"mtime":1611969654609,"results":"85","hashOfConfig":"70"},{"size":1183,"mtime":1611959412278,"results":"86","hashOfConfig":"70"},{"size":3453,"mtime":1611987685857,"results":"87","hashOfConfig":"70"},{"size":3997,"mtime":1611987963017,"results":"88","hashOfConfig":"70"},{"size":1471,"mtime":1611985793009,"results":"89","hashOfConfig":"70"},{"size":3004,"mtime":1611987691226,"results":"90","hashOfConfig":"70"},{"size":5656,"mtime":1611985806987,"results":"91","hashOfConfig":"70"},{"size":1200,"mtime":1611959617981,"results":"92","hashOfConfig":"70"},{"size":2041,"mtime":1611939044499,"results":"93","hashOfConfig":"70"},{"size":1218,"mtime":1611959521296,"results":"94","hashOfConfig":"70"},{"size":1220,"mtime":1611959701469,"results":"95","hashOfConfig":"70"},{"size":2867,"mtime":1611959712333,"results":"96","hashOfConfig":"70"},{"size":2127,"mtime":1611959696817,"results":"97","hashOfConfig":"70"},{"size":2103,"mtime":1611959685685,"results":"98","hashOfConfig":"70"},{"size":9557,"mtime":1611959674260,"results":"99","hashOfConfig":"70"},{"size":1548,"mtime":1611959180121,"results":"100","hashOfConfig":"70"},{"size":2103,"mtime":1611966935780,"results":"101","hashOfConfig":"70"},{"size":1358,"mtime":1611976531788,"results":"102","hashOfConfig":"70"},{"size":7348,"mtime":1611976531787,"results":"103","hashOfConfig":"70"},{"size":1135,"mtime":1611959657572,"results":"104","hashOfConfig":"70"},{"size":18452,"mtime":1612035545383,"results":"105","hashOfConfig":"70"},{"size":9359,"mtime":1612039287723,"results":"106","hashOfConfig":"70"},{"size":647,"mtime":1611847982054,"results":"107","hashOfConfig":"70"},{"size":3215,"mtime":1611985672488,"results":"108","hashOfConfig":"70"},{"size":1535,"mtime":1611974668283,"results":"109","hashOfConfig":"70"},{"size":6272,"mtime":1611987707097,"results":"110","hashOfConfig":"70"},{"size":5491,"mtime":1611985640777,"results":"111","hashOfConfig":"70"},{"size":1353,"mtime":1611986099996,"results":"112","hashOfConfig":"70"},{"size":330,"mtime":1611976531790,"results":"113","hashOfConfig":"70"},{"size":324,"mtime":1611864514799,"results":"114","hashOfConfig":"70"},{"size":333,"mtime":1611864155618,"results":"115","hashOfConfig":"70"},{"size":399,"mtime":1611959874840,"results":"116","hashOfConfig":"70"},{"size":1183,"mtime":1611959234416,"results":"117","hashOfConfig":"70"},{"size":321,"mtime":1611701498311,"results":"118","hashOfConfig":"70"},{"size":385,"mtime":1611864826234,"results":"119","hashOfConfig":"70"},{"size":386,"mtime":1611959527944,"results":"120","hashOfConfig":"70"},{"size":398,"mtime":1611959495489,"results":"121","hashOfConfig":"70"},{"size":634,"mtime":1611941876637,"results":"122","hashOfConfig":"70"},{"size":384,"mtime":1611939720315,"results":"123","hashOfConfig":"70"},{"size":1515,"mtime":1611877100771,"results":"124","hashOfConfig":"70"},{"size":337,"mtime":1611960027298,"results":"125","hashOfConfig":"70"},{"size":513,"mtime":1611949237418,"results":"126","hashOfConfig":"70"},{"size":1526,"mtime":1611959669288,"results":"127","hashOfConfig":"70"},{"size":1622,"mtime":1611974837443,"results":"128","hashOfConfig":"70"},{"size":305,"mtime":1611959396115,"results":"129","hashOfConfig":"70"},{"size":584,"mtime":1611942389423,"results":"130","hashOfConfig":"70"},{"size":535,"mtime":1611939044499,"results":"131","hashOfConfig":"70"},{"size":310,"mtime":1611959335171,"results":"132","hashOfConfig":"70"},{"size":750,"mtime":1611985560417,"results":"133","hashOfConfig":"70"},{"size":355,"mtime":1611942284282,"results":"134","hashOfConfig":"70"},{"size":527,"mtime":1611939044499,"results":"135","hashOfConfig":"70"},{"size":383,"mtime":1611959264846,"results":"136","hashOfConfig":"70"},{"size":248,"mtime":1611683400897,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"uccce9",{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"140"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"140"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"140"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"140"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"140"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"140"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"140"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"140"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"140"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"140"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"140"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"140"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"140"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"140"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"140"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"140"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"140"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"140"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"140"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"140"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"140"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"140"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"140"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"140"},"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\index.js",[],["299","300"],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\reportWebVitals.js",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\redux\\store.js",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\App.js",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\helper\\scroll-to-top.js",["301"],"import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass ScrollToTop extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop)\r\n","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\Routes\\Routes.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\navbar\\Navbar.jsx",["302"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logoutUser } from '../../redux/reducers'\r\nimport '../../css/Navbar.css'\r\nclass Navbar extends React.Component {\r\n  render() {\r\n    let bool = false\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" style={{ textDecoration: 'none' }}>Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/classes\" style={{ textDecoration: 'none' }}>Classes</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/races\" style={{ textDecoration: 'none' }}>Races</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/spells\" style={{ textDecoration: 'none' }}>Spells</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/monsters\" style={{ textDecoration: 'none' }}>Monsters</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/builds\">Characters</Link>\r\n              </li>\r\n\r\n              {this.props.currentUser !== undefined ? (\r\n                this.props.currentUser.token !== undefined ? (\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/CharacterCreation\" style={{ textDecoration: 'none' }}>Create Character</Link>\r\n                  </li>\r\n                ) : (\r\n                  <span />\r\n                )\r\n              ) : (\r\n                <span />\r\n              )}\r\n\r\n              <div id=\"dropdown\" className=\"dropdown\">\r\n                <li className=\"dropbtn\">Profile</li>\r\n                <div className=\"dropdown-content\">\r\n                  {this.props.currentUser ? (\r\n                    <span>\r\n                      <Link to=\"/userprofile\" style={{ textDecoration: 'none' }}>User Profile</Link>\r\n                      <Link to=\"/\" onClick={(e) => this.props.logoutUser()} style={{ textDecoration: 'none' }}>\r\n                        Logout\r\n                      </Link>\r\n                    </span>\r\n                  ) : (\r\n                    <span>\r\n                      <Link to=\"/signup\" style={{ textDecoration: 'none' }}>Sign Up</Link>\r\n                      <Link to=\"/login\" style={{ textDecoration: 'none' }}>Login</Link>\r\n                    </span>\r\n                  )}\r\n\r\n                  {/* {this.props.currentUser !== undefined ? (\r\n                    this.props.currentUser.token !== undefined ? (\r\n                      <Link to=\"/\" onClick={(e) => this.props.logoutUser()}>\r\n                        Logout\r\n                      </Link>\r\n                    ) : (\r\n                      <span />\r\n                    )\r\n                  ) : (\r\n                    <span />\r\n                  )} */}\r\n                </div>\r\n              </div>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.currentLoggedInUserInfo,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutUser: () => dispatch(logoutUser()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)\r\n","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\redux\\reducers\\index.js",["303"],"import axios from 'axios'\r\nimport {\r\n  GOT_ALL_CHARACTERS,\r\n  GOT_ALL_USER_CHARACTERS,\r\n  GOT_SINGLE_CHARACTER,\r\n  GOT_ALL_CLASSES,\r\n  GOT_API_DATA,\r\n  GOT_ALL_RACES,\r\n  GOT_ALL_SKILLS,\r\n  GOT_ALL_USERS,\r\n  CREATED_CHARACTER,\r\n  CREATED_USER,\r\n  LOGGED_IN_USER,\r\n  LOGGED_OUT_USER,\r\n} from './actionTypes'\r\n\r\nconst initialState = {\r\n  characters: [],\r\n  userCharacters: [],\r\n  character: [],\r\n  users: [],\r\n  dndData: {},\r\n  allClasses: [],\r\n  allRaces: [],\r\n  allSkills: [],\r\n  user: {\r\n    username: '',\r\n    password: '',\r\n    email: '',\r\n  },\r\n  newCharacter: '',\r\n  newUser: '',\r\n  currentLoggedInUserInfo: '',\r\n}\r\n\r\n// GET -> Read all characters\r\nconst gotAllCharacters = (data) => {\r\n  return {\r\n    type: GOT_ALL_CHARACTERS,\r\n    data,\r\n  }\r\n}\r\n\r\nexport const getAllCharacters = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://dnd-capstone-backend.herokuapp.com/api/characters'\r\n      )\r\n      dispatch(gotAllCharacters(response.data))\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\n\r\n// GET -> Read all characters for users\r\nconst gotAllUserCharacters = (data) => {\r\n  return {\r\n    type: GOT_ALL_CHARACTERS,\r\n    data,\r\n  }\r\n}\r\n\r\nexport const getAllUserCharacters = (userId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://dnd-capstone-backend.herokuapp.com/api/characters/user/${userId}`\r\n      )\r\n      dispatch(gotAllUserCharacters(response.data))\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\n\r\n// GET -> Find single character\r\nconst gotSingleCharacter = (data) => {\r\n  return {\r\n    type: GOT_SINGLE_CHARACTER,\r\n    data,\r\n  }\r\n}\r\n\r\nexport const getSingleCharacter = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://dnd-capstone-backend.herokuapp.com/api/characters/${id}`\r\n      )\r\n      dispatch(gotSingleCharacter(response.data))\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\n\r\n// GET -> Read all users\r\nconst gotAllUsers = (data) => {\r\n  return {\r\n    type: GOT_ALL_USERS,\r\n    data,\r\n  }\r\n}\r\n\r\nexport const getAllUsers = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://dnd-capstone-backend.herokuapp.com/api/users'\r\n      )\r\n      dispatch(gotAllUsers(response.data))\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\n\r\n// POST -> Login a user if their credentials match\r\nconst loggedInUser = (data) => {\r\n  return {\r\n    type: LOGGED_IN_USER,\r\n    data,\r\n  }\r\n}\r\n\r\nexport const loginUser = (loginInfo) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.post(\r\n        'https://dnd-capstone-backend.herokuapp.com/user/login',\r\n        {\r\n          username: loginInfo.username,\r\n          password: loginInfo.password,\r\n          email: loginInfo.email,\r\n        }\r\n      )\r\n      dispatch(loggedInUser(response.data))\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\n// log out user\r\nconst loggedOutUser = () => {\r\n  return {\r\n    type: LOGGED_OUT_USER,\r\n  }\r\n}\r\nexport const logoutUser = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(loggedOutUser())\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\n// Dynamic API calls\r\nconst gotApiData = (data) => {\r\n  return {\r\n    type: GOT_API_DATA,\r\n    data,\r\n  }\r\n}\r\n\r\nexport const getApiData = (searchApi) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://dnd-capstone-backend.herokuapp.com/api/dndapi/${searchApi}`\r\n      )\r\n      dispatch(gotApiData(response.data.response))\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\n\r\n// Classes API Call\r\nconst gotAllClasses = (data) => {\r\n  return {\r\n    type: GOT_ALL_CLASSES,\r\n    data,\r\n  }\r\n}\r\n\r\nexport const getAllClasses = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://dnd-capstone-backend.herokuapp.com/api/dndapi/classes`\r\n      )\r\n      dispatch(gotAllClasses(response.data.response.results))\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\n\r\n// Races API Call\r\nconst gotAllRaces = (data) => {\r\n  return {\r\n    type: GOT_ALL_RACES,\r\n    data,\r\n  }\r\n}\r\n\r\nexport const getAllRaces = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://dnd-capstone-backend.herokuapp.com/api/dndapi/races'\r\n      )\r\n      dispatch(gotAllRaces(response.data.response.results))\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\n\r\n// Skills API Call\r\nconst gotAllSkills = (data) => {\r\n  return {\r\n    type: GOT_ALL_SKILLS,\r\n    data,\r\n  }\r\n}\r\n\r\nexport const getAllSkills = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://dnd-capstone-backend.herokuapp.com/api/dndapi/skills'\r\n      )\r\n      dispatch(gotAllSkills(response.data.response.results))\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\n\r\n// POST -> Create character\r\nconst createdCharacter = (data) => {\r\n  return {\r\n    type: CREATED_CHARACTER,\r\n    data,\r\n  }\r\n}\r\n\r\nexport const createCharacter = (characterInfo, userToken) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      // cannot pass array as data type while keeping sanity\r\n      const skill1 = characterInfo.skills[0]\r\n      const skill2 = characterInfo.skills[1]\r\n      const skill3 = characterInfo.skills[2]\r\n      const skill4 = characterInfo.skills[3]\r\n\r\n      const response = await axios.post(\r\n        'https://dnd-capstone-backend.herokuapp.com/api/characters',\r\n        {\r\n          name: characterInfo.characterName,\r\n          class: characterInfo.class,\r\n          race: characterInfo.race,\r\n          gender: characterInfo.gender,\r\n          armorClass: characterInfo.armorClass,\r\n          speed: characterInfo.speed,\r\n          skill1: skill1,\r\n          skill2: skill2,\r\n          skill3: skill3,\r\n          skill4: skill4,\r\n          str: characterInfo.str,\r\n          dex: characterInfo.dex,\r\n          con: characterInfo.con,\r\n          int: characterInfo.int,\r\n          wis: characterInfo.wis,\r\n          cha: characterInfo.cha,\r\n          personalityTraits: characterInfo.personalityTraits,\r\n          flaws: characterInfo.flaws,\r\n          ideals: characterInfo.ideals,\r\n          userId: characterInfo.userId,\r\n        },\r\n        { headers: { Authorization: `Bearer ${userToken}` } }\r\n      )\r\n      dispatch(createdCharacter(response.data))\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateCharacter = (characterInfo, userToken, characterId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      // cannot pass array as data type while keeping sanity\r\n      const skill1 = characterInfo.skills[0]\r\n      const skill2 = characterInfo.skills[1]\r\n      const skill3 = characterInfo.skills[2]\r\n      const skill4 = characterInfo.skills[3]\r\n\r\n      const response = await axios.put(\r\n        'https://dnd-capstone-backend.herokuapp.com/api/characters/${characterId}',\r\n        {\r\n          name: characterInfo.characterName,\r\n          class: characterInfo.class,\r\n          race: characterInfo.race,\r\n          gender: characterInfo.gender,\r\n          armorClass: characterInfo.armorClass,\r\n          speed: characterInfo.speed,\r\n          skill1: skill1,\r\n          skill2: skill2,\r\n          skill3: skill3,\r\n          skill4: skill4,\r\n          str: characterInfo.str,\r\n          dex: characterInfo.dex,\r\n          con: characterInfo.con,\r\n          int: characterInfo.int,\r\n          wis: characterInfo.wis,\r\n          cha: characterInfo.cha,\r\n          personalityTraits: characterInfo.personalityTraits,\r\n          flaws: characterInfo.flaws,\r\n          ideals: characterInfo.ideals,\r\n          userId: characterInfo.userId,\r\n        },\r\n        { headers: { Authorization: `Bearer ${userToken}` } }\r\n      )\r\n      dispatch(createdCharacter(response.data))\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\n\r\n// POST -> Create user\r\nconst createdUser = (data) => {\r\n  return {\r\n    type: CREATED_USER,\r\n    data,\r\n  }\r\n}\r\n//https://dnd-capstone-backend.herokuapp.com/user/sign-up\r\n// http://localhost:8080/user/sign-up\r\nexport const createUser = (userInfo) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.post(\r\n        'https://dnd-capstone-backend.herokuapp.com/user/sign-up',\r\n        {\r\n          username: userInfo.username,\r\n          email: userInfo.email,\r\n          password: userInfo.password,\r\n        }\r\n      )\r\n      dispatch(createdUser(response.data))\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GOT_ALL_CHARACTERS:\r\n      return {\r\n        ...state,\r\n        characters: action.data,\r\n      }\r\n    case GOT_ALL_USER_CHARACTERS:\r\n      return {\r\n        ...state,\r\n        userCharacters: action.data,\r\n      }\r\n    case GOT_SINGLE_CHARACTER:\r\n      return {\r\n        ...state,\r\n        character: action.data,\r\n      }\r\n    case GOT_API_DATA:\r\n      return {\r\n        ...state,\r\n        dndData: action.data,\r\n      }\r\n    case GOT_ALL_CLASSES:\r\n      return {\r\n        ...state,\r\n        allClasses: action.data,\r\n      }\r\n    case GOT_ALL_RACES:\r\n      return {\r\n        ...state,\r\n        allRaces: action.data,\r\n      }\r\n    case GOT_ALL_SKILLS:\r\n      return {\r\n        ...state,\r\n        allSkills: action.data,\r\n      }\r\n    case CREATED_CHARACTER:\r\n      return {\r\n        ...state,\r\n        newCharacter: action.data,\r\n      }\r\n    case CREATED_USER:\r\n      return {\r\n        ...state,\r\n        newUser: action.data,\r\n      }\r\n    case GOT_ALL_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.data,\r\n      }\r\n    case LOGGED_IN_USER:\r\n      return {\r\n        ...state,\r\n        currentLoggedInUserInfo: action.data,\r\n      }\r\n    case LOGGED_OUT_USER:\r\n      return {\r\n        ...state,\r\n        currentLoggedInUserInfo: '',\r\n        characters: [],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default rootReducer\r\n","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\Homepage.js",["304"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getAllClasses } from '../redux/reducers'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport '../css/homepage.css'\r\nclass Homepage extends Component {\r\n  async componentDidMount() {\r\n    await this.props.getAllClasses()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"homepage\">\r\n        {/* <div className=\"pls-work-img\">\r\n          <img\r\n            src=\"https://wallpapercave.com/wp/wp2227193.jpg\"\r\n            alt=\"main-img\"\r\n            width=\"100%\"\r\n            z-index=\"-1\"\r\n          />\r\n        </div> */}\r\n        <img\r\n          className=\"home-page-logo\"\r\n          src=\"https://dragonfirethegame.com/wp-content/uploads/2017/04/logo-dnd.png\"\r\n        ></img>\r\n\r\n        {this.props.currentUser ? (\r\n          <div>\r\n            <Link to=\"CharacterCreation\">\r\n              <button className=\"chara-create-btn\">Create A Character!</button>{' '}\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"maybe-fix-2\">\r\n            <Link to=\"/login\">\r\n              <button className=\"login-btn\">Login To Create Character</button>\r\n            </Link>\r\n            <Link to=\"/signup\">\r\n              <button className=\"signup-btn\">Sign Up To Create Account</button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapState = (state) => {\r\n  return {\r\n    classes: state.classes,\r\n    currentUser: state.currentLoggedInUserInfo,\r\n  }\r\n}\r\n\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    getAllClasses: () => dispatch(getAllClasses()),\r\n  }\r\n}\r\nexport default connect(mapState, mapDispatch)(Homepage)\r\n\r\n// we should get the values on the \"create your chara\" page b/c\r\n// if the user refreshes on that page, state will be reset and\r\n// the options will be blank\r\n","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\spells\\IndividualSpell.js",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\characterCreation\\CreateCharacter.js",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\AllCharacters.js",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\LoginPage.js",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\SignUpForm.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\spells\\Spells.jsx",["305"],"import { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { getApiData } from '../../redux/reducers'\r\n\r\nimport SpellDisplay from './SpellDisplay'\r\n\r\nimport '../../css/spells.css'\r\n\r\nclass Spells extends Component {\r\n  state = {\r\n    spell: [],\r\n  }\r\n\r\n  // async componentDidMount() {\r\n  //     try{\r\n  //         let spellName = await axios.get(\"https://www.dnd5eapi.co/api/spells\")\r\n  //         this.setState({\r\n  //             spell: spellName.data.results\r\n  //         })\r\n\r\n  //     }catch(error) {\r\n  //         console.error(error);\r\n  //     }\r\n  // }\r\n\r\n  componentDidMount = async () => {\r\n    this.fetchSpells('spells')\r\n  }\r\n  fetchSpells = async (searchApi) => {\r\n    await this.props.getApiData(searchApi)\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        spell: this.props.spell.results,\r\n      })\r\n    }, 200)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"spells-container\">\r\n        <div className=\"spells-title\">\r\n          <h1>Spells</h1>\r\n        </div>\r\n        {this.state.spell !== undefined ? (\r\n          <div className=\"spells-preview-container\">\r\n            {this.state.spell.map((spell, index) => (\r\n              <SpellDisplay key={index} name={spell.name} index={spell.index} />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <span />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // render(){\r\n  //     return(\r\n  //         <div>\r\n  //             <h1>Spell</h1>\r\n  //             {this.state.spell.map((spell,index) => (\r\n  //                 <SpellDisplay key={index} name={spell.name} />\r\n  //             ))}\r\n\r\n  //         </div>\r\n  //     )\r\n  // }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    spell: state.dndData,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getApiData: (searchApi) => dispatch(getApiData(searchApi)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Spells)\r\n","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\Classes.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\features\\Features.jsx",["306","307"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DisplayFeatures from \"./DisplayFeatures\"\r\nimport \"../../../css/feature.css\"\r\n\r\nclass Features extends Component {\r\n    constructor ( props ) {\r\n        super( props );\r\n\r\n        this.state = {\r\n            features: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount () {\r\n        const { data } = await axios.get( \"https://www.dnd5eapi.co/api/features\" );\r\n        this.setState( {\r\n            features: data.results\r\n        } )\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"features-container\">\r\n                <h1>Features</h1>\r\n                <div className=\"feature-card\">\r\n                    {\r\n                        this.state.features.map( ( item, ind ) => {\r\n                            return (\r\n                                <DisplayFeatures key={ ind } name={ item.name } index={ item.index } />\r\n                            )\r\n                        } )\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Features;","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\startingEquipment\\IndividualEquipment.jsx",["308","309","310"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getApiData } from \"../../../redux/reducers/index\"\r\nimport Options from \"./Options\"\r\nimport \"../../../css/individualequipment.css\"\r\n\r\nclass IndividualEquipment extends Component {\r\n    constructor ( props ) {\r\n        super( props );\r\n    }\r\n\r\n    async componentDidMount () {\r\n        try {\r\n            let url = `starting-equipment/${this.props.match.params.index}`;\r\n            await this.props.getApiData( url );\r\n        } catch ( error ) {\r\n            console.log( error );\r\n        }\r\n\r\n    }\r\n\r\n    render () {\r\n        if ( !this.props.equipment.class ) {\r\n            return <h1 id = \"loading\">Loading</h1>\r\n        }\r\n        return (\r\n            <div id = \"idiv-equip-contain\">\r\n                {/* <Link to={ `/class/${this.props.match.params.index}` } style={ { textDecoration: 'none' } }><h3 id = \"back\">Back to { this.props.equipment.class.name } Information</h3></Link> */}\r\n                <div id = \"individual-equipment-container\">\r\n                    <h1 id = \"equipmentclass\">Class : { this.props.equipment.class.name }</h1>\r\n                    <div className=\"starting-equip\">\r\n                        <h2>--Sarting Equipment--</h2>\r\n                        { this.props.equipment.starting_equipment !== undefined ?\r\n                            this.props.equipment.starting_equipment.map( ( item, index ) => {\r\n                                return (\r\n                                    <div>\r\n                                        <h3>Quantity: { item.quantity }</h3>\r\n                                        <Link to={ `/equipment/${item.equipment.index}` } style={ { textDecoration: 'none' } }><h3 id = \"start-equip-name\">{ item.equipment.name }</h3></Link>\r\n                                    </div>\r\n                                )\r\n                            } ) :\r\n                            <div>\r\n                                <h3>This Class Has No Starting Equipment</h3>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"equip-options\">\r\n                    <h2>Starting Equipment Options</h2>\r\n                    {\r\n                        this.props.equipment.starting_equipment_options.length > 0 ?\r\n                            <div>\r\n                                <h3>Choose 1 From: </h3>\r\n                                { this.props.equipment.starting_equipment_options.map( ( item, index ) => {\r\n                                        return(\r\n                                            <Options arr = {item.from}/>\r\n                                        )\r\n                                } ) }\r\n                            </div>:\r\n                            <div>\r\n                                <h3>This Class Has No Starting Equipment Options</h3>\r\n                                </div>\r\n                    }\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    \r\n    return {\r\n        equipment: state.dndData,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n   \r\n    return {\r\n        getApiData: ( url ) => dispatch( getApiData( url ) ),\r\n    }\r\n}\r\nexport default connect( mapStateToProps, mapDispatchToProps )( IndividualEquipment );","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\features\\IndividualFeature.jsx",["311","312","313"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getApiData } from \"../../../redux/reducers/index\"\r\nimport FeatureChoice from \"./FeatureChoice\";\r\nimport \"../../../css/individualfeature.css\"\r\n\r\nclass IndividualFeature extends Component {\r\n    constructor ( props ) {\r\n        super( props );\r\n    }\r\n\r\n    async componentDidMount () {\r\n        try {\r\n            let url = `features/${this.props.match.params.index}`;\r\n            await this.props.getApiData( url );\r\n        } catch ( error ) {\r\n            console.log( error );\r\n        }\r\n\r\n    }\r\n\r\n    render () {\r\n        \r\n        if ( !this.props.feature.class ) {\r\n            return <h1 id =  \"loading\">Loading</h1>\r\n        }\r\n        return (\r\n            <div id = \"indiv-feature-container\">\r\n                {/* <Link to={ `/class/${this.props.feature.class.name.toLowerCase()}` } style={ { textDecoration: 'none' } }><h3 id=\"back\">Back to { this.props.feature.class.name.toLowerCase() } Information</h3></Link> */}\r\n                <div id=\"individual-feature\">\r\n                    <h1 id=\"feature-name\">{ this.props.feature.name }</h1>\r\n                    <h2 id=\"feature-class\">Class: { this.props.feature.class.name }</h2>\r\n                    { this.props.feature.level !== undefined && <h2 id=\"feature-level\">Level: { this.props.feature.level }</h2> }\r\n                    <div id=\"prerequisite-container\">\r\n                        <h2>--Prerequisites--</h2>\r\n                        { this.props.feature.prerequisites !== undefined ?\r\n                            <div id=\"prerequisites\">\r\n                                {\r\n                                    this.props.feature.prerequisites.map( item => {\r\n                                        return (\r\n                                            <h3>{ item.type }</h3>\r\n                                        )\r\n                                    } )\r\n                                }\r\n                            </div>\r\n                            :\r\n                            <div id=\"prerequisites\">\r\n                                <h3>This Feature Has No Prerequisites</h3>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"feature-desc\">\r\n                        <h2>--Description--</h2>\r\n                        <div id=\"description\">\r\n                            { this.props.feature.desc !== undefined &&\r\n                                this.props.feature.desc.map( ( item, index ) => {\r\n                                    return (\r\n                                        <p key={ index }>{ item }</p>\r\n                                    )\r\n                                } )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"feature-choices\">\r\n                        <h2>--Choices--</h2>\r\n                        { this.props.feature.choice !== undefined ?\r\n                            <div id=\"feature-choice\">\r\n                                <h3>Choose { this.props.feature.choice.choose } from:</h3>\r\n                                <FeatureChoice from={ this.props.feature.choice.from } />\r\n                            </div>\r\n                            :\r\n                            <div id=\"feature-choice\" >\r\n                                <h3>This Feature Has No Choices</h3>\r\n                            </div>\r\n                        }\r\n                    </div >\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    \r\n    return {\r\n        feature: state.dndData,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    return {\r\n        getApiData: ( url ) => dispatch( getApiData( url ) ),\r\n    }\r\n}\r\nexport default connect( mapStateToProps, mapDispatchToProps )( IndividualFeature );","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\startingEquipment\\AllEquipment.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\subclasses\\IndividualSubClass.jsx",["314","315","316"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getApiData } from \"../../../redux/reducers/index\"\r\n\r\nimport SubClassSpells from \"./SubClassSpells\";\r\nimport \"../../../css/individualsubclass.css\"\r\n\r\nclass IndividualSubClass extends Component {\r\n    constructor ( props ) {\r\n        super( props );\r\n    }\r\n\r\n    async componentDidMount () {\r\n        try {\r\n\r\n            let url = `subclasses/${this.props.match.params.index}`;\r\n            await this.props.getApiData( url );\r\n        } catch ( error ) {\r\n            console.log( error );\r\n        }\r\n\r\n    }\r\n\r\n    render () {\r\n \r\n        if ( !this.props.class.class ) {\r\n            return <h1 id = \"loading\">Loading</h1>\r\n        }\r\n        return (\r\n            <div id = \"indiv-subclass-container\">\r\n                {/* <Link to={ `/class/${this.props.class.class.index}` } style={ { textDecoration: 'none' } }><h3 id = \"back\">Back to { this.props.class.class.name } Information</h3></Link> */}\r\n                <div id = \"indiviudal-subclass-container\">\r\n                <h1 id=\"subclasses-name\">{ this.props.class.name }</h1>\r\n                <h2 id=\"subclass-class-name\">Class: { this.props.class.class.name }</h2>\r\n                <h2 id=\"subclass-falvor\">Sub Class Flavor: { this.props.class.subclass_flavor }</h2>\r\n                <div className=\"subclass-desc\">\r\n                    <h2>--Sub Class Desciption--</h2>\r\n                    <div id = \"subclass-description\">\r\n                        { this.props.class.desc.map( ( item ) => {\r\n                            return (\r\n                                <p>{ item }</p>\r\n                            )\r\n                        } ) }\r\n                    </div>\r\n\r\n                </div>\r\n                <div className = \"subclass-spells\">\r\n                    <h2>--Spells--</h2>\r\n                    { this.props.class.spells ?\r\n                        <div id = \"subclass-spells\">\r\n                            { this.props.class.spells.map( ( item, index ) => {\r\n                                return (\r\n                                    <SubClassSpells key={ index } prerequisites={ item.prerequisites } spell={ item.spell } />\r\n                                )\r\n                            } ) }\r\n                        </div>\r\n                        :\r\n                        <div id = \"subclass-spells\">\r\n                            <h3>There are no spells for this subclass</h3>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    \r\n    return {\r\n        class: state.dndData,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    \r\n    return {\r\n        getApiData: ( url ) => dispatch( getApiData( url ) ),\r\n    }\r\n}\r\nexport default connect( mapStateToProps, mapDispatchToProps )( IndividualSubClass );","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\startingEquipment\\DisplayEquipment.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\subclasses\\SubClasses.jsx",["317","318"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DisplaySubClass from \"./DisplaySubClass\"\r\nimport \"../../../css/subclass.css\"\r\nclass SubClasses extends Component {\r\n    constructor ( props ) {\r\n        super( props );\r\n\r\n        this.state = {\r\n            classes: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount () {\r\n        const { data } = await axios.get( \"https://www.dnd5eapi.co/api/subclasses\" );\r\n        this.setState( {\r\n            classes: data.results\r\n        } )\r\n    }\r\n\r\n    render () {\r\n       \r\n        return (\r\n            <div className=\"subclass-container\">\r\n                <h1>SubClasses</h1>\r\n                <div className=\"subclass-cards\">\r\n                    {\r\n                        this.state.classes.map( ( item, ind ) => {\r\n                            return (\r\n                                <DisplaySubClass key={ ind } name={ item.name } index={ item.index } />\r\n                            )\r\n                        } )\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SubClasses;","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\races\\Bonus.jsx",["319"],"import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { getApiData } from '../../redux/reducers'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Bonus extends Component {\r\n  state = {\r\n    raceThatCalled: this.props.bonus, // holds the race that called this page before redux state is overwritten\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const bonus = 'ability-scores/' + this.props.match.params.bonus\r\n    this.props.getApiData(bonus)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"click-away-container\">\r\n          {/* If page refreshes, then race that called this is undefined b/c its overwritten, thus it shows nothing */}\r\n          {/* {this.state.raceThatCalled.index !== undefined ? (\r\n          <Link to={`/races/${this.state.raceThatCalled.index}`}>\r\n            Back to {this.state.raceThatCalled.name} information\r\n          </Link>\r\n        ) : (\r\n          <span />\r\n        )} */}\r\n\r\n          <div id=\"special-case-click-away-title\">\r\n            <h1>Bonus: {this.props.bonus.full_name}</h1>\r\n          </div>\r\n\r\n          <div className=\"click-away-info-container\">\r\n            <div className=\"click-away-info-title\">\r\n              <h3>Description</h3>\r\n            </div>\r\n            <div className=\"click-away-info\">\r\n              {this.props.bonus.desc !== undefined ? (\r\n                this.props.bonus.desc.map((element, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <p>{element}</p>\r\n                    </div>\r\n                  )\r\n                })\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    bonus: state.dndData,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getApiData: (searchApi) => dispatch(getApiData(searchApi)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Bonus)\r\n","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\startingEquipment\\StartingEquipments.jsx",["320","321"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DisplayClass from \"./DisplayClass\"\r\nimport \"../../../css/startingEquipment.css\"\r\nclass StartingEqupments extends Component {\r\n    constructor ( props ) {\r\n        super( props );\r\n\r\n        this.state = {\r\n            class: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount () {\r\n        const { data } = await axios.get( \"https://www.dnd5eapi.co/api/starting-equipment\" );\r\n        this.setState( {\r\n            class: data.results\r\n        } )\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"equipment-container\">\r\n                <h1>Starting Equipments</h1>\r\n                <div className=\"equipment-card\">\r\n                    {\r\n                        this.state.class.map( ( item, ind ) => {\r\n                            return (\r\n                                <DisplayClass key={ ind } name={ item.class } index={ item.index } />\r\n                            )\r\n                        } )\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StartingEqupments;","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\races\\Races.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\races\\Trait.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\races\\Proficiency.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\races\\Language.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\races\\IndividualRace.jsx",["322"],"import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { getApiData } from '../../redux/reducers'\r\n\r\nimport '../../css/single-race.css'\r\nimport { Link } from 'react-router-dom'\r\nimport dragonborn from './dnd race images/dragonborn.png'\r\nimport dwarf from './dnd race images/dwarf.png'\r\nimport elf from './dnd race images/elf.png'\r\nimport gnome from './dnd race images/gnome.png'\r\nimport halfElf from './dnd race images/half-elf.png'\r\nimport halfling from './dnd race images/halfling.png'\r\nimport halfOrc from './dnd race images/half-orc.png'\r\nimport human from './dnd race images/human.png'\r\nimport tiefling from './dnd race images/tiefling.png'\r\n\r\nclass IndividualRace extends Component {\r\n  componentDidMount = () => {\r\n    const race = 'races/' + this.props.match.params.race\r\n    this.props.getApiData(race)\r\n  }\r\n\r\n  render() {\r\n    const { race } = this.props.match.params\r\n    let bkgImage\r\n    race === 'dragonborn'\r\n      ? (bkgImage = dragonborn)\r\n      : race === 'dwarf'\r\n      ? (bkgImage = dwarf)\r\n      : race === 'elf'\r\n      ? (bkgImage = elf)\r\n      : race === 'gnome'\r\n      ? (bkgImage = gnome)\r\n      : race === 'half-elf'\r\n      ? (bkgImage = halfElf)\r\n      : race === 'halfling'\r\n      ? (bkgImage = halfling)\r\n      : race === 'half-orc'\r\n      ? (bkgImage = halfOrc)\r\n      : race === 'human'\r\n      ? (bkgImage = human)\r\n      : race === 'tiefling'\r\n      ? (bkgImage = tiefling)\r\n      : (bkgImage = '')\r\n    return (\r\n      <div className=\"signle-race-root-container\">\r\n        <div className=\"single-race-title\">\r\n          <h1>Race: {this.props.race.name}</h1>\r\n        </div>\r\n        <div className=\"single-race-container\">\r\n          <div className=\"single-race-image\">\r\n            <img src={bkgImage} alt=\"single-race-image\" />\r\n          </div>\r\n\r\n          {/* <div className=\"clear-float\"></div> */}\r\n\r\n          <div className=\"single-race-info\">\r\n            <div className=\"race-info-title\">\r\n              <h3>Age</h3>\r\n            </div>\r\n            <div className=\"race-info\">\r\n              {this.props.race !== undefined ? (\r\n                <div>\r\n                  <p>{this.props.race.age}</p>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Alignment</h3>\r\n            </div>\r\n            <div className=\"race-info\">\r\n              {this.props.race !== undefined ? (\r\n                <div>\r\n                  <p>{this.props.race.alignment}</p>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Language Description</h3>\r\n            </div>\r\n            <div className=\"race-info\">\r\n              {this.props.race !== undefined ? (\r\n                <div>\r\n                  <p>{this.props.race.language_desc}</p>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Languages</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race.ability_bonuses !== undefined ? (\r\n                this.props.race.languages.map((element, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Link to={`/languages/${element.index}`}>\r\n                        <p>{element.name}</p>\r\n                      </Link>\r\n                    </div>\r\n                  )\r\n                })\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Size</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race !== undefined ? (\r\n                <div>\r\n                  <p>{this.props.race.size}</p>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Size Description</h3>\r\n            </div>\r\n            <div className=\"race-info\">\r\n              {this.props.race !== undefined ? (\r\n                <div>\r\n                  <p>{this.props.race.size_description}</p>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Ability Bonuses</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race.ability_bonuses !== undefined ? (\r\n                this.props.race.ability_bonuses.map((element, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Link to={`/bonus/${element.ability_score.index}`}>\r\n                        <p>{element.ability_score.name}</p>\r\n                      </Link>\r\n                      <h4>Bonus</h4>\r\n                      <p>{element.bonus}</p>\r\n                    </div>\r\n                  )\r\n                })\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Speed</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race !== undefined ? (\r\n                <div>\r\n                  <p>{this.props.race.speed}</p>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Starting Proficiencies</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race.starting_proficiencies !== undefined ? (\r\n                this.props.race.starting_proficiencies.length !== 0 ? (\r\n                  this.props.race.starting_proficiencies.map(\r\n                    (element, index) => {\r\n                      return (\r\n                        <div key={index}>\r\n                          <p>{element.name}</p>\r\n                        </div>\r\n                      )\r\n                    }\r\n                  )\r\n                ) : (\r\n                  <div>\r\n                    <p>None</p>\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Starting Proficiency Options</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race.starting_proficiency_options !== undefined ? (\r\n                <div>\r\n                  Choose: {this.props.race.starting_proficiency_options.choose}\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <p>Choose: None</p>\r\n                </div>\r\n              )}\r\n\r\n              {this.props.race.starting_proficiency_options !== undefined ? (\r\n                this.props.race.starting_proficiency_options.from.length !==\r\n                0 ? (\r\n                  this.props.race.starting_proficiency_options.from.map(\r\n                    (element, index) => {\r\n                      return (\r\n                        <div key={index}>\r\n                          <Link to={`/races/proficiencies/${element.index}`}>\r\n                            <p>{element.name}</p>\r\n                          </Link>\r\n                        </div>\r\n                      )\r\n                    }\r\n                  )\r\n                ) : (\r\n                  <div>\r\n                    <p>None</p>\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Sub Races</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race.subraces !== undefined ? (\r\n                this.props.race.subraces.length !== 0 ? (\r\n                  this.props.race.subraces.map((element, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <p>{element.name}</p>\r\n                      </div>\r\n                    )\r\n                  })\r\n                ) : (\r\n                  <div>\r\n                    <p>None</p>\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"race-info-title\">\r\n              <h3>Traits</h3>\r\n            </div>\r\n            <div className=\"race-info-bits\">\r\n              {this.props.race.traits !== undefined ? (\r\n                this.props.race.traits.map((element, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Link to={`/traits/${element.index}`}>\r\n                        <p>{element.name}</p>\r\n                      </Link>\r\n                    </div>\r\n                  )\r\n                })\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    race: state.dndData,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getApiData: (searchApi) => dispatch(getApiData(searchApi)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IndividualRace)\r\n","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\builds\\Builds.jsx",["323"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAllCharacters } from \"../../redux/reducers\";\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport \"../../css/builds.css\"\r\n\r\nclass Builds extends Component {\r\n    constructor ( props ) {\r\n        super( props )\r\n\r\n    }\r\n\r\n    async componentDidMount () {\r\n       \r\n        try {\r\n            await this.props.getAllCharacters();\r\n\r\n        } catch ( error ) {\r\n            console.log( error )\r\n        }\r\n    }\r\n    render () {\r\n        \r\n        return (\r\n            <div id=\"builds-container\">\r\n                <div id=\"builds-container-h1\"><h1>Characters</h1></div>\r\n                <div id=\"build-character-name\">\r\n                    { this.props.characters !== undefined ?\r\n                        this.props.characters.map( ( item, index ) => {\r\n                            return (\r\n                                <Link to={ `/character/${item.id}` } style={{ textDecoration: 'none' }}><h3 id = \"public-characters\" key={ index }>{ item.name }</h3></Link>\r\n                            )\r\n                        } ) : <h1>Loading</h1>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        characters: state.characters.characters,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllCharacters: () => dispatch( getAllCharacters() ),\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( Builds );","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\monsters\\ConditionImmunity.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\monsters\\Monsters.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\monsters\\IndividualMonster.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\profile\\Profile.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\characterCreation\\CharacterCreationForm.jsx",["324"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  getAllClasses,\r\n  getAllRaces,\r\n  getAllSkills,\r\n  createCharacter,\r\n} from '../../redux/reducers'\r\nimport '../../css/charactercreation.css'\r\nclass CharacterCreationForm extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      characterInfo: {\r\n        characterName: '',\r\n        class: '',\r\n        race: '',\r\n        gender: '',\r\n        proficiencyBonus: '2',\r\n        armorClass: 10,\r\n        initiative: 0,\r\n        speed: 0,\r\n        skills: [],\r\n        str: Math.floor(Math.random() * 20),\r\n        dex: Math.floor(Math.random() * 20),\r\n        con: Math.floor(Math.random() * 20),\r\n        int: Math.floor(Math.random() * 20),\r\n        wis: Math.floor(Math.random() * 20),\r\n        cha: Math.floor(Math.random() * 20),\r\n        personalityTraits: '',\r\n        flaws: '',\r\n        ideals: '',\r\n        userId: '',\r\n      },\r\n      public: true,\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await this.props.getAllClasses()\r\n    await this.props.getAllRaces()\r\n    await this.props.getAllSkills()\r\n  }\r\n\r\n  handleClassSelectChange = (e) => {\r\n    this.setState({\r\n      characterInfo: {\r\n        ...this.state.characterInfo,\r\n        class: e.target.value,\r\n      },\r\n    })\r\n  }\r\n\r\n  handleRaceSelectChange = (e) => {\r\n    const { value } = e.target\r\n\r\n    if (\r\n      value === 'dragonborn' ||\r\n      value === 'elf' ||\r\n      value === 'half-elf' ||\r\n      value === 'half-orc' ||\r\n      value === 'human' ||\r\n      value === 'tiefling'\r\n    ) {\r\n      this.setState({\r\n        characterInfo: {\r\n          ...this.state.characterInfo,\r\n          race: e.target.value,\r\n          speed: 30,\r\n        },\r\n      })\r\n    } else {\r\n      this.setState({\r\n        characterInfo: {\r\n          ...this.state.characterInfo,\r\n          race: e.target.value,\r\n          speed: 25,\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  handleGenderSelectChange = (e) => {\r\n    this.setState({\r\n      characterInfo: {\r\n        ...this.state.characterInfo,\r\n        gender: e.target.value,\r\n      },\r\n    })\r\n  }\r\n\r\n  handleSkillsSelectChange = (e) => {\r\n    if (this.state.characterInfo.skills.length === 4) {\r\n      alert('You may only have 4 skills per character!')\r\n      return\r\n    }\r\n    for (const skill of this.state.characterInfo.skills) {\r\n      if (skill === e.target.value) {\r\n        alert('No duplicate skills allowed!')\r\n        return\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      characterInfo: {\r\n        ...this.state.characterInfo,\r\n        skills: [...this.state.characterInfo.skills, e.target.value], // append skill to array\r\n      },\r\n    })\r\n  }\r\n\r\n  handleAbilityScoreChange = (e) => {\r\n    let modifier = Math.floor((parseInt(e.target.value) - 10) / 2)\r\n    document.getElementById(`${e.target.name}` + '-modifier').innerHTML =\r\n      '+' + modifier\r\n\r\n    if (e.target.name === 'dex') {\r\n      this.setState({\r\n        characterInfo: {\r\n          ...this.state.characterInfo,\r\n          [e.target.name]: e.target.value,\r\n          armorClass: 10 + modifier,\r\n        },\r\n      })\r\n    } else {\r\n      this.setState({\r\n        characterInfo: {\r\n          ...this.state.characterInfo,\r\n          [e.target.name]: e.target.value,\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  handleMainStatChange = (e) => {\r\n    this.setState({\r\n      characterInfo: {\r\n        ...this.state.characterInfo,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    })\r\n  }\r\n\r\n  handleDisplayStatusChange = (e) => {\r\n    this.setState({\r\n      public: e.target.value,\r\n    })\r\n  }\r\n\r\n  handleTextareaChange = (e) => {\r\n    this.setState({\r\n      characterInfo: {\r\n        ...this.state.characterInfo,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    })\r\n  }\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault()\r\n    /*  const { str, dex, con, wis, int, cha } = this.state\r\n     if ( ( str || dex || con || wis || int || cha ) > 30 || ( str || dex || con || wis || int || cha ) < 0 ) {\r\n       alert( \"Characters Attritbutes Are Maxed at 30\" )\r\n     }\r\n     else { */\r\n    if (this.state.public === 'false') {\r\n      this.setState({\r\n        characterInfo: {\r\n          ...this.state.characterInfo,\r\n          userId: this.props.currentUser.userId,\r\n        },\r\n      })\r\n    } else {\r\n      delete this.state.characterInfo.userId\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.props.createCharacter(\r\n        this.state.characterInfo,\r\n        this.props.currentUser.token\r\n      )\r\n    }, 1200)\r\n    setTimeout(() => {\r\n      if (this.props.newCharacter !== undefined) {\r\n        if (this.state.public === 'true') {\r\n          this.props.history.push('/builds')\r\n        } else {\r\n          this.props.history.push('/userprofile')\r\n        }\r\n      }\r\n    }, 2000)\r\n    /* } */\r\n  }\r\n\r\n  render() {\r\n    console.log('chara info test:', this.state.characterInfo)\r\n    return (\r\n      <div className=\"creation-form\">\r\n        <header>DUNGEONS {'&'} DRAGONS CHARACTER CREATION FORM</header>\r\n\r\n        <div id=\"character-creation-form\">\r\n          {/* Main Character Creation Form */}\r\n          <form onSubmit={(e) => this.handleFormSubmit(e)}>\r\n            {/* Character Name */}\r\n            <div id=\"character-creation-name\">\r\n              <label>\r\n                Character Name:<br></br>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"characterName\"\r\n                  placeholder=\"Raffaela Ciccone\"\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      characterInfo: {\r\n                        ...this.state.characterInfo,\r\n                        characterName: e.target.value,\r\n                      },\r\n                    })\r\n                  }\r\n                  required\r\n                ></input>\r\n              </label>\r\n            </div>\r\n            <br></br>\r\n            {/* End Character Name */}\r\n\r\n            {/* Class Select */}\r\n            <div id=\"class-select\">\r\n              <label>\r\n                Select Your Classes<br></br>\r\n                <select\r\n                  name=\"classSelect\"\r\n                  onChange={(e) => this.handleClassSelectChange(e)}\r\n                  required\r\n                >\r\n                  <option value=\"\">--Choose Your Class--</option>\r\n                  {this.props.allClasses !== undefined ? (\r\n                    this.props.allClasses.map((element, index) => {\r\n                      return (\r\n                        <option key={index} value={element.index}>\r\n                          {element.name}\r\n                        </option>\r\n                      )\r\n                    })\r\n                  ) : (\r\n                    <span />\r\n                  )}\r\n                </select>\r\n              </label>\r\n            </div>\r\n            {/* End Class Select */}\r\n\r\n            <br></br>\r\n            {/* Race Select */}\r\n            <div id=\"race-select\">\r\n              <label>\r\n                Select Your Race\r\n                <br></br>\r\n                <select\r\n                  name=\"raceSelect\"\r\n                  onChange={(e) => this.handleRaceSelectChange(e)}\r\n                  required\r\n                >\r\n                  <option value=\"\">--Choose Your Race--</option>\r\n                  {this.props.allRaces !== undefined ? (\r\n                    this.props.allRaces.map((element, index) => {\r\n                      return (\r\n                        <option key={index} value={element.index}>\r\n                          {element.name}\r\n                        </option>\r\n                      )\r\n                    })\r\n                  ) : (\r\n                    <span />\r\n                  )}\r\n                </select>\r\n              </label>\r\n            </div>\r\n            {/* End Race Select */}\r\n\r\n            <br></br>\r\n            {/* Gender Select */}\r\n            <div id=\"gender-choices\">\r\n              <div className=\"gender-male\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"male\"\r\n                  name=\"gender\"\r\n                  value=\"male\"\r\n                  onChange={(e) => this.handleGenderSelectChange(e)}\r\n                ></input>\r\n                <label htmlFor=\"male\">Male</label>\r\n              </div>\r\n              <div className=\"gender-female\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"female\"\r\n                  name=\"gender\"\r\n                  value=\"female\"\r\n                  onChange={(e) => this.handleGenderSelectChange(e)}\r\n                ></input>\r\n                <label htmlFor=\"female\">Female</label>\r\n              </div>\r\n              <div className=\"gender-other\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"other\"\r\n                  name=\"gender\"\r\n                  value=\"other\"\r\n                  onChange={(e) => this.handleGenderSelectChange(e)}\r\n                ></input>\r\n                <label htmlFor=\"other\">Other</label>\r\n              </div>\r\n            </div>\r\n\r\n            {/* End Gender Select  */}\r\n\r\n            {/* Main Stats */}\r\n            <div id=\"character-prof-bonus\">\r\n              <label>\r\n                Proficiency Bonus (+2 For Lvl.1) :\r\n                <span\r\n                  id=\"proficiencyBonus-display\"\r\n                  // type=\"number\"\r\n                  name=\"proficiencyBonus\"\r\n                  // placeholder={Math.floor(Math.random() * 6)}\r\n                  // defaultValue={Math.floor(Math.random() * 6)}\r\n                  value=\"2\"\r\n                  onChange={(e) =>\r\n                    alert('A lvl.1 character has +2 proficieny bonus!')\r\n                  }\r\n                  required\r\n                >\r\n                  {' '}\r\n                  {this.state.characterInfo.proficiencyBonus}\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <div id=\"other-main-stats\">\r\n              <label>\r\n                Armor Class :\r\n                <span\r\n                  id=\"armorClass-display\"\r\n                  type=\"number\"\r\n                  name=\"armorClass\"\r\n                  required\r\n                >\r\n                  {' '}\r\n                  {this.state.characterInfo.armorClass}\r\n                </span>\r\n              </label>\r\n\r\n              {/* <br></br>\r\n          <label>\r\n            Initiative\r\n            <br></br>\r\n            <input\r\n              type=\"number\"\r\n              name=\"Initiative\"\r\n              placeholder={ Math.floor( Math.random() * 15 ) }\r\n              // defaultValue={Math.floor(Math.random() * 15)}\r\n              onChange={ ( e ) => this.handleMainStatChange( e ) }\r\n              required\r\n            ></input>\r\n          </label> */}\r\n\r\n              <br></br>\r\n              <label>\r\n                Speed :\r\n                <span\r\n                  id=\"speed-display\"\r\n                  type=\"number\"\r\n                  name=\"speed\"\r\n                  value={this.state.characterInfo.speed}\r\n                  required\r\n                >\r\n                  {' '}\r\n                  {this.state.characterInfo.speed}\r\n                </span>\r\n              </label>\r\n              <br></br>\r\n            </div>\r\n            {/* End Main Stats */}\r\n\r\n            {/* Skill Select */}\r\n            <div id=\"select-character-skill\">\r\n              <label>\r\n                Select Your Skills (Choose up to 4)\r\n                <br></br>\r\n                <select\r\n                  name=\"skillsSelect\"\r\n                  onChange={(e) => this.handleSkillsSelectChange(e)}\r\n                  required\r\n                >\r\n                  <option value=\"\">--Choose Your Skills--</option>\r\n                  {this.props.allSkills !== undefined ? (\r\n                    this.props.allSkills.map((element, index) => {\r\n                      return (\r\n                        <option key={index} value={element.index}>\r\n                          {element.name}\r\n                        </option>\r\n                      )\r\n                    })\r\n                  ) : (\r\n                    <span />\r\n                  )}\r\n                </select>\r\n              </label>\r\n            </div>\r\n            {/* End Skill Select */}\r\n\r\n            <br></br>\r\n            {/* Ability Scores */}\r\n            <div id=\"character-attributes\">\r\n              <div id=\"str\">\r\n                <label>\r\n                  Strength\r\n                  <br></br>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"str\"\r\n                    defaultValue={this.state.characterInfo.str}\r\n                    onChange={(e) => this.handleAbilityScoreChange(e)}\r\n                    min=\"0\"\r\n                    max=\"30\"\r\n                    required\r\n                  ></input>\r\n                  <span id=\"str-modifier\"></span>\r\n                </label>\r\n              </div>\r\n              <div id=\"dex\">\r\n                <label>\r\n                  Dexterity\r\n                  <br></br>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"dex\"\r\n                    defaultValue={this.state.characterInfo.dex}\r\n                    onChange={(e) => this.handleAbilityScoreChange(e)}\r\n                    min=\"0\"\r\n                    max=\"30\"\r\n                    required\r\n                  ></input>\r\n                  <span id=\"dex-modifier\"></span>\r\n                </label>\r\n              </div>\r\n              <div id=\"con\">\r\n                <label>\r\n                  Constitution\r\n                  <br></br>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"con\"\r\n                    defaultValue={this.state.characterInfo.con}\r\n                    onChange={(e) => this.handleAbilityScoreChange(e)}\r\n                    min=\"0\"\r\n                    max=\"30\"\r\n                    required\r\n                  ></input>\r\n                  <span id=\"con-modifier\"></span>\r\n                </label>\r\n              </div>\r\n              <div id=\"int\">\r\n                <label>\r\n                  Intelligence\r\n                  <br></br>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"int\"\r\n                    defaultValue={this.state.characterInfo.int}\r\n                    onChange={(e) => this.handleAbilityScoreChange(e)}\r\n                    min=\"0\"\r\n                    max=\"30\"\r\n                    required\r\n                  ></input>\r\n                  <span id=\"int-modifier\"></span>\r\n                </label>\r\n              </div>\r\n              <div id=\"wis\">\r\n                <label>\r\n                  Wisdom\r\n                  <br></br>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"wis\"\r\n                    defaultValue={this.state.characterInfo.wis}\r\n                    onChange={(e) => this.handleAbilityScoreChange(e)}\r\n                    min=\"0\"\r\n                    max=\"30\"\r\n                    required\r\n                  ></input>\r\n                  <span id=\"wis-modifier\"></span>\r\n                </label>\r\n              </div>\r\n              <div id=\"cha\">\r\n                <label>\r\n                  Charisma\r\n                  <br></br>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"cha\"\r\n                    defaultValue={this.state.characterInfo.cha}\r\n                    onChange={(e) => this.handleAbilityScoreChange(e)}\r\n                    min=\"0\"\r\n                    max=\"30\"\r\n                    required\r\n                  ></input>\r\n                  <span id=\"cha-modifier\"></span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div id=\"personality-traits\">\r\n              <h3>Personality Traits</h3>\r\n              <textarea\r\n                name=\"personalityTraits\"\r\n                cols=\"40\"\r\n                rows=\"6\"\r\n                onChange={(e) => this.handleTextareaChange(e)}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div id=\"flaws\">\r\n              <h3>Flaws</h3>\r\n              <textarea\r\n                name=\"flaws\"\r\n                cols=\"40\"\r\n                rows=\"6\"\r\n                onChange={(e) => this.handleTextareaChange(e)}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div id=\"ideals\">\r\n              <h3>Ideals</h3>\r\n              <textarea\r\n                name=\"ideals\"\r\n                cols=\"40\"\r\n                rows=\"6\"\r\n                onChange={(e) => this.handleTextareaChange(e)}\r\n              ></textarea>\r\n            </div>\r\n\r\n            {/* Display Status: public or private */}\r\n            <div id=\"public-private\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"public\" // this is a state, not value\r\n                value=\"true\"\r\n                onChange={(e) => this.handleDisplayStatusChange(e)}\r\n              />\r\n              <label>Public</label>\r\n\r\n              <input\r\n                type=\"radio\"\r\n                name=\"public\" // this is a state, not value\r\n                value=\"false\"\r\n                onChange={(e) => this.handleDisplayStatusChange(e)}\r\n              />\r\n              <label>Private</label>\r\n            </div>\r\n            {/* END Display Status: public or private */}\r\n\r\n            <input\r\n              id=\"create-btn\"\r\n              type=\"submit\"\r\n              value=\"Create Your Character\"\r\n            ></input>\r\n            {/* <input type=\"reset\" value=\"Reset\"></input> Does not work with modifiers */}\r\n            <Link to=\"/\">\r\n              <input id=\"cancel-btn\" type=\"button\" value=\"Cancel\"></input>\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    allClasses: state.allClasses,\r\n    allRaces: state.allRaces,\r\n    allSkills: state.allSkills,\r\n    newCharacter: state.newCharacter,\r\n    currentUser: state.currentLoggedInUserInfo,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllClasses: () => dispatch(getAllClasses()),\r\n    getAllRaces: () => dispatch(getAllRaces()),\r\n    getAllSkills: () => dispatch(getAllSkills()),\r\n    createCharacter: (characterInfo, userToken) =>\r\n      dispatch(createCharacter(characterInfo, userToken)),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CharacterCreationForm)\r\n","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\builds\\DisplayCharacter.jsx",["325","326","327","328","329","330","331","332","333","334","335"],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\redux\\reducers\\actionTypes.js",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\DisplayProficiencies.jsx",["336","337"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { getApiData } from '../../../../../redux/reducers'\r\nimport '../../../../../css/displayproficiencies.css'\r\nclass DisplayProficiencies extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  async componentDidMount() {\r\n    \r\n    let url = `/proficiencies/${this.props.match.params.index}`\r\n    await this.props.getApiData(url)\r\n    //const {data} = await axios.get(`https://www.dnd5eapi.co/api/equipment/${this.props.prof.references.index}`)\r\n  }\r\n  render() {\r\n    \r\n    /* if (!this.props.prof.name) {\r\n      return <h1 id=\"disp-h1\">Loading</h1>\r\n    } */\r\n    return (\r\n      <div id = \"prof-container-container\">\r\n        <div id=\"prof-container\">\r\n        <h1 id=\"disp-h1\">{this.props.prof.name}</h1>\r\n        <div className=\"prof-classes\">\r\n          <h2 className=\"prof-classes\">--Classes--</h2>\r\n          <div>\r\n            {this.props.prof.classes ? (\r\n              <div id=\"pof-classes\">\r\n                {this.props.prof.classes.map((item, index) => {\r\n                  return (\r\n                    <Link\r\n                      to={`/class/${item.index}`}\r\n                      style={{ textDecoration: 'none' }}\r\n                    >\r\n                      <p id = \"prof-class-name\">{item.name}</p>\r\n                    </Link>\r\n                  )\r\n                })}\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <h3 className=\"prof-classes\">\r\n                  This Skill Is Not Tied To Any Class\r\n                </h3>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"prof-races\">\r\n          <h2 className=\"prof-races\">--Races--</h2>\r\n          {this.props.prof.races !== undefined ? (\r\n            <div id=\"pof-races\">\r\n              {this.props.prof.races.map((item, index) => {\r\n                return (\r\n                  <Link\r\n                    to={`/race/${item.index}`}\r\n                    style={{ textDecoration: 'none' }}\r\n                  >\r\n                    <p id = \"prof-race-name\">{item.name}</p>\r\n                  </Link>\r\n                )\r\n              })}\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h3 className=\"fix-h1-h2-h3-h4\">\r\n                This Skill Is Not Tied To Any Race\r\n              </h3>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* {this.props.prof.references !== undefined && (\r\n          <div id=\"references\">\r\n            <h2 className=\"fix-h1-h2-h3-h4\">--References--</h2>\r\n            {this.props.prof.references.map((item, index) => {\r\n              return (\r\n                  <p id = \"prof-reference-p\" key={index}>{item.name}</p>\r\n              )\r\n            })}\r\n          </div>\r\n        )} */}\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    prof: state.dndData,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  \r\n  return {\r\n    getApiData: (url) => dispatch(getApiData(url)),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DisplayProficiencies)\r\n","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\Skills.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\IndividualClass.jsx",["338","339"],"import axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { getApiData } from '../../../../../redux/reducers/index'\r\nimport Choices from './Choices'\r\nimport Proficiencies from './Proficiencies'\r\nimport SavingThrows from './SavingThrows'\r\nimport SpellCasting from './SpellCasting'\r\nimport Subclass from './Subclass'\r\n\r\nimport '../../../../../css/individualclass.css'\r\nclass IndividualClass extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    /* this.state = {\r\n            name: '',\r\n            hit_die: '',\r\n            p_choices: [],\r\n            proficiencies: [],\r\n            saving_throws: [],\r\n            starting_equipment: '',\r\n            class_levels: '',\r\n            subclasses: [],\r\n            spellCasting: {}\r\n        } */\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      let url = `classes/${this.props.match.params.index}`\r\n      await this.props.getApiData(url)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    /* if (!this.props.class.subclasses) {\r\n      return <h1>Loading</h1>\r\n    } */\r\n    return (\r\n      <div id=\"class-info\">\r\n       {/*  <Link to={`/classes`} style={{ textDecoration: 'none' }}>\r\n          <h3 id=\"back\">Back to Classes Information</h3>\r\n        </Link> */}\r\n        <div id = \"individual-class-basic-info\">\r\n        <h1 className=\"fix-h1-h2-h3-h4\" id=\"class-name\">\r\n          {this.props.class.name}\r\n        </h1>\r\n        <h2 className=\"fix-h1-h2-h3-h4\" id=\"hit-die\">\r\n          Hit Die: {this.props.class.hit_die}\r\n        </h2>\r\n        <div id=\"class-etc\">\r\n          {' '}\r\n          <Link\r\n            to={`/starting-equipment/${this.props.match.params.index}`}\r\n            style={{ textDecoration: 'none' }}\r\n          >\r\n            <h2 className=\"fix-h1-h2-h3-h4\">\r\n              {'--> '}Starting Equipment{' <--'}\r\n            </h2>\r\n          </Link>\r\n          <Link\r\n            to={`/class/${this.props.match.params.index}/levels`}\r\n            style={{ textDecoration: 'none' }}\r\n          >\r\n            <h2 className=\"fix-h1-h2-h3-h4\">\r\n              {'--> '}Class Levels{' <--'}\r\n            </h2>\r\n          </Link>\r\n          {this.props.class.spells && (\r\n            <Link\r\n              to={`/classSpells/${this.props.match.params.index}/spells`}\r\n              style={{ textDecoration: 'none' }}\r\n            >\r\n              <h2 className=\"fix-h1-h2-h3-h4\">\r\n                {'--> '}{this.props.class.name}\r\n                 Class Spells{' <--'}\r\n              </h2>\r\n            </Link>\r\n          )}\r\n        </div>\r\n        </div>\r\n        <div className=\"p_choices\">\r\n          <h2 className=\"fix-h1-h2-h3-h4\">--Proficiency Choices--</h2>\r\n          <div className=\"all-p-choices\">\r\n            {this.props.class.proficiency_choices !== undefined &&\r\n              this.props.class.proficiency_choices.map((item, index) => {\r\n                return (\r\n                  <Choices key={index} choose={item.choose} from={item.from} />\r\n                )\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div className=\"proficiencies\">\r\n          <h2 className=\"fix-h1-h2-h3-h4\" id=\"proficiency\">\r\n            --Proficiencies--\r\n          </h2>\r\n          {this.props.class.proficiencies !== undefined &&\r\n            this.props.class.proficiencies.map((item, index) => {\r\n              return (\r\n                <Proficiencies\r\n                  key={index}\r\n                  name={item.name}\r\n                  classIndex={item.index}\r\n                />\r\n              )\r\n            })}\r\n        </div>\r\n        <div className=\"saving-throws\">\r\n          <h2 className=\"fix-h1-h2-h3-h4\">--Saving Throws-- </h2>\r\n          <div id=\"saving-throws-container\">\r\n            {this.props.class.saving_throws !== undefined &&\r\n              this.props.class.saving_throws.map((item, index) => {\r\n                return (\r\n                  <SavingThrows\r\n                    key={index}\r\n                    name={item.name}\r\n                    classIndex={item.index}\r\n                  />\r\n                )\r\n              })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"subclasses\">\r\n          <h2 className=\"fix-h1-h2-h3-h4\">--Sub-Classes--</h2>\r\n          {this.props.class.subclasses !== undefined &&\r\n            this.props.class.subclasses.map((item, index) => {\r\n              return (\r\n                <Subclass\r\n                  key={index}\r\n                  name={item.name}\r\n                  classIndex={item.index}\r\n                />\r\n              )\r\n            })}\r\n        </div>\r\n        {this.props.class.spellcasting !== undefined &&\r\n          (this.props.class.spellcasting ? (\r\n            <div className=\"spellcasting\">\r\n              <h2 className=\"fix-h1-h2-h3-h4\">--Spell Casting ability--</h2>\r\n              <SpellCasting\r\n                info={this.props.class.spellcasting.info}\r\n                level={this.props.class.spellcasting.level}\r\n                spellcasting_ability={\r\n                  this.props.class.spellcasting.spellcasting_ability\r\n                }\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div className=\"no-spell-casting\">\r\n              {' '}\r\n              <h2 className=\"fix-h1-h2-h3-h4\">\r\n                No Spell Casting for this class\r\n              </h2>\r\n            </div>\r\n          ))}\r\n        {/* <Link to={ `/starting-equipment/${this.props.match.params.index}` } style={ { textDecoration: 'none' } }><h2>Starting Equipment</h2></Link>\r\n                <Link to={ `/class/${this.props.match.params.index}/levels` } style={ { textDecoration: 'none' } }><h2>Class Levels</h2></Link>\r\n                {this.props.class.spells && <Link to={ `/classSpells/${this.props.match.params.index}/spells` } style={ { textDecoration: 'none' } }><h2>{ this.props.class.name } Class Spells</h2></Link> } */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    class: state.dndData,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return {\r\n    getApiData: (url) => dispatch(getApiData(url)),\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IndividualClass)\r\n","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\ClassLevels.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\ClassSpells.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\spells\\SpellDisplay.js",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\features\\Feature.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\subclasses\\SubClass.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\startingEquipment\\Options.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\Classes.jsx",["340","341"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DisplayClass from \"./displayClass/DisplayClass\"\r\nimport \"../../../css/class.css\"\r\nclass Classes extends Component {\r\n    constructor ( props ) {\r\n        super( props );\r\n\r\n        this.state = {\r\n            classes: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount () {\r\n        const { data } = await axios.get( \"https://www.dnd5eapi.co/api/classes\" );\r\n        this.setState( {\r\n            classes: data.results\r\n        } )\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n            <div className=\"class-container\">\r\n                <h1 id = \"classes\">Classes</h1>\r\n                <div className=\"class-cards\">\r\n                    {\r\n                    this.state.classes.map( ( item, ind ) => {\r\n                        return (\r\n                            <DisplayClass key = {ind} name={ item.name } index={ item.index } />\r\n                        )\r\n                    } )\r\n                }\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Classes;","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\features\\FeatureChoice.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\startingEquipment\\StartingEquipment.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\subclasses\\DisplaySubClass.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\startingEquipment\\DisplayClass.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\subclasses\\SubClassSpells.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\features\\DisplayFeatures.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\races\\DisplayRace.jsx",["342"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../css/races.css'\r\nimport dragonborn from './dnd race images/dragonborn.png'\r\nimport dwarf from './dnd race images/dwarf.png'\r\nimport elf from './dnd race images/elf.png'\r\nimport gnome from './dnd race images/gnome.png'\r\nimport halfElf from './dnd race images/half-elf.png'\r\nimport halfling from './dnd race images/halfling.png'\r\nimport halfOrc from './dnd race images/half-orc.png'\r\nimport human from './dnd race images/human.png'\r\nimport tiefling from './dnd race images/tiefling.png'\r\n\r\nclass DisplayRace extends Component {\r\n  render() {\r\n    const { index, name } = this.props\r\n    let bkgImage\r\n    index === 'dragonborn'\r\n      ? (bkgImage = dragonborn)\r\n      : index === 'dwarf'\r\n      ? (bkgImage = dwarf)\r\n      : index === 'elf'\r\n      ? (bkgImage = elf)\r\n      : index === 'gnome'\r\n      ? (bkgImage = gnome)\r\n      : index === 'half-elf'\r\n      ? (bkgImage = halfElf)\r\n      : index === 'halfling'\r\n      ? (bkgImage = halfling)\r\n      : index === 'half-orc'\r\n      ? (bkgImage = halfOrc)\r\n      : index === 'human'\r\n      ? (bkgImage = human)\r\n      : index === 'tiefling'\r\n      ? (bkgImage = tiefling)\r\n      : (bkgImage = '')\r\n\r\n    return (\r\n      <div className=\"race-preview\">\r\n        <div>\r\n          <img src={bkgImage} alt=\"race-image\" height=\"600px\" width=\"420px\" />\r\n        </div>\r\n        <Link to={`/races/${index}`}>{name}</Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DisplayRace\r\n","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\monsters\\DisplayMonster.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\profile\\displayUser\\UserProfile.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\profile\\displayCharacters\\DisplayUserCharacters.jsx",["343"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAllUserCharacters } from \"../../../redux/reducers\";\r\n\r\nimport { Link } from 'react-router-dom'\r\nclass DisplayUserCharacters extends Component {\r\n    constructor ( props ) {\r\n        super( props )\r\n    }\r\n\r\n    async componentDidMount () {\r\n        try {\r\n            await this.props.getAllUserCharacters( this.props.id );\r\n\r\n        } catch ( error ) {\r\n            console.log( error )\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div id=\"user-character-container\">\r\n                <h1>Characters</h1>\r\n                <div id=\"usercharacter\">\r\n                    { this.props.characters !== undefined ?\r\n                        this.props.characters.map( ( item, index ) => {\r\n                            return (\r\n                                <Link to={ `/character/${item.id}` } style={{ textDecoration: 'none' }}><h3 id = \"character-name\" key={ index }>{ item.name }</h3></Link>\r\n                            )\r\n                        } ) : <h1>Loading</h1>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        characters: state.characters.characters,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllUserCharacters: ( id ) => dispatch( getAllUserCharacters( id ) ),\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( DisplayUserCharacters );","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\Skill.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\Subclass.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\Proficiencies.jsx",["344"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../../../../css/individualclass.css'\r\nclass Proficiencies extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"profs\">\r\n        <Link\r\n          to={`/proficiencies/${this.props.classIndex}`}\r\n          style={{ textDecoration: 'none' }}\r\n        >\r\n          <h4 className=\"fix-h1-h2-h3-h4-name\">\r\n            \r\n            {this.props.name}\r\n          </h4>\r\n        </Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Proficiencies\r\n","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\Choices.jsx",["345"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport PChoices from './PChoices'\r\nimport '../../../../../css/individualclass.css'\r\nconst Choices = ({ choose, from }) => {\r\n  return (\r\n    <div>\r\n      <h3 className=\"fix-h1-h2-h3-h4\">Choose {choose} from:</h3>\r\n      <div id=\"p-choices\">\r\n        {from.map((item, index) => {\r\n          return (\r\n            <PChoices key={index} name={item.name} classIndex={item.index} />\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Choices\r\n","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\SavingThrows.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\SpellCasting.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\PChoices.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\SpellCastingInfo.jsx",["346"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SpellCastingDesc from './SpellCastingDesc'\r\nimport '../../../../../css/individualclass.css'\r\n\r\nconst SpellCastingInfo = ({ name, desc }) => {\r\n  return (\r\n    <div id=\"spell-cast\">\r\n      <h3 className=\"fix-h1-h2-h3-h4\">\r\n        Ability Name : {'  '}\r\n        {name}\r\n      </h3>\r\n      {desc.map((item, index) => {\r\n        return <SpellCastingDesc key={index} description={item} />\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SpellCastingInfo\r\n","Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\DisplayClass.jsx",[],"Y:\\TTP\\capstone\\capstone-frontend\\capstone_frontend\\src\\components\\classes\\classes\\displayClass\\individualClass\\SpellCastingDesc.jsx",["347"],"import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SpellCastingDesc = ({ description }) => {\r\n    \r\n    return(\r\n        <div>\r\n            <p>{description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpellCastingDesc;",{"ruleId":"348","replacedBy":"349"},{"ruleId":"350","replacedBy":"351"},{"ruleId":"352","severity":1,"message":"353","line":1,"column":8,"nodeType":"354","messageId":"355","endLine":1,"endColumn":13},{"ruleId":"352","severity":1,"message":"356","line":8,"column":9,"nodeType":"354","messageId":"355","endLine":8,"endColumn":13},{"ruleId":"357","severity":1,"message":"358","line":304,"column":9,"nodeType":"359","messageId":"360","endLine":304,"endColumn":83},{"ruleId":"361","severity":1,"message":"362","line":22,"column":9,"nodeType":"363","endLine":25,"endColumn":10},{"ruleId":"352","severity":1,"message":"364","line":2,"column":8,"nodeType":"354","messageId":"355","endLine":2,"endColumn":13},{"ruleId":"352","severity":1,"message":"365","line":3,"column":10,"nodeType":"354","messageId":"355","endLine":3,"endColumn":17},{"ruleId":"352","severity":1,"message":"366","line":4,"column":10,"nodeType":"354","messageId":"355","endLine":4,"endColumn":14},{"ruleId":"352","severity":1,"message":"364","line":1,"column":8,"nodeType":"354","messageId":"355","endLine":1,"endColumn":13},{"ruleId":"352","severity":1,"message":"367","line":7,"column":8,"nodeType":"354","messageId":"355","endLine":7,"endColumn":15},{"ruleId":"368","severity":1,"message":"369","line":11,"column":5,"nodeType":"370","messageId":"371","endLine":13,"endColumn":6},{"ruleId":"352","severity":1,"message":"364","line":1,"column":8,"nodeType":"354","messageId":"355","endLine":1,"endColumn":13},{"ruleId":"352","severity":1,"message":"366","line":3,"column":10,"nodeType":"354","messageId":"355","endLine":3,"endColumn":14},{"ruleId":"368","severity":1,"message":"369","line":11,"column":5,"nodeType":"370","messageId":"371","endLine":13,"endColumn":6},{"ruleId":"352","severity":1,"message":"364","line":1,"column":8,"nodeType":"354","messageId":"355","endLine":1,"endColumn":13},{"ruleId":"352","severity":1,"message":"366","line":3,"column":10,"nodeType":"354","messageId":"355","endLine":3,"endColumn":14},{"ruleId":"368","severity":1,"message":"369","line":12,"column":5,"nodeType":"370","messageId":"371","endLine":14,"endColumn":6},{"ruleId":"352","severity":1,"message":"365","line":3,"column":10,"nodeType":"354","messageId":"355","endLine":3,"endColumn":17},{"ruleId":"352","severity":1,"message":"366","line":4,"column":10,"nodeType":"354","messageId":"355","endLine":4,"endColumn":14},{"ruleId":"352","severity":1,"message":"366","line":6,"column":10,"nodeType":"354","messageId":"355","endLine":6,"endColumn":14},{"ruleId":"352","severity":1,"message":"365","line":3,"column":10,"nodeType":"354","messageId":"355","endLine":3,"endColumn":17},{"ruleId":"352","severity":1,"message":"366","line":4,"column":10,"nodeType":"354","messageId":"355","endLine":4,"endColumn":14},{"ruleId":"372","severity":1,"message":"373","line":53,"column":13,"nodeType":"363","endLine":53,"endColumn":59},{"ruleId":"368","severity":1,"message":"369","line":10,"column":5,"nodeType":"370","messageId":"371","endLine":13,"endColumn":6},{"ruleId":"374","severity":1,"message":"375","line":116,"column":48,"nodeType":"376","messageId":"377","endLine":116,"endColumn":49},{"ruleId":"352","severity":1,"message":"366","line":3,"column":10,"nodeType":"354","messageId":"355","endLine":3,"endColumn":14},{"ruleId":"368","severity":1,"message":"369","line":18,"column":3,"nodeType":"370","messageId":"371","endLine":20,"endColumn":4},{"ruleId":"372","severity":1,"message":"373","line":40,"column":23,"nodeType":"363","endLine":46,"endColumn":24},{"ruleId":"372","severity":1,"message":"373","line":49,"column":23,"nodeType":"363","endLine":55,"endColumn":24},{"ruleId":"372","severity":1,"message":"373","line":58,"column":23,"nodeType":"363","endLine":64,"endColumn":24},{"ruleId":"372","severity":1,"message":"373","line":67,"column":23,"nodeType":"363","endLine":73,"endColumn":24},{"ruleId":"372","severity":1,"message":"373","line":76,"column":23,"nodeType":"363","endLine":82,"endColumn":24},{"ruleId":"372","severity":1,"message":"373","line":85,"column":23,"nodeType":"363","endLine":91,"endColumn":24},{"ruleId":"372","severity":1,"message":"373","line":94,"column":23,"nodeType":"363","endLine":100,"endColumn":24},{"ruleId":"372","severity":1,"message":"373","line":103,"column":23,"nodeType":"363","endLine":109,"endColumn":24},{"ruleId":"372","severity":1,"message":"373","line":112,"column":23,"nodeType":"363","endLine":118,"endColumn":24},{"ruleId":"352","severity":1,"message":"364","line":3,"column":8,"nodeType":"354","messageId":"355","endLine":3,"endColumn":13},{"ruleId":"368","severity":1,"message":"369","line":8,"column":3,"nodeType":"370","messageId":"371","endLine":10,"endColumn":4},{"ruleId":"352","severity":1,"message":"364","line":1,"column":8,"nodeType":"354","messageId":"355","endLine":1,"endColumn":13},{"ruleId":"368","severity":1,"message":"369","line":15,"column":3,"nodeType":"370","messageId":"371","endLine":29,"endColumn":4},{"ruleId":"352","severity":1,"message":"365","line":3,"column":10,"nodeType":"354","messageId":"355","endLine":3,"endColumn":17},{"ruleId":"352","severity":1,"message":"366","line":4,"column":10,"nodeType":"354","messageId":"355","endLine":4,"endColumn":14},{"ruleId":"372","severity":1,"message":"373","line":41,"column":11,"nodeType":"363","endLine":41,"endColumn":79},{"ruleId":"368","severity":1,"message":"369","line":7,"column":5,"nodeType":"370","messageId":"371","endLine":9,"endColumn":6},{"ruleId":"368","severity":1,"message":"369","line":5,"column":3,"nodeType":"370","messageId":"371","endLine":7,"endColumn":4},{"ruleId":"352","severity":1,"message":"366","line":2,"column":10,"nodeType":"354","messageId":"355","endLine":2,"endColumn":14},{"ruleId":"352","severity":1,"message":"366","line":2,"column":10,"nodeType":"354","messageId":"355","endLine":2,"endColumn":14},{"ruleId":"352","severity":1,"message":"366","line":2,"column":10,"nodeType":"354","messageId":"355","endLine":2,"endColumn":14},"no-native-reassign",["378"],"no-negated-in-lhs",["379"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'bool' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","'connect' is defined but never used.","'Link' is defined but never used.","'Options' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]